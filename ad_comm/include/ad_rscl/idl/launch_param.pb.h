// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ad_rscl/idl/launch_param.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ad_5frscl_2fidl_2flaunch_5fparam_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ad_5frscl_2fidl_2flaunch_5fparam_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "ad_mw/proto/runtime_conf.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ad_5frscl_2fidl_2flaunch_5fparam_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ad_5frscl_2fidl_2flaunch_5fparam_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ad_5frscl_2fidl_2flaunch_5fparam_2eproto;
namespace senseAD {
class RuntimeResourceConfig;
class RuntimeResourceConfigDefaultTypeInternal;
extern RuntimeResourceConfigDefaultTypeInternal _RuntimeResourceConfig_default_instance_;
class RuntimeResourceConfig_ProcessResourceConfEntry_DoNotUse;
class RuntimeResourceConfig_ProcessResourceConfEntry_DoNotUseDefaultTypeInternal;
extern RuntimeResourceConfig_ProcessResourceConfEntry_DoNotUseDefaultTypeInternal _RuntimeResourceConfig_ProcessResourceConfEntry_DoNotUse_default_instance_;
}  // namespace senseAD
PROTOBUF_NAMESPACE_OPEN
template<> ::senseAD::RuntimeResourceConfig* Arena::CreateMaybeMessage<::senseAD::RuntimeResourceConfig>(Arena*);
template<> ::senseAD::RuntimeResourceConfig_ProcessResourceConfEntry_DoNotUse* Arena::CreateMaybeMessage<::senseAD::RuntimeResourceConfig_ProcessResourceConfEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace senseAD {

// ===================================================================

class RuntimeResourceConfig_ProcessResourceConfEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<RuntimeResourceConfig_ProcessResourceConfEntry_DoNotUse, 
    std::string, ::senseAD::mw::proto::RuntimeConfig,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<RuntimeResourceConfig_ProcessResourceConfEntry_DoNotUse, 
    std::string, ::senseAD::mw::proto::RuntimeConfig,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  RuntimeResourceConfig_ProcessResourceConfEntry_DoNotUse();
  explicit RuntimeResourceConfig_ProcessResourceConfEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const RuntimeResourceConfig_ProcessResourceConfEntry_DoNotUse& other);
  static const RuntimeResourceConfig_ProcessResourceConfEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const RuntimeResourceConfig_ProcessResourceConfEntry_DoNotUse*>(&_RuntimeResourceConfig_ProcessResourceConfEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
#ifndef NDEBUG
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
       s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "senseAD.RuntimeResourceConfig.ProcessResourceConfEntry.key");
#else
    (void) s;
#endif
    return true;
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ad_5frscl_2fidl_2flaunch_5fparam_2eproto);
    return ::descriptor_table_ad_5frscl_2fidl_2flaunch_5fparam_2eproto.file_level_metadata[0];
  }

  public:
};

// -------------------------------------------------------------------

class RuntimeResourceConfig PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:senseAD.RuntimeResourceConfig) */ {
 public:
  inline RuntimeResourceConfig() : RuntimeResourceConfig(nullptr) {}
  virtual ~RuntimeResourceConfig();

  RuntimeResourceConfig(const RuntimeResourceConfig& from);
  RuntimeResourceConfig(RuntimeResourceConfig&& from) noexcept
    : RuntimeResourceConfig() {
    *this = ::std::move(from);
  }

  inline RuntimeResourceConfig& operator=(const RuntimeResourceConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline RuntimeResourceConfig& operator=(RuntimeResourceConfig&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RuntimeResourceConfig& default_instance();

  static inline const RuntimeResourceConfig* internal_default_instance() {
    return reinterpret_cast<const RuntimeResourceConfig*>(
               &_RuntimeResourceConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(RuntimeResourceConfig& a, RuntimeResourceConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(RuntimeResourceConfig* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RuntimeResourceConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RuntimeResourceConfig* New() const final {
    return CreateMaybeMessage<RuntimeResourceConfig>(nullptr);
  }

  RuntimeResourceConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RuntimeResourceConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RuntimeResourceConfig& from);
  void MergeFrom(const RuntimeResourceConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RuntimeResourceConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "senseAD.RuntimeResourceConfig";
  }
  protected:
  explicit RuntimeResourceConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ad_5frscl_2fidl_2flaunch_5fparam_2eproto);
    return ::descriptor_table_ad_5frscl_2fidl_2flaunch_5fparam_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kProcessResourceConfFieldNumber = 1,
    kDebugModeFieldNumber = 2,
    kUnittestModeFieldNumber = 3,
  };
  // map<string, .senseAD.mw.proto.RuntimeConfig> process_resource_conf = 1;
  int process_resource_conf_size() const;
  private:
  int _internal_process_resource_conf_size() const;
  public:
  void clear_process_resource_conf();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::senseAD::mw::proto::RuntimeConfig >&
      _internal_process_resource_conf() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::senseAD::mw::proto::RuntimeConfig >*
      _internal_mutable_process_resource_conf();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::senseAD::mw::proto::RuntimeConfig >&
      process_resource_conf() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::senseAD::mw::proto::RuntimeConfig >*
      mutable_process_resource_conf();

  // optional bool debug_mode = 2 [default = false];
  bool has_debug_mode() const;
  private:
  bool _internal_has_debug_mode() const;
  public:
  void clear_debug_mode();
  bool debug_mode() const;
  void set_debug_mode(bool value);
  private:
  bool _internal_debug_mode() const;
  void _internal_set_debug_mode(bool value);
  public:

  // optional bool unittest_mode = 3 [default = false];
  bool has_unittest_mode() const;
  private:
  bool _internal_has_unittest_mode() const;
  public:
  void clear_unittest_mode();
  bool unittest_mode() const;
  void set_unittest_mode(bool value);
  private:
  bool _internal_unittest_mode() const;
  void _internal_set_unittest_mode(bool value);
  public:

  // @@protoc_insertion_point(class_scope:senseAD.RuntimeResourceConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      RuntimeResourceConfig_ProcessResourceConfEntry_DoNotUse,
      std::string, ::senseAD::mw::proto::RuntimeConfig,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> process_resource_conf_;
  bool debug_mode_;
  bool unittest_mode_;
  friend struct ::TableStruct_ad_5frscl_2fidl_2flaunch_5fparam_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// RuntimeResourceConfig

// map<string, .senseAD.mw.proto.RuntimeConfig> process_resource_conf = 1;
inline int RuntimeResourceConfig::_internal_process_resource_conf_size() const {
  return process_resource_conf_.size();
}
inline int RuntimeResourceConfig::process_resource_conf_size() const {
  return _internal_process_resource_conf_size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::senseAD::mw::proto::RuntimeConfig >&
RuntimeResourceConfig::_internal_process_resource_conf() const {
  return process_resource_conf_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::senseAD::mw::proto::RuntimeConfig >&
RuntimeResourceConfig::process_resource_conf() const {
  // @@protoc_insertion_point(field_map:senseAD.RuntimeResourceConfig.process_resource_conf)
  return _internal_process_resource_conf();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::senseAD::mw::proto::RuntimeConfig >*
RuntimeResourceConfig::_internal_mutable_process_resource_conf() {
  return process_resource_conf_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::senseAD::mw::proto::RuntimeConfig >*
RuntimeResourceConfig::mutable_process_resource_conf() {
  // @@protoc_insertion_point(field_mutable_map:senseAD.RuntimeResourceConfig.process_resource_conf)
  return _internal_mutable_process_resource_conf();
}

// optional bool debug_mode = 2 [default = false];
inline bool RuntimeResourceConfig::_internal_has_debug_mode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool RuntimeResourceConfig::has_debug_mode() const {
  return _internal_has_debug_mode();
}
inline void RuntimeResourceConfig::clear_debug_mode() {
  debug_mode_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool RuntimeResourceConfig::_internal_debug_mode() const {
  return debug_mode_;
}
inline bool RuntimeResourceConfig::debug_mode() const {
  // @@protoc_insertion_point(field_get:senseAD.RuntimeResourceConfig.debug_mode)
  return _internal_debug_mode();
}
inline void RuntimeResourceConfig::_internal_set_debug_mode(bool value) {
  _has_bits_[0] |= 0x00000001u;
  debug_mode_ = value;
}
inline void RuntimeResourceConfig::set_debug_mode(bool value) {
  _internal_set_debug_mode(value);
  // @@protoc_insertion_point(field_set:senseAD.RuntimeResourceConfig.debug_mode)
}

// optional bool unittest_mode = 3 [default = false];
inline bool RuntimeResourceConfig::_internal_has_unittest_mode() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool RuntimeResourceConfig::has_unittest_mode() const {
  return _internal_has_unittest_mode();
}
inline void RuntimeResourceConfig::clear_unittest_mode() {
  unittest_mode_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool RuntimeResourceConfig::_internal_unittest_mode() const {
  return unittest_mode_;
}
inline bool RuntimeResourceConfig::unittest_mode() const {
  // @@protoc_insertion_point(field_get:senseAD.RuntimeResourceConfig.unittest_mode)
  return _internal_unittest_mode();
}
inline void RuntimeResourceConfig::_internal_set_unittest_mode(bool value) {
  _has_bits_[0] |= 0x00000002u;
  unittest_mode_ = value;
}
inline void RuntimeResourceConfig::set_unittest_mode(bool value) {
  _internal_set_unittest_mode(value);
  // @@protoc_insertion_point(field_set:senseAD.RuntimeResourceConfig.unittest_mode)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace senseAD

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ad_5frscl_2fidl_2flaunch_5fparam_2eproto
