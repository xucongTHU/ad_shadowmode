// Copyright (C) By SenseTime Group Limited. All rights reserved.
// Kit Fung <fengzhongjie@senseauto.com>
// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: ad_rscl/idl/cuda_message.capnp

#pragma once

#include <string>
#include <vector>
#include <tuple>

#include <ad_rscl/idl/cuda_message.capnp.h>


namespace senseAD {
namespace rscl {

struct CudaShmNewMessageNotification {
    using CapnpType = ::senseAD::rscl::idl::CudaShmNewMessageNotification;

    uint64_t publisherPid = 0;
    std::string publisherUid;
    uint64_t seq = 0;

    bool SerializeToCapnp(
        ::senseAD::rscl::CudaShmNewMessageNotification::CapnpType::Builder root) const;
    bool DeserializeFromCapnp(
        ::senseAD::rscl::CudaShmNewMessageNotification::CapnpType::Reader root);

    std::string DebugString(const bool detail = false, std::string linePrefix = "") const;
    template <typename F>
    void Enumerate(F &&fn) const {
        fn(publisherPid);
        fn(publisherUid);
        fn(seq);
    }
    inline auto Tied() const {
        return std::tie(publisherPid, publisherUid, seq);
    }
};

}  // namespace
}  // namespace

