syntax = "proto2";

package senseAD.rscl.idl;

import "ad_rscl/idl/rscl_qos_profile.proto";

enum SuffixType {
    NONE = 0;
    NODE_NAME = 1;
    NODE_NAMESPACE = 2;
    PID = 3;
}

message PublisherConf {
    required string channel_name = 1;
    optional QosProfile qos_profile = 2;

    // For service discovery. For case that the template type is RawMessage
    optional string msg_type = 3;
    optional string msg_descriptor = 4;

    optional uint32 msg_serialized_max_size = 5;

    optional bool disable_hetero = 6 [default = false];

    optional SuffixType suffix_type = 7 [default = NONE];

    // For external only
    optional bool internal_compat = 8 [default = true];

    optional bool disable_cross_system = 9 [default = false];

    optional bool enable_checksome = 10 [default = false];
};

message SubscriberConf {
    required string channel_name = 1;
    optional QosProfile qos_profile = 2;
    // if set default_disable_callback=true,
    // callback will trigger after component::OnInit
    optional bool default_disable_callback = 3 [default = false];

    optional uint32 msg_serialized_max_size = 4;

    optional bool disable_hetero = 5 [default = false];
    optional SuffixType suffix_type = 6 [default = NONE];

    // For external only
    optional bool internal_compat = 7 [default = true];
    // For service discovery. For case that the template type is RawMessage
    optional string msg_type = 8;
    optional string msg_descriptor = 9;

    optional bool disable_transmit_eval = 10 [default = false];
    optional bool advance_verification = 11 [default = false];
};

message ServiceConf {
    required string service_name = 1;

    optional PriorityLevel priority_level = 2 [default = USER_UTILITY];

    optional uint64 thread_num = 3 [default = 1];
};

message ClientConf {
    required string service_name = 1;

    optional PriorityLevel priority_level = 2 [default = USER_UTILITY];
};
