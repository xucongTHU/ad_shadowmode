// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: prediction.capnp

#pragma once

#include <capnp/generated-header-support.h>
#include <kj/windows-sanity.h>

#if CAPNP_VERSION != 10002
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif

#include <ad_msg_idl/std_msgs/geometry.capnp.h>
#include <ad_msg_idl/std_msgs/header.capnp.h>

CAPNP_BEGIN_HEADER

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(82294306f1655255);
CAPNP_DECLARE_SCHEMA(e1c09ad02f4b894d);
CAPNP_DECLARE_SCHEMA(ce5e9633ee402ba3);
CAPNP_DECLARE_SCHEMA(c593826ec866b3e8);

}  // namespace schemas
}  // namespace capnp

namespace senseAD {
namespace msg {
namespace prediction {

struct PredictionTrajectoryPoint {
  PredictionTrajectoryPoint() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(82294306f1655255, 1, 6)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct PredictionTrajectory {
  PredictionTrajectory() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(e1c09ad02f4b894d, 3, 4)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct PredictionObject {
  PredictionObject() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(ce5e9633ee402ba3, 6, 9)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct Prediction {
  Prediction() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(c593826ec866b3e8, 2, 2)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

class PredictionTrajectoryPoint::Reader {
public:
  typedef PredictionTrajectoryPoint Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasPolygonContour() const;
  inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Reader getPolygonContour() const;

  inline bool hasPosition() const;
  inline  ::senseAD::msg::std_msgs::Point::Reader getPosition() const;

  inline bool hasDirection() const;
  inline  ::senseAD::msg::std_msgs::Point::Reader getDirection() const;

  inline bool hasSpeed() const;
  inline  ::senseAD::msg::std_msgs::Point::Reader getSpeed() const;

  inline bool hasVariancePosition() const;
  inline  ::senseAD::msg::std_msgs::Point::Reader getVariancePosition() const;

  inline bool hasVarianceSpeed() const;
  inline  ::senseAD::msg::std_msgs::Point::Reader getVarianceSpeed() const;

  inline float getCovariancePosition() const;

  inline float getCovarianceSpeed() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class PredictionTrajectoryPoint::Builder {
public:
  typedef PredictionTrajectoryPoint Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasPolygonContour();
  inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Builder getPolygonContour();
  inline void setPolygonContour( ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Builder initPolygonContour(unsigned int size);
  inline void adoptPolygonContour(::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>> disownPolygonContour();

  inline bool hasPosition();
  inline  ::senseAD::msg::std_msgs::Point::Builder getPosition();
  inline void setPosition( ::senseAD::msg::std_msgs::Point::Reader value);
  inline  ::senseAD::msg::std_msgs::Point::Builder initPosition();
  inline void adoptPosition(::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> disownPosition();

  inline bool hasDirection();
  inline  ::senseAD::msg::std_msgs::Point::Builder getDirection();
  inline void setDirection( ::senseAD::msg::std_msgs::Point::Reader value);
  inline  ::senseAD::msg::std_msgs::Point::Builder initDirection();
  inline void adoptDirection(::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> disownDirection();

  inline bool hasSpeed();
  inline  ::senseAD::msg::std_msgs::Point::Builder getSpeed();
  inline void setSpeed( ::senseAD::msg::std_msgs::Point::Reader value);
  inline  ::senseAD::msg::std_msgs::Point::Builder initSpeed();
  inline void adoptSpeed(::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> disownSpeed();

  inline bool hasVariancePosition();
  inline  ::senseAD::msg::std_msgs::Point::Builder getVariancePosition();
  inline void setVariancePosition( ::senseAD::msg::std_msgs::Point::Reader value);
  inline  ::senseAD::msg::std_msgs::Point::Builder initVariancePosition();
  inline void adoptVariancePosition(::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> disownVariancePosition();

  inline bool hasVarianceSpeed();
  inline  ::senseAD::msg::std_msgs::Point::Builder getVarianceSpeed();
  inline void setVarianceSpeed( ::senseAD::msg::std_msgs::Point::Reader value);
  inline  ::senseAD::msg::std_msgs::Point::Builder initVarianceSpeed();
  inline void adoptVarianceSpeed(::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> disownVarianceSpeed();

  inline float getCovariancePosition();
  inline void setCovariancePosition(float value);

  inline float getCovarianceSpeed();
  inline void setCovarianceSpeed(float value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class PredictionTrajectoryPoint::Pipeline {
public:
  typedef PredictionTrajectoryPoint Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::std_msgs::Point::Pipeline getPosition();
  inline  ::senseAD::msg::std_msgs::Point::Pipeline getDirection();
  inline  ::senseAD::msg::std_msgs::Point::Pipeline getSpeed();
  inline  ::senseAD::msg::std_msgs::Point::Pipeline getVariancePosition();
  inline  ::senseAD::msg::std_msgs::Point::Pipeline getVarianceSpeed();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class PredictionTrajectory::Reader {
public:
  typedef PredictionTrajectory Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasPredictorName() const;
  inline  ::capnp::Text::Reader getPredictorName() const;

  inline bool hasTargetRoadId() const;
  inline  ::capnp::Text::Reader getTargetRoadId() const;

  inline bool hasTargetLaneId() const;
  inline  ::capnp::Text::Reader getTargetLaneId() const;

  inline  ::uint64_t getPointIntervalTimeNs() const;

  inline  ::uint32_t getNumPoints() const;

  inline bool hasTrajectoryPointArray() const;
  inline  ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectoryPoint,  ::capnp::Kind::STRUCT>::Reader getTrajectoryPointArray() const;

  inline bool getIsAbnormal() const;

  inline bool getIsCollision() const;

  inline bool getIsSelected() const;

  inline float getProbability() const;

  inline float getScore() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class PredictionTrajectory::Builder {
public:
  typedef PredictionTrajectory Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasPredictorName();
  inline  ::capnp::Text::Builder getPredictorName();
  inline void setPredictorName( ::capnp::Text::Reader value);
  inline  ::capnp::Text::Builder initPredictorName(unsigned int size);
  inline void adoptPredictorName(::capnp::Orphan< ::capnp::Text>&& value);
  inline ::capnp::Orphan< ::capnp::Text> disownPredictorName();

  inline bool hasTargetRoadId();
  inline  ::capnp::Text::Builder getTargetRoadId();
  inline void setTargetRoadId( ::capnp::Text::Reader value);
  inline  ::capnp::Text::Builder initTargetRoadId(unsigned int size);
  inline void adoptTargetRoadId(::capnp::Orphan< ::capnp::Text>&& value);
  inline ::capnp::Orphan< ::capnp::Text> disownTargetRoadId();

  inline bool hasTargetLaneId();
  inline  ::capnp::Text::Builder getTargetLaneId();
  inline void setTargetLaneId( ::capnp::Text::Reader value);
  inline  ::capnp::Text::Builder initTargetLaneId(unsigned int size);
  inline void adoptTargetLaneId(::capnp::Orphan< ::capnp::Text>&& value);
  inline ::capnp::Orphan< ::capnp::Text> disownTargetLaneId();

  inline  ::uint64_t getPointIntervalTimeNs();
  inline void setPointIntervalTimeNs( ::uint64_t value);

  inline  ::uint32_t getNumPoints();
  inline void setNumPoints( ::uint32_t value);

  inline bool hasTrajectoryPointArray();
  inline  ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectoryPoint,  ::capnp::Kind::STRUCT>::Builder getTrajectoryPointArray();
  inline void setTrajectoryPointArray( ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectoryPoint,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectoryPoint,  ::capnp::Kind::STRUCT>::Builder initTrajectoryPointArray(unsigned int size);
  inline void adoptTrajectoryPointArray(::capnp::Orphan< ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectoryPoint,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectoryPoint,  ::capnp::Kind::STRUCT>> disownTrajectoryPointArray();

  inline bool getIsAbnormal();
  inline void setIsAbnormal(bool value);

  inline bool getIsCollision();
  inline void setIsCollision(bool value);

  inline bool getIsSelected();
  inline void setIsSelected(bool value);

  inline float getProbability();
  inline void setProbability(float value);

  inline float getScore();
  inline void setScore(float value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class PredictionTrajectory::Pipeline {
public:
  typedef PredictionTrajectory Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class PredictionObject::Reader {
public:
  typedef PredictionObject Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::int32_t getId() const;

  inline  ::uint32_t getObstacleTypeEnum() const;

  inline  ::uint32_t getObjectLabelEnum() const;

  inline float getLengthM() const;

  inline float getWidthM() const;

  inline float getHeightM() const;

  inline bool hasPolygonContour() const;
  inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Reader getPolygonContour() const;

  inline bool hasPosition() const;
  inline  ::senseAD::msg::std_msgs::Point::Reader getPosition() const;

  inline bool hasSpeed() const;
  inline  ::senseAD::msg::std_msgs::Point::Reader getSpeed() const;

  inline bool hasAcceleration() const;
  inline  ::senseAD::msg::std_msgs::Point::Reader getAcceleration() const;

  inline bool hasHeadingDirection() const;
  inline  ::senseAD::msg::std_msgs::Point::Reader getHeadingDirection() const;

  inline  ::uint32_t getInfoStateEnum() const;

  inline  ::uint32_t getSceneTypeEnum() const;

  inline  ::uint32_t getImportanceLevelEnum() const;

  inline  ::uint32_t getMoveStep() const;

  inline  ::uint32_t getIntentionType() const;

  inline bool hasTargetRoadId() const;
  inline  ::capnp::Text::Reader getTargetRoadId() const;

  inline bool hasTargetLaneId() const;
  inline  ::capnp::Text::Reader getTargetLaneId() const;

  inline bool hasTrajectoryArray() const;
  inline  ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectory,  ::capnp::Kind::STRUCT>::Reader getTrajectoryArray() const;

  inline bool hasHistoryTrajectoryPoints() const;
  inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Reader getHistoryTrajectoryPoints() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class PredictionObject::Builder {
public:
  typedef PredictionObject Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::int32_t getId();
  inline void setId( ::int32_t value);

  inline  ::uint32_t getObstacleTypeEnum();
  inline void setObstacleTypeEnum( ::uint32_t value);

  inline  ::uint32_t getObjectLabelEnum();
  inline void setObjectLabelEnum( ::uint32_t value);

  inline float getLengthM();
  inline void setLengthM(float value);

  inline float getWidthM();
  inline void setWidthM(float value);

  inline float getHeightM();
  inline void setHeightM(float value);

  inline bool hasPolygonContour();
  inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Builder getPolygonContour();
  inline void setPolygonContour( ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Builder initPolygonContour(unsigned int size);
  inline void adoptPolygonContour(::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>> disownPolygonContour();

  inline bool hasPosition();
  inline  ::senseAD::msg::std_msgs::Point::Builder getPosition();
  inline void setPosition( ::senseAD::msg::std_msgs::Point::Reader value);
  inline  ::senseAD::msg::std_msgs::Point::Builder initPosition();
  inline void adoptPosition(::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> disownPosition();

  inline bool hasSpeed();
  inline  ::senseAD::msg::std_msgs::Point::Builder getSpeed();
  inline void setSpeed( ::senseAD::msg::std_msgs::Point::Reader value);
  inline  ::senseAD::msg::std_msgs::Point::Builder initSpeed();
  inline void adoptSpeed(::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> disownSpeed();

  inline bool hasAcceleration();
  inline  ::senseAD::msg::std_msgs::Point::Builder getAcceleration();
  inline void setAcceleration( ::senseAD::msg::std_msgs::Point::Reader value);
  inline  ::senseAD::msg::std_msgs::Point::Builder initAcceleration();
  inline void adoptAcceleration(::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> disownAcceleration();

  inline bool hasHeadingDirection();
  inline  ::senseAD::msg::std_msgs::Point::Builder getHeadingDirection();
  inline void setHeadingDirection( ::senseAD::msg::std_msgs::Point::Reader value);
  inline  ::senseAD::msg::std_msgs::Point::Builder initHeadingDirection();
  inline void adoptHeadingDirection(::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> disownHeadingDirection();

  inline  ::uint32_t getInfoStateEnum();
  inline void setInfoStateEnum( ::uint32_t value);

  inline  ::uint32_t getSceneTypeEnum();
  inline void setSceneTypeEnum( ::uint32_t value);

  inline  ::uint32_t getImportanceLevelEnum();
  inline void setImportanceLevelEnum( ::uint32_t value);

  inline  ::uint32_t getMoveStep();
  inline void setMoveStep( ::uint32_t value);

  inline  ::uint32_t getIntentionType();
  inline void setIntentionType( ::uint32_t value);

  inline bool hasTargetRoadId();
  inline  ::capnp::Text::Builder getTargetRoadId();
  inline void setTargetRoadId( ::capnp::Text::Reader value);
  inline  ::capnp::Text::Builder initTargetRoadId(unsigned int size);
  inline void adoptTargetRoadId(::capnp::Orphan< ::capnp::Text>&& value);
  inline ::capnp::Orphan< ::capnp::Text> disownTargetRoadId();

  inline bool hasTargetLaneId();
  inline  ::capnp::Text::Builder getTargetLaneId();
  inline void setTargetLaneId( ::capnp::Text::Reader value);
  inline  ::capnp::Text::Builder initTargetLaneId(unsigned int size);
  inline void adoptTargetLaneId(::capnp::Orphan< ::capnp::Text>&& value);
  inline ::capnp::Orphan< ::capnp::Text> disownTargetLaneId();

  inline bool hasTrajectoryArray();
  inline  ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectory,  ::capnp::Kind::STRUCT>::Builder getTrajectoryArray();
  inline void setTrajectoryArray( ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectory,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectory,  ::capnp::Kind::STRUCT>::Builder initTrajectoryArray(unsigned int size);
  inline void adoptTrajectoryArray(::capnp::Orphan< ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectory,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectory,  ::capnp::Kind::STRUCT>> disownTrajectoryArray();

  inline bool hasHistoryTrajectoryPoints();
  inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Builder getHistoryTrajectoryPoints();
  inline void setHistoryTrajectoryPoints( ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Builder initHistoryTrajectoryPoints(unsigned int size);
  inline void adoptHistoryTrajectoryPoints(::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>> disownHistoryTrajectoryPoints();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class PredictionObject::Pipeline {
public:
  typedef PredictionObject Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::std_msgs::Point::Pipeline getPosition();
  inline  ::senseAD::msg::std_msgs::Point::Pipeline getSpeed();
  inline  ::senseAD::msg::std_msgs::Point::Pipeline getAcceleration();
  inline  ::senseAD::msg::std_msgs::Point::Pipeline getHeadingDirection();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class Prediction::Reader {
public:
  typedef Prediction Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasHeader() const;
  inline  ::senseAD::msg::std_msgs::Header::Reader getHeader() const;

  inline  ::uint64_t getPredictionTimeNs() const;

  inline  ::uint64_t getFusionTimeNs() const;

  inline bool hasObjectList() const;
  inline  ::capnp::List< ::senseAD::msg::prediction::PredictionObject,  ::capnp::Kind::STRUCT>::Reader getObjectList() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Prediction::Builder {
public:
  typedef Prediction Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasHeader();
  inline  ::senseAD::msg::std_msgs::Header::Builder getHeader();
  inline void setHeader( ::senseAD::msg::std_msgs::Header::Reader value);
  inline  ::senseAD::msg::std_msgs::Header::Builder initHeader();
  inline void adoptHeader(::capnp::Orphan< ::senseAD::msg::std_msgs::Header>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Header> disownHeader();

  inline  ::uint64_t getPredictionTimeNs();
  inline void setPredictionTimeNs( ::uint64_t value);

  inline  ::uint64_t getFusionTimeNs();
  inline void setFusionTimeNs( ::uint64_t value);

  inline bool hasObjectList();
  inline  ::capnp::List< ::senseAD::msg::prediction::PredictionObject,  ::capnp::Kind::STRUCT>::Builder getObjectList();
  inline void setObjectList( ::capnp::List< ::senseAD::msg::prediction::PredictionObject,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::senseAD::msg::prediction::PredictionObject,  ::capnp::Kind::STRUCT>::Builder initObjectList(unsigned int size);
  inline void adoptObjectList(::capnp::Orphan< ::capnp::List< ::senseAD::msg::prediction::PredictionObject,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::prediction::PredictionObject,  ::capnp::Kind::STRUCT>> disownObjectList();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Prediction::Pipeline {
public:
  typedef Prediction Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::std_msgs::Header::Pipeline getHeader();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

inline bool PredictionTrajectoryPoint::Reader::hasPolygonContour() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool PredictionTrajectoryPoint::Builder::hasPolygonContour() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Reader PredictionTrajectoryPoint::Reader::getPolygonContour() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Builder PredictionTrajectoryPoint::Builder::getPolygonContour() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void PredictionTrajectoryPoint::Builder::setPolygonContour( ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Builder PredictionTrajectoryPoint::Builder::initPolygonContour(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), size);
}
inline void PredictionTrajectoryPoint::Builder::adoptPolygonContour(
    ::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>> PredictionTrajectoryPoint::Builder::disownPolygonContour() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool PredictionTrajectoryPoint::Reader::hasPosition() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool PredictionTrajectoryPoint::Builder::hasPosition() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::std_msgs::Point::Reader PredictionTrajectoryPoint::Reader::getPosition() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::std_msgs::Point::Builder PredictionTrajectoryPoint::Builder::getPosition() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::std_msgs::Point::Pipeline PredictionTrajectoryPoint::Pipeline::getPosition() {
  return  ::senseAD::msg::std_msgs::Point::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void PredictionTrajectoryPoint::Builder::setPosition( ::senseAD::msg::std_msgs::Point::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::std_msgs::Point::Builder PredictionTrajectoryPoint::Builder::initPosition() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void PredictionTrajectoryPoint::Builder::adoptPosition(
    ::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> PredictionTrajectoryPoint::Builder::disownPosition() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool PredictionTrajectoryPoint::Reader::hasDirection() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool PredictionTrajectoryPoint::Builder::hasDirection() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::std_msgs::Point::Reader PredictionTrajectoryPoint::Reader::getDirection() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::std_msgs::Point::Builder PredictionTrajectoryPoint::Builder::getDirection() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::std_msgs::Point::Pipeline PredictionTrajectoryPoint::Pipeline::getDirection() {
  return  ::senseAD::msg::std_msgs::Point::Pipeline(_typeless.getPointerField(2));
}
#endif  // !CAPNP_LITE
inline void PredictionTrajectoryPoint::Builder::setDirection( ::senseAD::msg::std_msgs::Point::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::std_msgs::Point::Builder PredictionTrajectoryPoint::Builder::initDirection() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void PredictionTrajectoryPoint::Builder::adoptDirection(
    ::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> PredictionTrajectoryPoint::Builder::disownDirection() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool PredictionTrajectoryPoint::Reader::hasSpeed() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool PredictionTrajectoryPoint::Builder::hasSpeed() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::std_msgs::Point::Reader PredictionTrajectoryPoint::Reader::getSpeed() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::std_msgs::Point::Builder PredictionTrajectoryPoint::Builder::getSpeed() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::std_msgs::Point::Pipeline PredictionTrajectoryPoint::Pipeline::getSpeed() {
  return  ::senseAD::msg::std_msgs::Point::Pipeline(_typeless.getPointerField(3));
}
#endif  // !CAPNP_LITE
inline void PredictionTrajectoryPoint::Builder::setSpeed( ::senseAD::msg::std_msgs::Point::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::std_msgs::Point::Builder PredictionTrajectoryPoint::Builder::initSpeed() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void PredictionTrajectoryPoint::Builder::adoptSpeed(
    ::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> PredictionTrajectoryPoint::Builder::disownSpeed() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline bool PredictionTrajectoryPoint::Reader::hasVariancePosition() const {
  return !_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline bool PredictionTrajectoryPoint::Builder::hasVariancePosition() {
  return !_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::std_msgs::Point::Reader PredictionTrajectoryPoint::Reader::getVariancePosition() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::std_msgs::Point::Builder PredictionTrajectoryPoint::Builder::getVariancePosition() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::std_msgs::Point::Pipeline PredictionTrajectoryPoint::Pipeline::getVariancePosition() {
  return  ::senseAD::msg::std_msgs::Point::Pipeline(_typeless.getPointerField(4));
}
#endif  // !CAPNP_LITE
inline void PredictionTrajectoryPoint::Builder::setVariancePosition( ::senseAD::msg::std_msgs::Point::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::set(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::std_msgs::Point::Builder PredictionTrajectoryPoint::Builder::initVariancePosition() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::init(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline void PredictionTrajectoryPoint::Builder::adoptVariancePosition(
    ::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::adopt(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> PredictionTrajectoryPoint::Builder::disownVariancePosition() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::disown(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}

inline bool PredictionTrajectoryPoint::Reader::hasVarianceSpeed() const {
  return !_reader.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS).isNull();
}
inline bool PredictionTrajectoryPoint::Builder::hasVarianceSpeed() {
  return !_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::std_msgs::Point::Reader PredictionTrajectoryPoint::Reader::getVarianceSpeed() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_reader.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::std_msgs::Point::Builder PredictionTrajectoryPoint::Builder::getVarianceSpeed() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::std_msgs::Point::Pipeline PredictionTrajectoryPoint::Pipeline::getVarianceSpeed() {
  return  ::senseAD::msg::std_msgs::Point::Pipeline(_typeless.getPointerField(5));
}
#endif  // !CAPNP_LITE
inline void PredictionTrajectoryPoint::Builder::setVarianceSpeed( ::senseAD::msg::std_msgs::Point::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::set(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::std_msgs::Point::Builder PredictionTrajectoryPoint::Builder::initVarianceSpeed() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::init(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
inline void PredictionTrajectoryPoint::Builder::adoptVarianceSpeed(
    ::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::adopt(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> PredictionTrajectoryPoint::Builder::disownVarianceSpeed() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::disown(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}

inline float PredictionTrajectoryPoint::Reader::getCovariancePosition() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline float PredictionTrajectoryPoint::Builder::getCovariancePosition() {
  return _builder.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void PredictionTrajectoryPoint::Builder::setCovariancePosition(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline float PredictionTrajectoryPoint::Reader::getCovarianceSpeed() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline float PredictionTrajectoryPoint::Builder::getCovarianceSpeed() {
  return _builder.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void PredictionTrajectoryPoint::Builder::setCovarianceSpeed(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline bool PredictionTrajectory::Reader::hasPredictorName() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool PredictionTrajectory::Builder::hasPredictorName() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::Text::Reader PredictionTrajectory::Reader::getPredictorName() const {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::capnp::Text::Builder PredictionTrajectory::Builder::getPredictorName() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void PredictionTrajectory::Builder::setPredictorName( ::capnp::Text::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::capnp::Text::Builder PredictionTrajectory::Builder::initPredictorName(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), size);
}
inline void PredictionTrajectory::Builder::adoptPredictorName(
    ::capnp::Orphan< ::capnp::Text>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::Text> PredictionTrajectory::Builder::disownPredictorName() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool PredictionTrajectory::Reader::hasTargetRoadId() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool PredictionTrajectory::Builder::hasTargetRoadId() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::Text::Reader PredictionTrajectory::Reader::getTargetRoadId() const {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::capnp::Text::Builder PredictionTrajectory::Builder::getTargetRoadId() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void PredictionTrajectory::Builder::setTargetRoadId( ::capnp::Text::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::capnp::Text::Builder PredictionTrajectory::Builder::initTargetRoadId(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), size);
}
inline void PredictionTrajectory::Builder::adoptTargetRoadId(
    ::capnp::Orphan< ::capnp::Text>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::Text> PredictionTrajectory::Builder::disownTargetRoadId() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool PredictionTrajectory::Reader::hasTargetLaneId() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool PredictionTrajectory::Builder::hasTargetLaneId() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::Text::Reader PredictionTrajectory::Reader::getTargetLaneId() const {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::capnp::Text::Builder PredictionTrajectory::Builder::getTargetLaneId() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void PredictionTrajectory::Builder::setTargetLaneId( ::capnp::Text::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::capnp::Text::Builder PredictionTrajectory::Builder::initTargetLaneId(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), size);
}
inline void PredictionTrajectory::Builder::adoptTargetLaneId(
    ::capnp::Orphan< ::capnp::Text>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::Text> PredictionTrajectory::Builder::disownTargetLaneId() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline  ::uint64_t PredictionTrajectory::Reader::getPointIntervalTimeNs() const {
  return _reader.getDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint64_t PredictionTrajectory::Builder::getPointIntervalTimeNs() {
  return _builder.getDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void PredictionTrajectory::Builder::setPointIntervalTimeNs( ::uint64_t value) {
  _builder.setDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t PredictionTrajectory::Reader::getNumPoints() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t PredictionTrajectory::Builder::getNumPoints() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void PredictionTrajectory::Builder::setNumPoints( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline bool PredictionTrajectory::Reader::hasTrajectoryPointArray() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool PredictionTrajectory::Builder::hasTrajectoryPointArray() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectoryPoint,  ::capnp::Kind::STRUCT>::Reader PredictionTrajectory::Reader::getTrajectoryPointArray() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectoryPoint,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectoryPoint,  ::capnp::Kind::STRUCT>::Builder PredictionTrajectory::Builder::getTrajectoryPointArray() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectoryPoint,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void PredictionTrajectory::Builder::setTrajectoryPointArray( ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectoryPoint,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectoryPoint,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectoryPoint,  ::capnp::Kind::STRUCT>::Builder PredictionTrajectory::Builder::initTrajectoryPointArray(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectoryPoint,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), size);
}
inline void PredictionTrajectory::Builder::adoptTrajectoryPointArray(
    ::capnp::Orphan< ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectoryPoint,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectoryPoint,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectoryPoint,  ::capnp::Kind::STRUCT>> PredictionTrajectory::Builder::disownTrajectoryPointArray() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectoryPoint,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline bool PredictionTrajectory::Reader::getIsAbnormal() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<96>() * ::capnp::ELEMENTS);
}

inline bool PredictionTrajectory::Builder::getIsAbnormal() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<96>() * ::capnp::ELEMENTS);
}
inline void PredictionTrajectory::Builder::setIsAbnormal(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<96>() * ::capnp::ELEMENTS, value);
}

inline bool PredictionTrajectory::Reader::getIsCollision() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<97>() * ::capnp::ELEMENTS);
}

inline bool PredictionTrajectory::Builder::getIsCollision() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<97>() * ::capnp::ELEMENTS);
}
inline void PredictionTrajectory::Builder::setIsCollision(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<97>() * ::capnp::ELEMENTS, value);
}

inline bool PredictionTrajectory::Reader::getIsSelected() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<98>() * ::capnp::ELEMENTS);
}

inline bool PredictionTrajectory::Builder::getIsSelected() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<98>() * ::capnp::ELEMENTS);
}
inline void PredictionTrajectory::Builder::setIsSelected(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<98>() * ::capnp::ELEMENTS, value);
}

inline float PredictionTrajectory::Reader::getProbability() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline float PredictionTrajectory::Builder::getProbability() {
  return _builder.getDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void PredictionTrajectory::Builder::setProbability(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline float PredictionTrajectory::Reader::getScore() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline float PredictionTrajectory::Builder::getScore() {
  return _builder.getDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void PredictionTrajectory::Builder::setScore(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t PredictionObject::Reader::getId() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::int32_t PredictionObject::Builder::getId() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void PredictionObject::Builder::setId( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t PredictionObject::Reader::getObstacleTypeEnum() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t PredictionObject::Builder::getObstacleTypeEnum() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void PredictionObject::Builder::setObstacleTypeEnum( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t PredictionObject::Reader::getObjectLabelEnum() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t PredictionObject::Builder::getObjectLabelEnum() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void PredictionObject::Builder::setObjectLabelEnum( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline float PredictionObject::Reader::getLengthM() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline float PredictionObject::Builder::getLengthM() {
  return _builder.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void PredictionObject::Builder::setLengthM(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline float PredictionObject::Reader::getWidthM() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline float PredictionObject::Builder::getWidthM() {
  return _builder.getDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void PredictionObject::Builder::setWidthM(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline float PredictionObject::Reader::getHeightM() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline float PredictionObject::Builder::getHeightM() {
  return _builder.getDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void PredictionObject::Builder::setHeightM(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline bool PredictionObject::Reader::hasPolygonContour() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool PredictionObject::Builder::hasPolygonContour() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Reader PredictionObject::Reader::getPolygonContour() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Builder PredictionObject::Builder::getPolygonContour() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void PredictionObject::Builder::setPolygonContour( ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Builder PredictionObject::Builder::initPolygonContour(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), size);
}
inline void PredictionObject::Builder::adoptPolygonContour(
    ::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>> PredictionObject::Builder::disownPolygonContour() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool PredictionObject::Reader::hasPosition() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool PredictionObject::Builder::hasPosition() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::std_msgs::Point::Reader PredictionObject::Reader::getPosition() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::std_msgs::Point::Builder PredictionObject::Builder::getPosition() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::std_msgs::Point::Pipeline PredictionObject::Pipeline::getPosition() {
  return  ::senseAD::msg::std_msgs::Point::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void PredictionObject::Builder::setPosition( ::senseAD::msg::std_msgs::Point::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::std_msgs::Point::Builder PredictionObject::Builder::initPosition() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void PredictionObject::Builder::adoptPosition(
    ::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> PredictionObject::Builder::disownPosition() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool PredictionObject::Reader::hasSpeed() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool PredictionObject::Builder::hasSpeed() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::std_msgs::Point::Reader PredictionObject::Reader::getSpeed() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::std_msgs::Point::Builder PredictionObject::Builder::getSpeed() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::std_msgs::Point::Pipeline PredictionObject::Pipeline::getSpeed() {
  return  ::senseAD::msg::std_msgs::Point::Pipeline(_typeless.getPointerField(2));
}
#endif  // !CAPNP_LITE
inline void PredictionObject::Builder::setSpeed( ::senseAD::msg::std_msgs::Point::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::std_msgs::Point::Builder PredictionObject::Builder::initSpeed() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void PredictionObject::Builder::adoptSpeed(
    ::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> PredictionObject::Builder::disownSpeed() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool PredictionObject::Reader::hasAcceleration() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool PredictionObject::Builder::hasAcceleration() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::std_msgs::Point::Reader PredictionObject::Reader::getAcceleration() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::std_msgs::Point::Builder PredictionObject::Builder::getAcceleration() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::std_msgs::Point::Pipeline PredictionObject::Pipeline::getAcceleration() {
  return  ::senseAD::msg::std_msgs::Point::Pipeline(_typeless.getPointerField(3));
}
#endif  // !CAPNP_LITE
inline void PredictionObject::Builder::setAcceleration( ::senseAD::msg::std_msgs::Point::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::std_msgs::Point::Builder PredictionObject::Builder::initAcceleration() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void PredictionObject::Builder::adoptAcceleration(
    ::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> PredictionObject::Builder::disownAcceleration() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline bool PredictionObject::Reader::hasHeadingDirection() const {
  return !_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline bool PredictionObject::Builder::hasHeadingDirection() {
  return !_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::std_msgs::Point::Reader PredictionObject::Reader::getHeadingDirection() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::std_msgs::Point::Builder PredictionObject::Builder::getHeadingDirection() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::std_msgs::Point::Pipeline PredictionObject::Pipeline::getHeadingDirection() {
  return  ::senseAD::msg::std_msgs::Point::Pipeline(_typeless.getPointerField(4));
}
#endif  // !CAPNP_LITE
inline void PredictionObject::Builder::setHeadingDirection( ::senseAD::msg::std_msgs::Point::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::set(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::std_msgs::Point::Builder PredictionObject::Builder::initHeadingDirection() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::init(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline void PredictionObject::Builder::adoptHeadingDirection(
    ::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::adopt(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> PredictionObject::Builder::disownHeadingDirection() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::disown(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}

inline  ::uint32_t PredictionObject::Reader::getInfoStateEnum() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t PredictionObject::Builder::getInfoStateEnum() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void PredictionObject::Builder::setInfoStateEnum( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t PredictionObject::Reader::getSceneTypeEnum() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t PredictionObject::Builder::getSceneTypeEnum() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void PredictionObject::Builder::setSceneTypeEnum( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t PredictionObject::Reader::getImportanceLevelEnum() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t PredictionObject::Builder::getImportanceLevelEnum() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void PredictionObject::Builder::setImportanceLevelEnum( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t PredictionObject::Reader::getMoveStep() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t PredictionObject::Builder::getMoveStep() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}
inline void PredictionObject::Builder::setMoveStep( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t PredictionObject::Reader::getIntentionType() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t PredictionObject::Builder::getIntentionType() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}
inline void PredictionObject::Builder::setIntentionType( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS, value);
}

inline bool PredictionObject::Reader::hasTargetRoadId() const {
  return !_reader.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS).isNull();
}
inline bool PredictionObject::Builder::hasTargetRoadId() {
  return !_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::Text::Reader PredictionObject::Reader::getTargetRoadId() const {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_reader.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
inline  ::capnp::Text::Builder PredictionObject::Builder::getTargetRoadId() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
inline void PredictionObject::Builder::setTargetRoadId( ::capnp::Text::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::set(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), value);
}
inline  ::capnp::Text::Builder PredictionObject::Builder::initTargetRoadId(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::init(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), size);
}
inline void PredictionObject::Builder::adoptTargetRoadId(
    ::capnp::Orphan< ::capnp::Text>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::adopt(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::Text> PredictionObject::Builder::disownTargetRoadId() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::disown(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}

inline bool PredictionObject::Reader::hasTargetLaneId() const {
  return !_reader.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS).isNull();
}
inline bool PredictionObject::Builder::hasTargetLaneId() {
  return !_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::Text::Reader PredictionObject::Reader::getTargetLaneId() const {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_reader.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}
inline  ::capnp::Text::Builder PredictionObject::Builder::getTargetLaneId() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}
inline void PredictionObject::Builder::setTargetLaneId( ::capnp::Text::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::set(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS), value);
}
inline  ::capnp::Text::Builder PredictionObject::Builder::initTargetLaneId(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::init(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS), size);
}
inline void PredictionObject::Builder::adoptTargetLaneId(
    ::capnp::Orphan< ::capnp::Text>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::adopt(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::Text> PredictionObject::Builder::disownTargetLaneId() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::disown(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}

inline bool PredictionObject::Reader::hasTrajectoryArray() const {
  return !_reader.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS).isNull();
}
inline bool PredictionObject::Builder::hasTrajectoryArray() {
  return !_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectory,  ::capnp::Kind::STRUCT>::Reader PredictionObject::Reader::getTrajectoryArray() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectory,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectory,  ::capnp::Kind::STRUCT>::Builder PredictionObject::Builder::getTrajectoryArray() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectory,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}
inline void PredictionObject::Builder::setTrajectoryArray( ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectory,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectory,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectory,  ::capnp::Kind::STRUCT>::Builder PredictionObject::Builder::initTrajectoryArray(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectory,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS), size);
}
inline void PredictionObject::Builder::adoptTrajectoryArray(
    ::capnp::Orphan< ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectory,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectory,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectory,  ::capnp::Kind::STRUCT>> PredictionObject::Builder::disownTrajectoryArray() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::prediction::PredictionTrajectory,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}

inline bool PredictionObject::Reader::hasHistoryTrajectoryPoints() const {
  return !_reader.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS).isNull();
}
inline bool PredictionObject::Builder::hasHistoryTrajectoryPoints() {
  return !_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Reader PredictionObject::Reader::getHistoryTrajectoryPoints() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Builder PredictionObject::Builder::getHistoryTrajectoryPoints() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}
inline void PredictionObject::Builder::setHistoryTrajectoryPoints( ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Builder PredictionObject::Builder::initHistoryTrajectoryPoints(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS), size);
}
inline void PredictionObject::Builder::adoptHistoryTrajectoryPoints(
    ::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>> PredictionObject::Builder::disownHistoryTrajectoryPoints() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}

inline bool Prediction::Reader::hasHeader() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool Prediction::Builder::hasHeader() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::std_msgs::Header::Reader Prediction::Reader::getHeader() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::std_msgs::Header::Builder Prediction::Builder::getHeader() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::std_msgs::Header::Pipeline Prediction::Pipeline::getHeader() {
  return  ::senseAD::msg::std_msgs::Header::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void Prediction::Builder::setHeader( ::senseAD::msg::std_msgs::Header::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::std_msgs::Header::Builder Prediction::Builder::initHeader() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void Prediction::Builder::adoptHeader(
    ::capnp::Orphan< ::senseAD::msg::std_msgs::Header>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Header> Prediction::Builder::disownHeader() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline  ::uint64_t Prediction::Reader::getPredictionTimeNs() const {
  return _reader.getDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint64_t Prediction::Builder::getPredictionTimeNs() {
  return _builder.getDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void Prediction::Builder::setPredictionTimeNs( ::uint64_t value) {
  _builder.setDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint64_t Prediction::Reader::getFusionTimeNs() const {
  return _reader.getDataField< ::uint64_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint64_t Prediction::Builder::getFusionTimeNs() {
  return _builder.getDataField< ::uint64_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void Prediction::Builder::setFusionTimeNs( ::uint64_t value) {
  _builder.setDataField< ::uint64_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline bool Prediction::Reader::hasObjectList() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool Prediction::Builder::hasObjectList() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::senseAD::msg::prediction::PredictionObject,  ::capnp::Kind::STRUCT>::Reader Prediction::Reader::getObjectList() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::prediction::PredictionObject,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::senseAD::msg::prediction::PredictionObject,  ::capnp::Kind::STRUCT>::Builder Prediction::Builder::getObjectList() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::prediction::PredictionObject,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void Prediction::Builder::setObjectList( ::capnp::List< ::senseAD::msg::prediction::PredictionObject,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::prediction::PredictionObject,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::senseAD::msg::prediction::PredictionObject,  ::capnp::Kind::STRUCT>::Builder Prediction::Builder::initObjectList(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::prediction::PredictionObject,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), size);
}
inline void Prediction::Builder::adoptObjectList(
    ::capnp::Orphan< ::capnp::List< ::senseAD::msg::prediction::PredictionObject,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::prediction::PredictionObject,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::prediction::PredictionObject,  ::capnp::Kind::STRUCT>> Prediction::Builder::disownObjectList() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::prediction::PredictionObject,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

}  // namespace
}  // namespace
}  // namespace

CAPNP_END_HEADER

