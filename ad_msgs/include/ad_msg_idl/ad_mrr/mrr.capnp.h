// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: mrr.capnp

#pragma once

#include <capnp/generated-header-support.h>
#include <kj/windows-sanity.h>

#if CAPNP_VERSION != 10002
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif

#include <ad_msg_idl/std_msgs/header.capnp.h>

CAPNP_BEGIN_HEADER

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(e2a369d8cbd1e74d);
CAPNP_DECLARE_SCHEMA(f2a840df86b0b474);
CAPNP_DECLARE_SCHEMA(f7948a18f465def1);
CAPNP_DECLARE_SCHEMA(d2d6fe3e13c52285);
CAPNP_DECLARE_SCHEMA(e5b0bfcc88ce46de);

}  // namespace schemas
}  // namespace capnp

namespace senseAD {
namespace msg {
namespace mrr {

struct Mrr2 {
  Mrr2() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(e2a369d8cbd1e74d, 2, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct Mrr3 {
  Mrr3() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(f2a840df86b0b474, 2, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct MrrIfc1 {
  MrrIfc1() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(f7948a18f465def1, 3, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct MrrIfc2 {
  MrrIfc2() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(d2d6fe3e13c52285, 1, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct Mrr {
  Mrr() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(e5b0bfcc88ce46de, 0, 5)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

class Mrr2::Reader {
public:
  typedef Mrr2 Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline float getMrrLongCtrlTargetAccel() const;

  inline  ::uint8_t getAdasLongCtrlTypReqMode() const;

  inline  ::uint8_t getAdasLongCtrlTypReqLong() const;

  inline  ::uint8_t getAdasIntlCrusMode() const;

  inline  ::uint8_t getMrrACCRecpDecel() const;

  inline  ::uint8_t getMrrLongCtrlTargetAccelJerkMinVa() const;

  inline bool getMrrifcPriCANAvailableSt() const;

  inline  ::uint8_t getMrrLongCtrTargetAccelJerkMaxnVa() const;

  inline bool getMrrifcPriCANErrorSt() const;

  inline bool getMrrLongCtrlDecToStopReq() const;

  inline bool getMrrLongCtrlDriveOff() const;

  inline bool getMrrACCMinBrakingReq() const;

  inline  ::uint8_t getMrrLongCtrlShutdownReq() const;

  inline bool getMrrACCRecpDecelReq() const;

  inline  ::uint8_t getMrrLongCtrlModeForBrkSys() const;

  inline bool getMrrLongCtrlAccelCtrlReq() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Mrr2::Builder {
public:
  typedef Mrr2 Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline float getMrrLongCtrlTargetAccel();
  inline void setMrrLongCtrlTargetAccel(float value);

  inline  ::uint8_t getAdasLongCtrlTypReqMode();
  inline void setAdasLongCtrlTypReqMode( ::uint8_t value);

  inline  ::uint8_t getAdasLongCtrlTypReqLong();
  inline void setAdasLongCtrlTypReqLong( ::uint8_t value);

  inline  ::uint8_t getAdasIntlCrusMode();
  inline void setAdasIntlCrusMode( ::uint8_t value);

  inline  ::uint8_t getMrrACCRecpDecel();
  inline void setMrrACCRecpDecel( ::uint8_t value);

  inline  ::uint8_t getMrrLongCtrlTargetAccelJerkMinVa();
  inline void setMrrLongCtrlTargetAccelJerkMinVa( ::uint8_t value);

  inline bool getMrrifcPriCANAvailableSt();
  inline void setMrrifcPriCANAvailableSt(bool value);

  inline  ::uint8_t getMrrLongCtrTargetAccelJerkMaxnVa();
  inline void setMrrLongCtrTargetAccelJerkMaxnVa( ::uint8_t value);

  inline bool getMrrifcPriCANErrorSt();
  inline void setMrrifcPriCANErrorSt(bool value);

  inline bool getMrrLongCtrlDecToStopReq();
  inline void setMrrLongCtrlDecToStopReq(bool value);

  inline bool getMrrLongCtrlDriveOff();
  inline void setMrrLongCtrlDriveOff(bool value);

  inline bool getMrrACCMinBrakingReq();
  inline void setMrrACCMinBrakingReq(bool value);

  inline  ::uint8_t getMrrLongCtrlShutdownReq();
  inline void setMrrLongCtrlShutdownReq( ::uint8_t value);

  inline bool getMrrACCRecpDecelReq();
  inline void setMrrACCRecpDecelReq(bool value);

  inline  ::uint8_t getMrrLongCtrlModeForBrkSys();
  inline void setMrrLongCtrlModeForBrkSys( ::uint8_t value);

  inline bool getMrrLongCtrlAccelCtrlReq();
  inline void setMrrLongCtrlAccelCtrlReq(bool value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Mrr2::Pipeline {
public:
  typedef Mrr2 Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class Mrr3::Reader {
public:
  typedef Mrr3 Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline float getMrrAEBTargetDecel() const;

  inline bool getMrrAEBDecelCtrlReq() const;

  inline bool getMrrACCReqQua() const;

  inline bool getMrrAEBLVehHoldReq() const;

  inline bool getMrrABAReq() const;

  inline  ::uint8_t getMrrABALevel() const;

  inline bool getMrrAWBReq() const;

  inline bool getMrrABPReq() const;

  inline  ::uint8_t getMrrAWBLevel() const;

  inline float getMrrActTrqReq() const;

  inline bool getMrrActTrqReqVD() const;

  inline  ::uint8_t getMrrACCUnableActivated() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Mrr3::Builder {
public:
  typedef Mrr3 Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline float getMrrAEBTargetDecel();
  inline void setMrrAEBTargetDecel(float value);

  inline bool getMrrAEBDecelCtrlReq();
  inline void setMrrAEBDecelCtrlReq(bool value);

  inline bool getMrrACCReqQua();
  inline void setMrrACCReqQua(bool value);

  inline bool getMrrAEBLVehHoldReq();
  inline void setMrrAEBLVehHoldReq(bool value);

  inline bool getMrrABAReq();
  inline void setMrrABAReq(bool value);

  inline  ::uint8_t getMrrABALevel();
  inline void setMrrABALevel( ::uint8_t value);

  inline bool getMrrAWBReq();
  inline void setMrrAWBReq(bool value);

  inline bool getMrrABPReq();
  inline void setMrrABPReq(bool value);

  inline  ::uint8_t getMrrAWBLevel();
  inline void setMrrAWBLevel( ::uint8_t value);

  inline float getMrrActTrqReq();
  inline void setMrrActTrqReq(float value);

  inline bool getMrrActTrqReqVD();
  inline void setMrrActTrqReqVD(bool value);

  inline  ::uint8_t getMrrACCUnableActivated();
  inline void setMrrACCUnableActivated( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Mrr3::Pipeline {
public:
  typedef Mrr3 Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class MrrIfc1::Reader {
public:
  typedef MrrIfc1 Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getIfcLdwSt() const;

  inline  ::uint8_t getIfcRdpSt() const;

  inline  ::uint8_t getIfcRdpActdirection() const;

  inline  ::uint8_t getIfcLdpActdirection() const;

  inline  ::uint8_t getIfcTsrSt() const;

  inline  ::uint8_t getIfcTsrSpdLimType() const;

  inline  ::uint8_t getIfcLdwActdirection() const;

  inline bool getIfcTsrAudioWarnEnable() const;

  inline bool getIfcIlcEnableSt() const;

  inline  ::uint8_t getIfcLdsLaneAssistType() const;

  inline  ::uint8_t getIfcLdpSt() const;

  inline  ::uint8_t getIfcTSRMode() const;

  inline  ::uint8_t getIfcHandsOnSt() const;

  inline  ::uint8_t getIfcHandsOnWarning() const;

  inline  ::uint8_t getIfcTsrSpdLimit() const;

  inline  ::uint8_t getIfcTsrSpdLimitUnit() const;

  inline  ::uint8_t getIfcMRCNumber() const;

  inline  ::uint8_t getIfcIHbcSt() const;

  inline bool getIfcIHbcHighBeamReq() const;

  inline bool getIfcTsrEnable() const;

  inline bool getIfcIHbcEnable() const;

  inline bool getIfcTsrVisualWarn() const;

  inline bool getIfcTsrAcousticWarn() const;

  inline bool getIfcILoaEnableSt() const;

  inline  ::uint8_t getIfcMRMNumber() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class MrrIfc1::Builder {
public:
  typedef MrrIfc1 Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getIfcLdwSt();
  inline void setIfcLdwSt( ::uint8_t value);

  inline  ::uint8_t getIfcRdpSt();
  inline void setIfcRdpSt( ::uint8_t value);

  inline  ::uint8_t getIfcRdpActdirection();
  inline void setIfcRdpActdirection( ::uint8_t value);

  inline  ::uint8_t getIfcLdpActdirection();
  inline void setIfcLdpActdirection( ::uint8_t value);

  inline  ::uint8_t getIfcTsrSt();
  inline void setIfcTsrSt( ::uint8_t value);

  inline  ::uint8_t getIfcTsrSpdLimType();
  inline void setIfcTsrSpdLimType( ::uint8_t value);

  inline  ::uint8_t getIfcLdwActdirection();
  inline void setIfcLdwActdirection( ::uint8_t value);

  inline bool getIfcTsrAudioWarnEnable();
  inline void setIfcTsrAudioWarnEnable(bool value);

  inline bool getIfcIlcEnableSt();
  inline void setIfcIlcEnableSt(bool value);

  inline  ::uint8_t getIfcLdsLaneAssistType();
  inline void setIfcLdsLaneAssistType( ::uint8_t value);

  inline  ::uint8_t getIfcLdpSt();
  inline void setIfcLdpSt( ::uint8_t value);

  inline  ::uint8_t getIfcTSRMode();
  inline void setIfcTSRMode( ::uint8_t value);

  inline  ::uint8_t getIfcHandsOnSt();
  inline void setIfcHandsOnSt( ::uint8_t value);

  inline  ::uint8_t getIfcHandsOnWarning();
  inline void setIfcHandsOnWarning( ::uint8_t value);

  inline  ::uint8_t getIfcTsrSpdLimit();
  inline void setIfcTsrSpdLimit( ::uint8_t value);

  inline  ::uint8_t getIfcTsrSpdLimitUnit();
  inline void setIfcTsrSpdLimitUnit( ::uint8_t value);

  inline  ::uint8_t getIfcMRCNumber();
  inline void setIfcMRCNumber( ::uint8_t value);

  inline  ::uint8_t getIfcIHbcSt();
  inline void setIfcIHbcSt( ::uint8_t value);

  inline bool getIfcIHbcHighBeamReq();
  inline void setIfcIHbcHighBeamReq(bool value);

  inline bool getIfcTsrEnable();
  inline void setIfcTsrEnable(bool value);

  inline bool getIfcIHbcEnable();
  inline void setIfcIHbcEnable(bool value);

  inline bool getIfcTsrVisualWarn();
  inline void setIfcTsrVisualWarn(bool value);

  inline bool getIfcTsrAcousticWarn();
  inline void setIfcTsrAcousticWarn(bool value);

  inline bool getIfcILoaEnableSt();
  inline void setIfcILoaEnableSt(bool value);

  inline  ::uint8_t getIfcMRMNumber();
  inline void setIfcMRMNumber( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class MrrIfc1::Pipeline {
public:
  typedef MrrIfc1 Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class MrrIfc2::Reader {
public:
  typedef MrrIfc2 Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline float getIfcTorqueReq() const;

  inline  ::uint8_t getIfcTorqueReqSt() const;

  inline  ::uint8_t getAdasRemoteDiagCode() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class MrrIfc2::Builder {
public:
  typedef MrrIfc2 Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline float getIfcTorqueReq();
  inline void setIfcTorqueReq(float value);

  inline  ::uint8_t getIfcTorqueReqSt();
  inline void setIfcTorqueReqSt( ::uint8_t value);

  inline  ::uint8_t getAdasRemoteDiagCode();
  inline void setAdasRemoteDiagCode( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class MrrIfc2::Pipeline {
public:
  typedef MrrIfc2 Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class Mrr::Reader {
public:
  typedef Mrr Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasHeader() const;
  inline  ::senseAD::msg::std_msgs::Header::Reader getHeader() const;

  inline bool hasMrr2() const;
  inline  ::senseAD::msg::mrr::Mrr2::Reader getMrr2() const;

  inline bool hasMrr3() const;
  inline  ::senseAD::msg::mrr::Mrr3::Reader getMrr3() const;

  inline bool hasMrrIfc1() const;
  inline  ::senseAD::msg::mrr::MrrIfc1::Reader getMrrIfc1() const;

  inline bool hasMrrIfc2() const;
  inline  ::senseAD::msg::mrr::MrrIfc2::Reader getMrrIfc2() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Mrr::Builder {
public:
  typedef Mrr Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasHeader();
  inline  ::senseAD::msg::std_msgs::Header::Builder getHeader();
  inline void setHeader( ::senseAD::msg::std_msgs::Header::Reader value);
  inline  ::senseAD::msg::std_msgs::Header::Builder initHeader();
  inline void adoptHeader(::capnp::Orphan< ::senseAD::msg::std_msgs::Header>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Header> disownHeader();

  inline bool hasMrr2();
  inline  ::senseAD::msg::mrr::Mrr2::Builder getMrr2();
  inline void setMrr2( ::senseAD::msg::mrr::Mrr2::Reader value);
  inline  ::senseAD::msg::mrr::Mrr2::Builder initMrr2();
  inline void adoptMrr2(::capnp::Orphan< ::senseAD::msg::mrr::Mrr2>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::mrr::Mrr2> disownMrr2();

  inline bool hasMrr3();
  inline  ::senseAD::msg::mrr::Mrr3::Builder getMrr3();
  inline void setMrr3( ::senseAD::msg::mrr::Mrr3::Reader value);
  inline  ::senseAD::msg::mrr::Mrr3::Builder initMrr3();
  inline void adoptMrr3(::capnp::Orphan< ::senseAD::msg::mrr::Mrr3>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::mrr::Mrr3> disownMrr3();

  inline bool hasMrrIfc1();
  inline  ::senseAD::msg::mrr::MrrIfc1::Builder getMrrIfc1();
  inline void setMrrIfc1( ::senseAD::msg::mrr::MrrIfc1::Reader value);
  inline  ::senseAD::msg::mrr::MrrIfc1::Builder initMrrIfc1();
  inline void adoptMrrIfc1(::capnp::Orphan< ::senseAD::msg::mrr::MrrIfc1>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::mrr::MrrIfc1> disownMrrIfc1();

  inline bool hasMrrIfc2();
  inline  ::senseAD::msg::mrr::MrrIfc2::Builder getMrrIfc2();
  inline void setMrrIfc2( ::senseAD::msg::mrr::MrrIfc2::Reader value);
  inline  ::senseAD::msg::mrr::MrrIfc2::Builder initMrrIfc2();
  inline void adoptMrrIfc2(::capnp::Orphan< ::senseAD::msg::mrr::MrrIfc2>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::mrr::MrrIfc2> disownMrrIfc2();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Mrr::Pipeline {
public:
  typedef Mrr Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::std_msgs::Header::Pipeline getHeader();
  inline  ::senseAD::msg::mrr::Mrr2::Pipeline getMrr2();
  inline  ::senseAD::msg::mrr::Mrr3::Pipeline getMrr3();
  inline  ::senseAD::msg::mrr::MrrIfc1::Pipeline getMrrIfc1();
  inline  ::senseAD::msg::mrr::MrrIfc2::Pipeline getMrrIfc2();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

inline float Mrr2::Reader::getMrrLongCtrlTargetAccel() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline float Mrr2::Builder::getMrrLongCtrlTargetAccel() {
  return _builder.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void Mrr2::Builder::setMrrLongCtrlTargetAccel(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Mrr2::Reader::getAdasLongCtrlTypReqMode() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Mrr2::Builder::getAdasLongCtrlTypReqMode() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void Mrr2::Builder::setAdasLongCtrlTypReqMode( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Mrr2::Reader::getAdasLongCtrlTypReqLong() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Mrr2::Builder::getAdasLongCtrlTypReqLong() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void Mrr2::Builder::setAdasLongCtrlTypReqLong( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Mrr2::Reader::getAdasIntlCrusMode() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Mrr2::Builder::getAdasIntlCrusMode() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void Mrr2::Builder::setAdasIntlCrusMode( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Mrr2::Reader::getMrrACCRecpDecel() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Mrr2::Builder::getMrrACCRecpDecel() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void Mrr2::Builder::setMrrACCRecpDecel( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Mrr2::Reader::getMrrLongCtrlTargetAccelJerkMinVa() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Mrr2::Builder::getMrrLongCtrlTargetAccelJerkMinVa() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void Mrr2::Builder::setMrrLongCtrlTargetAccelJerkMinVa( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline bool Mrr2::Reader::getMrrifcPriCANAvailableSt() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<72>() * ::capnp::ELEMENTS);
}

inline bool Mrr2::Builder::getMrrifcPriCANAvailableSt() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<72>() * ::capnp::ELEMENTS);
}
inline void Mrr2::Builder::setMrrifcPriCANAvailableSt(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<72>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Mrr2::Reader::getMrrLongCtrTargetAccelJerkMaxnVa() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Mrr2::Builder::getMrrLongCtrTargetAccelJerkMaxnVa() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}
inline void Mrr2::Builder::setMrrLongCtrTargetAccelJerkMaxnVa( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS, value);
}

inline bool Mrr2::Reader::getMrrifcPriCANErrorSt() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<73>() * ::capnp::ELEMENTS);
}

inline bool Mrr2::Builder::getMrrifcPriCANErrorSt() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<73>() * ::capnp::ELEMENTS);
}
inline void Mrr2::Builder::setMrrifcPriCANErrorSt(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<73>() * ::capnp::ELEMENTS, value);
}

inline bool Mrr2::Reader::getMrrLongCtrlDecToStopReq() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<74>() * ::capnp::ELEMENTS);
}

inline bool Mrr2::Builder::getMrrLongCtrlDecToStopReq() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<74>() * ::capnp::ELEMENTS);
}
inline void Mrr2::Builder::setMrrLongCtrlDecToStopReq(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<74>() * ::capnp::ELEMENTS, value);
}

inline bool Mrr2::Reader::getMrrLongCtrlDriveOff() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<75>() * ::capnp::ELEMENTS);
}

inline bool Mrr2::Builder::getMrrLongCtrlDriveOff() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<75>() * ::capnp::ELEMENTS);
}
inline void Mrr2::Builder::setMrrLongCtrlDriveOff(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<75>() * ::capnp::ELEMENTS, value);
}

inline bool Mrr2::Reader::getMrrACCMinBrakingReq() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<76>() * ::capnp::ELEMENTS);
}

inline bool Mrr2::Builder::getMrrACCMinBrakingReq() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<76>() * ::capnp::ELEMENTS);
}
inline void Mrr2::Builder::setMrrACCMinBrakingReq(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<76>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Mrr2::Reader::getMrrLongCtrlShutdownReq() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Mrr2::Builder::getMrrLongCtrlShutdownReq() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}
inline void Mrr2::Builder::setMrrLongCtrlShutdownReq( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS, value);
}

inline bool Mrr2::Reader::getMrrACCRecpDecelReq() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<77>() * ::capnp::ELEMENTS);
}

inline bool Mrr2::Builder::getMrrACCRecpDecelReq() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<77>() * ::capnp::ELEMENTS);
}
inline void Mrr2::Builder::setMrrACCRecpDecelReq(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<77>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Mrr2::Reader::getMrrLongCtrlModeForBrkSys() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Mrr2::Builder::getMrrLongCtrlModeForBrkSys() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}
inline void Mrr2::Builder::setMrrLongCtrlModeForBrkSys( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS, value);
}

inline bool Mrr2::Reader::getMrrLongCtrlAccelCtrlReq() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<78>() * ::capnp::ELEMENTS);
}

inline bool Mrr2::Builder::getMrrLongCtrlAccelCtrlReq() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<78>() * ::capnp::ELEMENTS);
}
inline void Mrr2::Builder::setMrrLongCtrlAccelCtrlReq(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<78>() * ::capnp::ELEMENTS, value);
}

inline float Mrr3::Reader::getMrrAEBTargetDecel() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline float Mrr3::Builder::getMrrAEBTargetDecel() {
  return _builder.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void Mrr3::Builder::setMrrAEBTargetDecel(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline bool Mrr3::Reader::getMrrAEBDecelCtrlReq() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<32>() * ::capnp::ELEMENTS);
}

inline bool Mrr3::Builder::getMrrAEBDecelCtrlReq() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<32>() * ::capnp::ELEMENTS);
}
inline void Mrr3::Builder::setMrrAEBDecelCtrlReq(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<32>() * ::capnp::ELEMENTS, value);
}

inline bool Mrr3::Reader::getMrrACCReqQua() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<33>() * ::capnp::ELEMENTS);
}

inline bool Mrr3::Builder::getMrrACCReqQua() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<33>() * ::capnp::ELEMENTS);
}
inline void Mrr3::Builder::setMrrACCReqQua(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<33>() * ::capnp::ELEMENTS, value);
}

inline bool Mrr3::Reader::getMrrAEBLVehHoldReq() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<34>() * ::capnp::ELEMENTS);
}

inline bool Mrr3::Builder::getMrrAEBLVehHoldReq() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<34>() * ::capnp::ELEMENTS);
}
inline void Mrr3::Builder::setMrrAEBLVehHoldReq(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<34>() * ::capnp::ELEMENTS, value);
}

inline bool Mrr3::Reader::getMrrABAReq() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<35>() * ::capnp::ELEMENTS);
}

inline bool Mrr3::Builder::getMrrABAReq() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<35>() * ::capnp::ELEMENTS);
}
inline void Mrr3::Builder::setMrrABAReq(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<35>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Mrr3::Reader::getMrrABALevel() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Mrr3::Builder::getMrrABALevel() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void Mrr3::Builder::setMrrABALevel( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline bool Mrr3::Reader::getMrrAWBReq() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<36>() * ::capnp::ELEMENTS);
}

inline bool Mrr3::Builder::getMrrAWBReq() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<36>() * ::capnp::ELEMENTS);
}
inline void Mrr3::Builder::setMrrAWBReq(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<36>() * ::capnp::ELEMENTS, value);
}

inline bool Mrr3::Reader::getMrrABPReq() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<37>() * ::capnp::ELEMENTS);
}

inline bool Mrr3::Builder::getMrrABPReq() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<37>() * ::capnp::ELEMENTS);
}
inline void Mrr3::Builder::setMrrABPReq(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<37>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Mrr3::Reader::getMrrAWBLevel() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Mrr3::Builder::getMrrAWBLevel() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void Mrr3::Builder::setMrrAWBLevel( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline float Mrr3::Reader::getMrrActTrqReq() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline float Mrr3::Builder::getMrrActTrqReq() {
  return _builder.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void Mrr3::Builder::setMrrActTrqReq(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline bool Mrr3::Reader::getMrrActTrqReqVD() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<38>() * ::capnp::ELEMENTS);
}

inline bool Mrr3::Builder::getMrrActTrqReqVD() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<38>() * ::capnp::ELEMENTS);
}
inline void Mrr3::Builder::setMrrActTrqReqVD(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<38>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Mrr3::Reader::getMrrACCUnableActivated() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Mrr3::Builder::getMrrACCUnableActivated() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void Mrr3::Builder::setMrrACCUnableActivated( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t MrrIfc1::Reader::getIfcLdwSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t MrrIfc1::Builder::getIfcLdwSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcLdwSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t MrrIfc1::Reader::getIfcRdpSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t MrrIfc1::Builder::getIfcRdpSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcRdpSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t MrrIfc1::Reader::getIfcRdpActdirection() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t MrrIfc1::Builder::getIfcRdpActdirection() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcRdpActdirection( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t MrrIfc1::Reader::getIfcLdpActdirection() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t MrrIfc1::Builder::getIfcLdpActdirection() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcLdpActdirection( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t MrrIfc1::Reader::getIfcTsrSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t MrrIfc1::Builder::getIfcTsrSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcTsrSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t MrrIfc1::Reader::getIfcTsrSpdLimType() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t MrrIfc1::Builder::getIfcTsrSpdLimType() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcTsrSpdLimType( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t MrrIfc1::Reader::getIfcLdwActdirection() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t MrrIfc1::Builder::getIfcLdwActdirection() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcLdwActdirection( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline bool MrrIfc1::Reader::getIfcTsrAudioWarnEnable() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<56>() * ::capnp::ELEMENTS);
}

inline bool MrrIfc1::Builder::getIfcTsrAudioWarnEnable() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<56>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcTsrAudioWarnEnable(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<56>() * ::capnp::ELEMENTS, value);
}

inline bool MrrIfc1::Reader::getIfcIlcEnableSt() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<57>() * ::capnp::ELEMENTS);
}

inline bool MrrIfc1::Builder::getIfcIlcEnableSt() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<57>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcIlcEnableSt(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<57>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t MrrIfc1::Reader::getIfcLdsLaneAssistType() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t MrrIfc1::Builder::getIfcLdsLaneAssistType() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcLdsLaneAssistType( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t MrrIfc1::Reader::getIfcLdpSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t MrrIfc1::Builder::getIfcLdpSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcLdpSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t MrrIfc1::Reader::getIfcTSRMode() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t MrrIfc1::Builder::getIfcTSRMode() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcTSRMode( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t MrrIfc1::Reader::getIfcHandsOnSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t MrrIfc1::Builder::getIfcHandsOnSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcHandsOnSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t MrrIfc1::Reader::getIfcHandsOnWarning() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t MrrIfc1::Builder::getIfcHandsOnWarning() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcHandsOnWarning( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t MrrIfc1::Reader::getIfcTsrSpdLimit() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t MrrIfc1::Builder::getIfcTsrSpdLimit() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcTsrSpdLimit( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t MrrIfc1::Reader::getIfcTsrSpdLimitUnit() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t MrrIfc1::Builder::getIfcTsrSpdLimitUnit() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcTsrSpdLimitUnit( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t MrrIfc1::Reader::getIfcMRCNumber() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t MrrIfc1::Builder::getIfcMRCNumber() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcMRCNumber( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t MrrIfc1::Reader::getIfcIHbcSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t MrrIfc1::Builder::getIfcIHbcSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcIHbcSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS, value);
}

inline bool MrrIfc1::Reader::getIfcIHbcHighBeamReq() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<58>() * ::capnp::ELEMENTS);
}

inline bool MrrIfc1::Builder::getIfcIHbcHighBeamReq() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<58>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcIHbcHighBeamReq(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<58>() * ::capnp::ELEMENTS, value);
}

inline bool MrrIfc1::Reader::getIfcTsrEnable() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<59>() * ::capnp::ELEMENTS);
}

inline bool MrrIfc1::Builder::getIfcTsrEnable() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<59>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcTsrEnable(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<59>() * ::capnp::ELEMENTS, value);
}

inline bool MrrIfc1::Reader::getIfcIHbcEnable() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<60>() * ::capnp::ELEMENTS);
}

inline bool MrrIfc1::Builder::getIfcIHbcEnable() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<60>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcIHbcEnable(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<60>() * ::capnp::ELEMENTS, value);
}

inline bool MrrIfc1::Reader::getIfcTsrVisualWarn() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<61>() * ::capnp::ELEMENTS);
}

inline bool MrrIfc1::Builder::getIfcTsrVisualWarn() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<61>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcTsrVisualWarn(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<61>() * ::capnp::ELEMENTS, value);
}

inline bool MrrIfc1::Reader::getIfcTsrAcousticWarn() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<62>() * ::capnp::ELEMENTS);
}

inline bool MrrIfc1::Builder::getIfcTsrAcousticWarn() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<62>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcTsrAcousticWarn(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<62>() * ::capnp::ELEMENTS, value);
}

inline bool MrrIfc1::Reader::getIfcILoaEnableSt() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<63>() * ::capnp::ELEMENTS);
}

inline bool MrrIfc1::Builder::getIfcILoaEnableSt() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<63>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcILoaEnableSt(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<63>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t MrrIfc1::Reader::getIfcMRMNumber() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t MrrIfc1::Builder::getIfcMRMNumber() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}
inline void MrrIfc1::Builder::setIfcMRMNumber( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS, value);
}

inline float MrrIfc2::Reader::getIfcTorqueReq() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline float MrrIfc2::Builder::getIfcTorqueReq() {
  return _builder.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void MrrIfc2::Builder::setIfcTorqueReq(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t MrrIfc2::Reader::getIfcTorqueReqSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t MrrIfc2::Builder::getIfcTorqueReqSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void MrrIfc2::Builder::setIfcTorqueReqSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t MrrIfc2::Reader::getAdasRemoteDiagCode() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t MrrIfc2::Builder::getAdasRemoteDiagCode() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void MrrIfc2::Builder::setAdasRemoteDiagCode( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline bool Mrr::Reader::hasHeader() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool Mrr::Builder::hasHeader() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::std_msgs::Header::Reader Mrr::Reader::getHeader() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::std_msgs::Header::Builder Mrr::Builder::getHeader() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::std_msgs::Header::Pipeline Mrr::Pipeline::getHeader() {
  return  ::senseAD::msg::std_msgs::Header::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void Mrr::Builder::setHeader( ::senseAD::msg::std_msgs::Header::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::std_msgs::Header::Builder Mrr::Builder::initHeader() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void Mrr::Builder::adoptHeader(
    ::capnp::Orphan< ::senseAD::msg::std_msgs::Header>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Header> Mrr::Builder::disownHeader() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool Mrr::Reader::hasMrr2() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool Mrr::Builder::hasMrr2() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::mrr::Mrr2::Reader Mrr::Reader::getMrr2() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::Mrr2>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::mrr::Mrr2::Builder Mrr::Builder::getMrr2() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::Mrr2>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::mrr::Mrr2::Pipeline Mrr::Pipeline::getMrr2() {
  return  ::senseAD::msg::mrr::Mrr2::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void Mrr::Builder::setMrr2( ::senseAD::msg::mrr::Mrr2::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::Mrr2>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::mrr::Mrr2::Builder Mrr::Builder::initMrr2() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::Mrr2>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void Mrr::Builder::adoptMrr2(
    ::capnp::Orphan< ::senseAD::msg::mrr::Mrr2>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::Mrr2>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::mrr::Mrr2> Mrr::Builder::disownMrr2() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::Mrr2>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool Mrr::Reader::hasMrr3() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool Mrr::Builder::hasMrr3() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::mrr::Mrr3::Reader Mrr::Reader::getMrr3() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::Mrr3>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::mrr::Mrr3::Builder Mrr::Builder::getMrr3() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::Mrr3>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::mrr::Mrr3::Pipeline Mrr::Pipeline::getMrr3() {
  return  ::senseAD::msg::mrr::Mrr3::Pipeline(_typeless.getPointerField(2));
}
#endif  // !CAPNP_LITE
inline void Mrr::Builder::setMrr3( ::senseAD::msg::mrr::Mrr3::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::Mrr3>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::mrr::Mrr3::Builder Mrr::Builder::initMrr3() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::Mrr3>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void Mrr::Builder::adoptMrr3(
    ::capnp::Orphan< ::senseAD::msg::mrr::Mrr3>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::Mrr3>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::mrr::Mrr3> Mrr::Builder::disownMrr3() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::Mrr3>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool Mrr::Reader::hasMrrIfc1() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool Mrr::Builder::hasMrrIfc1() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::mrr::MrrIfc1::Reader Mrr::Reader::getMrrIfc1() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::MrrIfc1>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::mrr::MrrIfc1::Builder Mrr::Builder::getMrrIfc1() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::MrrIfc1>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::mrr::MrrIfc1::Pipeline Mrr::Pipeline::getMrrIfc1() {
  return  ::senseAD::msg::mrr::MrrIfc1::Pipeline(_typeless.getPointerField(3));
}
#endif  // !CAPNP_LITE
inline void Mrr::Builder::setMrrIfc1( ::senseAD::msg::mrr::MrrIfc1::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::MrrIfc1>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::mrr::MrrIfc1::Builder Mrr::Builder::initMrrIfc1() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::MrrIfc1>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void Mrr::Builder::adoptMrrIfc1(
    ::capnp::Orphan< ::senseAD::msg::mrr::MrrIfc1>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::MrrIfc1>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::mrr::MrrIfc1> Mrr::Builder::disownMrrIfc1() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::MrrIfc1>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline bool Mrr::Reader::hasMrrIfc2() const {
  return !_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline bool Mrr::Builder::hasMrrIfc2() {
  return !_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::mrr::MrrIfc2::Reader Mrr::Reader::getMrrIfc2() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::MrrIfc2>::get(_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::mrr::MrrIfc2::Builder Mrr::Builder::getMrrIfc2() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::MrrIfc2>::get(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::mrr::MrrIfc2::Pipeline Mrr::Pipeline::getMrrIfc2() {
  return  ::senseAD::msg::mrr::MrrIfc2::Pipeline(_typeless.getPointerField(4));
}
#endif  // !CAPNP_LITE
inline void Mrr::Builder::setMrrIfc2( ::senseAD::msg::mrr::MrrIfc2::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::MrrIfc2>::set(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::mrr::MrrIfc2::Builder Mrr::Builder::initMrrIfc2() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::MrrIfc2>::init(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline void Mrr::Builder::adoptMrrIfc2(
    ::capnp::Orphan< ::senseAD::msg::mrr::MrrIfc2>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::MrrIfc2>::adopt(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::mrr::MrrIfc2> Mrr::Builder::disownMrrIfc2() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::mrr::MrrIfc2>::disown(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}

}  // namespace
}  // namespace
}  // namespace

CAPNP_END_HEADER

