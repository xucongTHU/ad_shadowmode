// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: hdmap_service.capnp

#pragma once

#include <capnp/generated-header-support.h>
#include <kj/windows-sanity.h>

#if CAPNP_VERSION != 10002
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif

#include <ad_msg_idl/ad_hdmap/hdmap_msgs.capnp.h>
#include <ad_msg_idl/std_msgs/geometry.capnp.h>

CAPNP_BEGIN_HEADER

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(98e5bcab1eae2783);
enum class RoutingRequestType_98e5bcab1eae2783: uint16_t {
  REQUEST_BASE_ROUTE,
  DYNAMIC_REROUTE,
};
CAPNP_DECLARE_ENUM(RoutingRequestType, 98e5bcab1eae2783);
CAPNP_DECLARE_SCHEMA(a85363411682b413);
CAPNP_DECLARE_SCHEMA(9a417a0fb67b8b0b);
CAPNP_DECLARE_SCHEMA(bd13ac13eb9a7199);
CAPNP_DECLARE_SCHEMA(bb6ec93ce7114bf9);
CAPNP_DECLARE_SCHEMA(f07ef29dcafdbbbf);
CAPNP_DECLARE_SCHEMA(83db227efb47cdf9);
CAPNP_DECLARE_SCHEMA(b2307be5910d79c1);
CAPNP_DECLARE_SCHEMA(c2ca18b8b7277033);
CAPNP_DECLARE_SCHEMA(ea272c96d6a229ae);
CAPNP_DECLARE_SCHEMA(fbd48620ff3eb48e);
CAPNP_DECLARE_SCHEMA(ca3ef599531ee565);
CAPNP_DECLARE_SCHEMA(a028d8a35336c9df);

}  // namespace schemas
}  // namespace capnp

namespace senseAD {
namespace msg {
namespace hdmap {

typedef ::capnp::schemas::RoutingRequestType_98e5bcab1eae2783 RoutingRequestType;

struct GetSubMapRequest {
  GetSubMapRequest() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(a85363411682b413, 1, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct GetSubMapResponse {
  GetSubMapResponse() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(9a417a0fb67b8b0b, 1, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct GetSectionBriefRequest {
  GetSectionBriefRequest() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(bd13ac13eb9a7199, 0, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct GetSectionBriefResponse {
  GetSectionBriefResponse() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(bb6ec93ce7114bf9, 1, 2)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct QueryRouteRequest {
  QueryRouteRequest() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(f07ef29dcafdbbbf, 1, 4)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct QueryRouteResponse {
  QueryRouteResponse() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(83db227efb47cdf9, 1, 6)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct RerouteByENURequest {
  RerouteByENURequest() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(b2307be5910d79c1, 1, 4)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct RerouteByENUResponse {
  RerouteByENUResponse() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(c2ca18b8b7277033, 1, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct RerouteByLaneIDRequest {
  RerouteByLaneIDRequest() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(ea272c96d6a229ae, 1, 4)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct RerouteByLaneIDResponse {
  RerouteByLaneIDResponse() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(fbd48620ff3eb48e, 1, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct RerouteByLLARequest {
  RerouteByLLARequest() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(ca3ef599531ee565, 1, 4)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct RerouteByLLAResponse {
  RerouteByLLAResponse() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(a028d8a35336c9df, 1, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

class GetSubMapRequest::Reader {
public:
  typedef GetSubMapRequest Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasCenterPositionEnu() const;
  inline  ::senseAD::msg::std_msgs::Point::Reader getCenterPositionEnu() const;

  inline double getRangeRadiusM() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class GetSubMapRequest::Builder {
public:
  typedef GetSubMapRequest Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasCenterPositionEnu();
  inline  ::senseAD::msg::std_msgs::Point::Builder getCenterPositionEnu();
  inline void setCenterPositionEnu( ::senseAD::msg::std_msgs::Point::Reader value);
  inline  ::senseAD::msg::std_msgs::Point::Builder initCenterPositionEnu();
  inline void adoptCenterPositionEnu(::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> disownCenterPositionEnu();

  inline double getRangeRadiusM();
  inline void setRangeRadiusM(double value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class GetSubMapRequest::Pipeline {
public:
  typedef GetSubMapRequest Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::std_msgs::Point::Pipeline getCenterPositionEnu();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class GetSubMapResponse::Reader {
public:
  typedef GetSubMapResponse Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool getSuccess() const;

  inline bool getMessage() const;

  inline bool hasSubMap() const;
  inline  ::senseAD::msg::hdmap::SubMap::Reader getSubMap() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class GetSubMapResponse::Builder {
public:
  typedef GetSubMapResponse Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool getSuccess();
  inline void setSuccess(bool value);

  inline bool getMessage();
  inline void setMessage(bool value);

  inline bool hasSubMap();
  inline  ::senseAD::msg::hdmap::SubMap::Builder getSubMap();
  inline void setSubMap( ::senseAD::msg::hdmap::SubMap::Reader value);
  inline  ::senseAD::msg::hdmap::SubMap::Builder initSubMap();
  inline void adoptSubMap(::capnp::Orphan< ::senseAD::msg::hdmap::SubMap>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::hdmap::SubMap> disownSubMap();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class GetSubMapResponse::Pipeline {
public:
  typedef GetSubMapResponse Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::hdmap::SubMap::Pipeline getSubMap();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class GetSectionBriefRequest::Reader {
public:
  typedef GetSectionBriefRequest Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasSectionId() const;
  inline  ::capnp::Text::Reader getSectionId() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class GetSectionBriefRequest::Builder {
public:
  typedef GetSectionBriefRequest Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasSectionId();
  inline  ::capnp::Text::Builder getSectionId();
  inline void setSectionId( ::capnp::Text::Reader value);
  inline  ::capnp::Text::Builder initSectionId(unsigned int size);
  inline void adoptSectionId(::capnp::Orphan< ::capnp::Text>&& value);
  inline ::capnp::Orphan< ::capnp::Text> disownSectionId();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class GetSectionBriefRequest::Pipeline {
public:
  typedef GetSectionBriefRequest Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class GetSectionBriefResponse::Reader {
public:
  typedef GetSectionBriefResponse Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool getSuccess() const;

  inline bool hasMessage() const;
  inline  ::capnp::Text::Reader getMessage() const;

  inline bool hasBrief() const;
  inline  ::senseAD::msg::hdmap::SectionBrief::Reader getBrief() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class GetSectionBriefResponse::Builder {
public:
  typedef GetSectionBriefResponse Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool getSuccess();
  inline void setSuccess(bool value);

  inline bool hasMessage();
  inline  ::capnp::Text::Builder getMessage();
  inline void setMessage( ::capnp::Text::Reader value);
  inline  ::capnp::Text::Builder initMessage(unsigned int size);
  inline void adoptMessage(::capnp::Orphan< ::capnp::Text>&& value);
  inline ::capnp::Orphan< ::capnp::Text> disownMessage();

  inline bool hasBrief();
  inline  ::senseAD::msg::hdmap::SectionBrief::Builder getBrief();
  inline void setBrief( ::senseAD::msg::hdmap::SectionBrief::Reader value);
  inline  ::senseAD::msg::hdmap::SectionBrief::Builder initBrief();
  inline void adoptBrief(::capnp::Orphan< ::senseAD::msg::hdmap::SectionBrief>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::hdmap::SectionBrief> disownBrief();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class GetSectionBriefResponse::Pipeline {
public:
  typedef GetSectionBriefResponse Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::hdmap::SectionBrief::Pipeline getBrief();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class QueryRouteRequest::Reader {
public:
  typedef QueryRouteRequest Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasDepartureLla() const;
  inline  ::senseAD::msg::hdmap::MapCoordLLA::Reader getDepartureLla() const;

  inline bool hasDestinationLla() const;
  inline  ::senseAD::msg::hdmap::MapCoordLLA::Reader getDestinationLla() const;

  inline bool hasMidPointsLla() const;
  inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Reader getMidPointsLla() const;

  inline bool hasBlacklistPointsLla() const;
  inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Reader getBlacklistPointsLla() const;

  inline bool getDestinationPullOver() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class QueryRouteRequest::Builder {
public:
  typedef QueryRouteRequest Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasDepartureLla();
  inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder getDepartureLla();
  inline void setDepartureLla( ::senseAD::msg::hdmap::MapCoordLLA::Reader value);
  inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder initDepartureLla();
  inline void adoptDepartureLla(::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA> disownDepartureLla();

  inline bool hasDestinationLla();
  inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder getDestinationLla();
  inline void setDestinationLla( ::senseAD::msg::hdmap::MapCoordLLA::Reader value);
  inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder initDestinationLla();
  inline void adoptDestinationLla(::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA> disownDestinationLla();

  inline bool hasMidPointsLla();
  inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Builder getMidPointsLla();
  inline void setMidPointsLla( ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Builder initMidPointsLla(unsigned int size);
  inline void adoptMidPointsLla(::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>> disownMidPointsLla();

  inline bool hasBlacklistPointsLla();
  inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Builder getBlacklistPointsLla();
  inline void setBlacklistPointsLla( ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Builder initBlacklistPointsLla(unsigned int size);
  inline void adoptBlacklistPointsLla(::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>> disownBlacklistPointsLla();

  inline bool getDestinationPullOver();
  inline void setDestinationPullOver(bool value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class QueryRouteRequest::Pipeline {
public:
  typedef QueryRouteRequest Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::hdmap::MapCoordLLA::Pipeline getDepartureLla();
  inline  ::senseAD::msg::hdmap::MapCoordLLA::Pipeline getDestinationLla();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class QueryRouteResponse::Reader {
public:
  typedef QueryRouteResponse Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool getSuccess() const;

  inline bool hasMessage() const;
  inline  ::capnp::Text::Reader getMessage() const;

  inline bool hasNodeList() const;
  inline  ::capnp::List< ::senseAD::msg::hdmap::RoutingNode,  ::capnp::Kind::STRUCT>::Reader getNodeList() const;

  inline bool hasNavigationLine() const;
  inline  ::capnp::List< ::senseAD::msg::hdmap::RoutingLine,  ::capnp::Kind::STRUCT>::Reader getNavigationLine() const;

  inline bool hasDepartureLla() const;
  inline  ::senseAD::msg::hdmap::MapCoordLLA::Reader getDepartureLla() const;

  inline bool hasDestinationLla() const;
  inline  ::senseAD::msg::hdmap::MapCoordLLA::Reader getDestinationLla() const;

  inline bool hasDebugInfo() const;
  inline  ::capnp::Text::Reader getDebugInfo() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class QueryRouteResponse::Builder {
public:
  typedef QueryRouteResponse Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool getSuccess();
  inline void setSuccess(bool value);

  inline bool hasMessage();
  inline  ::capnp::Text::Builder getMessage();
  inline void setMessage( ::capnp::Text::Reader value);
  inline  ::capnp::Text::Builder initMessage(unsigned int size);
  inline void adoptMessage(::capnp::Orphan< ::capnp::Text>&& value);
  inline ::capnp::Orphan< ::capnp::Text> disownMessage();

  inline bool hasNodeList();
  inline  ::capnp::List< ::senseAD::msg::hdmap::RoutingNode,  ::capnp::Kind::STRUCT>::Builder getNodeList();
  inline void setNodeList( ::capnp::List< ::senseAD::msg::hdmap::RoutingNode,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::senseAD::msg::hdmap::RoutingNode,  ::capnp::Kind::STRUCT>::Builder initNodeList(unsigned int size);
  inline void adoptNodeList(::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::RoutingNode,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::RoutingNode,  ::capnp::Kind::STRUCT>> disownNodeList();

  inline bool hasNavigationLine();
  inline  ::capnp::List< ::senseAD::msg::hdmap::RoutingLine,  ::capnp::Kind::STRUCT>::Builder getNavigationLine();
  inline void setNavigationLine( ::capnp::List< ::senseAD::msg::hdmap::RoutingLine,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::senseAD::msg::hdmap::RoutingLine,  ::capnp::Kind::STRUCT>::Builder initNavigationLine(unsigned int size);
  inline void adoptNavigationLine(::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::RoutingLine,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::RoutingLine,  ::capnp::Kind::STRUCT>> disownNavigationLine();

  inline bool hasDepartureLla();
  inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder getDepartureLla();
  inline void setDepartureLla( ::senseAD::msg::hdmap::MapCoordLLA::Reader value);
  inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder initDepartureLla();
  inline void adoptDepartureLla(::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA> disownDepartureLla();

  inline bool hasDestinationLla();
  inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder getDestinationLla();
  inline void setDestinationLla( ::senseAD::msg::hdmap::MapCoordLLA::Reader value);
  inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder initDestinationLla();
  inline void adoptDestinationLla(::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA> disownDestinationLla();

  inline bool hasDebugInfo();
  inline  ::capnp::Text::Builder getDebugInfo();
  inline void setDebugInfo( ::capnp::Text::Reader value);
  inline  ::capnp::Text::Builder initDebugInfo(unsigned int size);
  inline void adoptDebugInfo(::capnp::Orphan< ::capnp::Text>&& value);
  inline ::capnp::Orphan< ::capnp::Text> disownDebugInfo();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class QueryRouteResponse::Pipeline {
public:
  typedef QueryRouteResponse Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::hdmap::MapCoordLLA::Pipeline getDepartureLla();
  inline  ::senseAD::msg::hdmap::MapCoordLLA::Pipeline getDestinationLla();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class RerouteByENURequest::Reader {
public:
  typedef RerouteByENURequest Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasDepartureEnu() const;
  inline  ::senseAD::msg::std_msgs::Point::Reader getDepartureEnu() const;

  inline bool hasDestinationEnu() const;
  inline  ::senseAD::msg::std_msgs::Point::Reader getDestinationEnu() const;

  inline bool hasMidPointsEnu() const;
  inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Reader getMidPointsEnu() const;

  inline bool hasBlacklistPointsEnu() const;
  inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Reader getBlacklistPointsEnu() const;

  inline bool getDestinationPullOver() const;

  inline  ::senseAD::msg::hdmap::RoutingRequestType getRequestType() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class RerouteByENURequest::Builder {
public:
  typedef RerouteByENURequest Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasDepartureEnu();
  inline  ::senseAD::msg::std_msgs::Point::Builder getDepartureEnu();
  inline void setDepartureEnu( ::senseAD::msg::std_msgs::Point::Reader value);
  inline  ::senseAD::msg::std_msgs::Point::Builder initDepartureEnu();
  inline void adoptDepartureEnu(::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> disownDepartureEnu();

  inline bool hasDestinationEnu();
  inline  ::senseAD::msg::std_msgs::Point::Builder getDestinationEnu();
  inline void setDestinationEnu( ::senseAD::msg::std_msgs::Point::Reader value);
  inline  ::senseAD::msg::std_msgs::Point::Builder initDestinationEnu();
  inline void adoptDestinationEnu(::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> disownDestinationEnu();

  inline bool hasMidPointsEnu();
  inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Builder getMidPointsEnu();
  inline void setMidPointsEnu( ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Builder initMidPointsEnu(unsigned int size);
  inline void adoptMidPointsEnu(::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>> disownMidPointsEnu();

  inline bool hasBlacklistPointsEnu();
  inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Builder getBlacklistPointsEnu();
  inline void setBlacklistPointsEnu( ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Builder initBlacklistPointsEnu(unsigned int size);
  inline void adoptBlacklistPointsEnu(::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>> disownBlacklistPointsEnu();

  inline bool getDestinationPullOver();
  inline void setDestinationPullOver(bool value);

  inline  ::senseAD::msg::hdmap::RoutingRequestType getRequestType();
  inline void setRequestType( ::senseAD::msg::hdmap::RoutingRequestType value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class RerouteByENURequest::Pipeline {
public:
  typedef RerouteByENURequest Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::std_msgs::Point::Pipeline getDepartureEnu();
  inline  ::senseAD::msg::std_msgs::Point::Pipeline getDestinationEnu();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class RerouteByENUResponse::Reader {
public:
  typedef RerouteByENUResponse Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool getSuccess() const;

  inline bool hasMessage() const;
  inline  ::capnp::Text::Reader getMessage() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class RerouteByENUResponse::Builder {
public:
  typedef RerouteByENUResponse Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool getSuccess();
  inline void setSuccess(bool value);

  inline bool hasMessage();
  inline  ::capnp::Text::Builder getMessage();
  inline void setMessage( ::capnp::Text::Reader value);
  inline  ::capnp::Text::Builder initMessage(unsigned int size);
  inline void adoptMessage(::capnp::Orphan< ::capnp::Text>&& value);
  inline ::capnp::Orphan< ::capnp::Text> disownMessage();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class RerouteByENUResponse::Pipeline {
public:
  typedef RerouteByENUResponse Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class RerouteByLaneIDRequest::Reader {
public:
  typedef RerouteByLaneIDRequest Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasDepartureEnu() const;
  inline  ::senseAD::msg::std_msgs::Point::Reader getDepartureEnu() const;

  inline bool hasDestinationEnu() const;
  inline  ::senseAD::msg::std_msgs::Point::Reader getDestinationEnu() const;

  inline bool hasMidLaneIds() const;
  inline  ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>::Reader getMidLaneIds() const;

  inline bool hasBlacklistLanes() const;
  inline  ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>::Reader getBlacklistLanes() const;

  inline bool getDestinationPullOver() const;

  inline  ::senseAD::msg::hdmap::RoutingRequestType getRequestType() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class RerouteByLaneIDRequest::Builder {
public:
  typedef RerouteByLaneIDRequest Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasDepartureEnu();
  inline  ::senseAD::msg::std_msgs::Point::Builder getDepartureEnu();
  inline void setDepartureEnu( ::senseAD::msg::std_msgs::Point::Reader value);
  inline  ::senseAD::msg::std_msgs::Point::Builder initDepartureEnu();
  inline void adoptDepartureEnu(::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> disownDepartureEnu();

  inline bool hasDestinationEnu();
  inline  ::senseAD::msg::std_msgs::Point::Builder getDestinationEnu();
  inline void setDestinationEnu( ::senseAD::msg::std_msgs::Point::Reader value);
  inline  ::senseAD::msg::std_msgs::Point::Builder initDestinationEnu();
  inline void adoptDestinationEnu(::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> disownDestinationEnu();

  inline bool hasMidLaneIds();
  inline  ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>::Builder getMidLaneIds();
  inline void setMidLaneIds( ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>::Reader value);
  inline void setMidLaneIds(::kj::ArrayPtr<const  ::capnp::Text::Reader> value);
  inline  ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>::Builder initMidLaneIds(unsigned int size);
  inline void adoptMidLaneIds(::capnp::Orphan< ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>> disownMidLaneIds();

  inline bool hasBlacklistLanes();
  inline  ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>::Builder getBlacklistLanes();
  inline void setBlacklistLanes( ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>::Reader value);
  inline void setBlacklistLanes(::kj::ArrayPtr<const  ::capnp::Text::Reader> value);
  inline  ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>::Builder initBlacklistLanes(unsigned int size);
  inline void adoptBlacklistLanes(::capnp::Orphan< ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>> disownBlacklistLanes();

  inline bool getDestinationPullOver();
  inline void setDestinationPullOver(bool value);

  inline  ::senseAD::msg::hdmap::RoutingRequestType getRequestType();
  inline void setRequestType( ::senseAD::msg::hdmap::RoutingRequestType value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class RerouteByLaneIDRequest::Pipeline {
public:
  typedef RerouteByLaneIDRequest Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::std_msgs::Point::Pipeline getDepartureEnu();
  inline  ::senseAD::msg::std_msgs::Point::Pipeline getDestinationEnu();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class RerouteByLaneIDResponse::Reader {
public:
  typedef RerouteByLaneIDResponse Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool getSuccess() const;

  inline bool hasMessage() const;
  inline  ::capnp::Text::Reader getMessage() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class RerouteByLaneIDResponse::Builder {
public:
  typedef RerouteByLaneIDResponse Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool getSuccess();
  inline void setSuccess(bool value);

  inline bool hasMessage();
  inline  ::capnp::Text::Builder getMessage();
  inline void setMessage( ::capnp::Text::Reader value);
  inline  ::capnp::Text::Builder initMessage(unsigned int size);
  inline void adoptMessage(::capnp::Orphan< ::capnp::Text>&& value);
  inline ::capnp::Orphan< ::capnp::Text> disownMessage();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class RerouteByLaneIDResponse::Pipeline {
public:
  typedef RerouteByLaneIDResponse Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class RerouteByLLARequest::Reader {
public:
  typedef RerouteByLLARequest Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasDepartureLla() const;
  inline  ::senseAD::msg::hdmap::MapCoordLLA::Reader getDepartureLla() const;

  inline bool hasDestinationLla() const;
  inline  ::senseAD::msg::hdmap::MapCoordLLA::Reader getDestinationLla() const;

  inline bool hasMidPointsLla() const;
  inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Reader getMidPointsLla() const;

  inline bool hasBlacklistPointsLla() const;
  inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Reader getBlacklistPointsLla() const;

  inline bool getDestinationPullOver() const;

  inline  ::senseAD::msg::hdmap::RoutingRequestType getRequestType() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class RerouteByLLARequest::Builder {
public:
  typedef RerouteByLLARequest Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasDepartureLla();
  inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder getDepartureLla();
  inline void setDepartureLla( ::senseAD::msg::hdmap::MapCoordLLA::Reader value);
  inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder initDepartureLla();
  inline void adoptDepartureLla(::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA> disownDepartureLla();

  inline bool hasDestinationLla();
  inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder getDestinationLla();
  inline void setDestinationLla( ::senseAD::msg::hdmap::MapCoordLLA::Reader value);
  inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder initDestinationLla();
  inline void adoptDestinationLla(::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA> disownDestinationLla();

  inline bool hasMidPointsLla();
  inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Builder getMidPointsLla();
  inline void setMidPointsLla( ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Builder initMidPointsLla(unsigned int size);
  inline void adoptMidPointsLla(::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>> disownMidPointsLla();

  inline bool hasBlacklistPointsLla();
  inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Builder getBlacklistPointsLla();
  inline void setBlacklistPointsLla( ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Builder initBlacklistPointsLla(unsigned int size);
  inline void adoptBlacklistPointsLla(::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>> disownBlacklistPointsLla();

  inline bool getDestinationPullOver();
  inline void setDestinationPullOver(bool value);

  inline  ::senseAD::msg::hdmap::RoutingRequestType getRequestType();
  inline void setRequestType( ::senseAD::msg::hdmap::RoutingRequestType value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class RerouteByLLARequest::Pipeline {
public:
  typedef RerouteByLLARequest Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::hdmap::MapCoordLLA::Pipeline getDepartureLla();
  inline  ::senseAD::msg::hdmap::MapCoordLLA::Pipeline getDestinationLla();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class RerouteByLLAResponse::Reader {
public:
  typedef RerouteByLLAResponse Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool getSuccess() const;

  inline bool hasMessage() const;
  inline  ::capnp::Text::Reader getMessage() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class RerouteByLLAResponse::Builder {
public:
  typedef RerouteByLLAResponse Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool getSuccess();
  inline void setSuccess(bool value);

  inline bool hasMessage();
  inline  ::capnp::Text::Builder getMessage();
  inline void setMessage( ::capnp::Text::Reader value);
  inline  ::capnp::Text::Builder initMessage(unsigned int size);
  inline void adoptMessage(::capnp::Orphan< ::capnp::Text>&& value);
  inline ::capnp::Orphan< ::capnp::Text> disownMessage();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class RerouteByLLAResponse::Pipeline {
public:
  typedef RerouteByLLAResponse Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

inline bool GetSubMapRequest::Reader::hasCenterPositionEnu() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool GetSubMapRequest::Builder::hasCenterPositionEnu() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::std_msgs::Point::Reader GetSubMapRequest::Reader::getCenterPositionEnu() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::std_msgs::Point::Builder GetSubMapRequest::Builder::getCenterPositionEnu() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::std_msgs::Point::Pipeline GetSubMapRequest::Pipeline::getCenterPositionEnu() {
  return  ::senseAD::msg::std_msgs::Point::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void GetSubMapRequest::Builder::setCenterPositionEnu( ::senseAD::msg::std_msgs::Point::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::std_msgs::Point::Builder GetSubMapRequest::Builder::initCenterPositionEnu() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void GetSubMapRequest::Builder::adoptCenterPositionEnu(
    ::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> GetSubMapRequest::Builder::disownCenterPositionEnu() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline double GetSubMapRequest::Reader::getRangeRadiusM() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline double GetSubMapRequest::Builder::getRangeRadiusM() {
  return _builder.getDataField<double>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void GetSubMapRequest::Builder::setRangeRadiusM(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline bool GetSubMapResponse::Reader::getSuccess() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline bool GetSubMapResponse::Builder::getSuccess() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void GetSubMapResponse::Builder::setSuccess(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline bool GetSubMapResponse::Reader::getMessage() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline bool GetSubMapResponse::Builder::getMessage() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void GetSubMapResponse::Builder::setMessage(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline bool GetSubMapResponse::Reader::hasSubMap() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool GetSubMapResponse::Builder::hasSubMap() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::hdmap::SubMap::Reader GetSubMapResponse::Reader::getSubMap() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::SubMap>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::hdmap::SubMap::Builder GetSubMapResponse::Builder::getSubMap() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::SubMap>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::hdmap::SubMap::Pipeline GetSubMapResponse::Pipeline::getSubMap() {
  return  ::senseAD::msg::hdmap::SubMap::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void GetSubMapResponse::Builder::setSubMap( ::senseAD::msg::hdmap::SubMap::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::SubMap>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::hdmap::SubMap::Builder GetSubMapResponse::Builder::initSubMap() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::SubMap>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void GetSubMapResponse::Builder::adoptSubMap(
    ::capnp::Orphan< ::senseAD::msg::hdmap::SubMap>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::SubMap>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::hdmap::SubMap> GetSubMapResponse::Builder::disownSubMap() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::SubMap>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool GetSectionBriefRequest::Reader::hasSectionId() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool GetSectionBriefRequest::Builder::hasSectionId() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::Text::Reader GetSectionBriefRequest::Reader::getSectionId() const {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::capnp::Text::Builder GetSectionBriefRequest::Builder::getSectionId() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void GetSectionBriefRequest::Builder::setSectionId( ::capnp::Text::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::capnp::Text::Builder GetSectionBriefRequest::Builder::initSectionId(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), size);
}
inline void GetSectionBriefRequest::Builder::adoptSectionId(
    ::capnp::Orphan< ::capnp::Text>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::Text> GetSectionBriefRequest::Builder::disownSectionId() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool GetSectionBriefResponse::Reader::getSuccess() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline bool GetSectionBriefResponse::Builder::getSuccess() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void GetSectionBriefResponse::Builder::setSuccess(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline bool GetSectionBriefResponse::Reader::hasMessage() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool GetSectionBriefResponse::Builder::hasMessage() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::Text::Reader GetSectionBriefResponse::Reader::getMessage() const {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::capnp::Text::Builder GetSectionBriefResponse::Builder::getMessage() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void GetSectionBriefResponse::Builder::setMessage( ::capnp::Text::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::capnp::Text::Builder GetSectionBriefResponse::Builder::initMessage(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), size);
}
inline void GetSectionBriefResponse::Builder::adoptMessage(
    ::capnp::Orphan< ::capnp::Text>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::Text> GetSectionBriefResponse::Builder::disownMessage() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool GetSectionBriefResponse::Reader::hasBrief() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool GetSectionBriefResponse::Builder::hasBrief() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::hdmap::SectionBrief::Reader GetSectionBriefResponse::Reader::getBrief() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::SectionBrief>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::hdmap::SectionBrief::Builder GetSectionBriefResponse::Builder::getBrief() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::SectionBrief>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::hdmap::SectionBrief::Pipeline GetSectionBriefResponse::Pipeline::getBrief() {
  return  ::senseAD::msg::hdmap::SectionBrief::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void GetSectionBriefResponse::Builder::setBrief( ::senseAD::msg::hdmap::SectionBrief::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::SectionBrief>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::hdmap::SectionBrief::Builder GetSectionBriefResponse::Builder::initBrief() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::SectionBrief>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void GetSectionBriefResponse::Builder::adoptBrief(
    ::capnp::Orphan< ::senseAD::msg::hdmap::SectionBrief>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::SectionBrief>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::hdmap::SectionBrief> GetSectionBriefResponse::Builder::disownBrief() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::SectionBrief>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool QueryRouteRequest::Reader::hasDepartureLla() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool QueryRouteRequest::Builder::hasDepartureLla() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::hdmap::MapCoordLLA::Reader QueryRouteRequest::Reader::getDepartureLla() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder QueryRouteRequest::Builder::getDepartureLla() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::hdmap::MapCoordLLA::Pipeline QueryRouteRequest::Pipeline::getDepartureLla() {
  return  ::senseAD::msg::hdmap::MapCoordLLA::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void QueryRouteRequest::Builder::setDepartureLla( ::senseAD::msg::hdmap::MapCoordLLA::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder QueryRouteRequest::Builder::initDepartureLla() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void QueryRouteRequest::Builder::adoptDepartureLla(
    ::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA> QueryRouteRequest::Builder::disownDepartureLla() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool QueryRouteRequest::Reader::hasDestinationLla() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool QueryRouteRequest::Builder::hasDestinationLla() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::hdmap::MapCoordLLA::Reader QueryRouteRequest::Reader::getDestinationLla() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder QueryRouteRequest::Builder::getDestinationLla() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::hdmap::MapCoordLLA::Pipeline QueryRouteRequest::Pipeline::getDestinationLla() {
  return  ::senseAD::msg::hdmap::MapCoordLLA::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void QueryRouteRequest::Builder::setDestinationLla( ::senseAD::msg::hdmap::MapCoordLLA::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder QueryRouteRequest::Builder::initDestinationLla() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void QueryRouteRequest::Builder::adoptDestinationLla(
    ::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA> QueryRouteRequest::Builder::disownDestinationLla() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool QueryRouteRequest::Reader::hasMidPointsLla() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool QueryRouteRequest::Builder::hasMidPointsLla() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Reader QueryRouteRequest::Reader::getMidPointsLla() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Builder QueryRouteRequest::Builder::getMidPointsLla() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void QueryRouteRequest::Builder::setMidPointsLla( ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Builder QueryRouteRequest::Builder::initMidPointsLla(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), size);
}
inline void QueryRouteRequest::Builder::adoptMidPointsLla(
    ::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>> QueryRouteRequest::Builder::disownMidPointsLla() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool QueryRouteRequest::Reader::hasBlacklistPointsLla() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool QueryRouteRequest::Builder::hasBlacklistPointsLla() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Reader QueryRouteRequest::Reader::getBlacklistPointsLla() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Builder QueryRouteRequest::Builder::getBlacklistPointsLla() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void QueryRouteRequest::Builder::setBlacklistPointsLla( ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Builder QueryRouteRequest::Builder::initBlacklistPointsLla(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), size);
}
inline void QueryRouteRequest::Builder::adoptBlacklistPointsLla(
    ::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>> QueryRouteRequest::Builder::disownBlacklistPointsLla() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline bool QueryRouteRequest::Reader::getDestinationPullOver() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline bool QueryRouteRequest::Builder::getDestinationPullOver() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void QueryRouteRequest::Builder::setDestinationPullOver(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline bool QueryRouteResponse::Reader::getSuccess() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline bool QueryRouteResponse::Builder::getSuccess() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void QueryRouteResponse::Builder::setSuccess(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline bool QueryRouteResponse::Reader::hasMessage() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool QueryRouteResponse::Builder::hasMessage() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::Text::Reader QueryRouteResponse::Reader::getMessage() const {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::capnp::Text::Builder QueryRouteResponse::Builder::getMessage() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void QueryRouteResponse::Builder::setMessage( ::capnp::Text::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::capnp::Text::Builder QueryRouteResponse::Builder::initMessage(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), size);
}
inline void QueryRouteResponse::Builder::adoptMessage(
    ::capnp::Orphan< ::capnp::Text>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::Text> QueryRouteResponse::Builder::disownMessage() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool QueryRouteResponse::Reader::hasNodeList() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool QueryRouteResponse::Builder::hasNodeList() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::senseAD::msg::hdmap::RoutingNode,  ::capnp::Kind::STRUCT>::Reader QueryRouteResponse::Reader::getNodeList() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::RoutingNode,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::senseAD::msg::hdmap::RoutingNode,  ::capnp::Kind::STRUCT>::Builder QueryRouteResponse::Builder::getNodeList() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::RoutingNode,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void QueryRouteResponse::Builder::setNodeList( ::capnp::List< ::senseAD::msg::hdmap::RoutingNode,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::RoutingNode,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::senseAD::msg::hdmap::RoutingNode,  ::capnp::Kind::STRUCT>::Builder QueryRouteResponse::Builder::initNodeList(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::RoutingNode,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), size);
}
inline void QueryRouteResponse::Builder::adoptNodeList(
    ::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::RoutingNode,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::RoutingNode,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::RoutingNode,  ::capnp::Kind::STRUCT>> QueryRouteResponse::Builder::disownNodeList() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::RoutingNode,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool QueryRouteResponse::Reader::hasNavigationLine() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool QueryRouteResponse::Builder::hasNavigationLine() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::senseAD::msg::hdmap::RoutingLine,  ::capnp::Kind::STRUCT>::Reader QueryRouteResponse::Reader::getNavigationLine() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::RoutingLine,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::senseAD::msg::hdmap::RoutingLine,  ::capnp::Kind::STRUCT>::Builder QueryRouteResponse::Builder::getNavigationLine() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::RoutingLine,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void QueryRouteResponse::Builder::setNavigationLine( ::capnp::List< ::senseAD::msg::hdmap::RoutingLine,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::RoutingLine,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::senseAD::msg::hdmap::RoutingLine,  ::capnp::Kind::STRUCT>::Builder QueryRouteResponse::Builder::initNavigationLine(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::RoutingLine,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), size);
}
inline void QueryRouteResponse::Builder::adoptNavigationLine(
    ::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::RoutingLine,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::RoutingLine,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::RoutingLine,  ::capnp::Kind::STRUCT>> QueryRouteResponse::Builder::disownNavigationLine() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::RoutingLine,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool QueryRouteResponse::Reader::hasDepartureLla() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool QueryRouteResponse::Builder::hasDepartureLla() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::hdmap::MapCoordLLA::Reader QueryRouteResponse::Reader::getDepartureLla() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder QueryRouteResponse::Builder::getDepartureLla() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::hdmap::MapCoordLLA::Pipeline QueryRouteResponse::Pipeline::getDepartureLla() {
  return  ::senseAD::msg::hdmap::MapCoordLLA::Pipeline(_typeless.getPointerField(3));
}
#endif  // !CAPNP_LITE
inline void QueryRouteResponse::Builder::setDepartureLla( ::senseAD::msg::hdmap::MapCoordLLA::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder QueryRouteResponse::Builder::initDepartureLla() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void QueryRouteResponse::Builder::adoptDepartureLla(
    ::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA> QueryRouteResponse::Builder::disownDepartureLla() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline bool QueryRouteResponse::Reader::hasDestinationLla() const {
  return !_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline bool QueryRouteResponse::Builder::hasDestinationLla() {
  return !_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::hdmap::MapCoordLLA::Reader QueryRouteResponse::Reader::getDestinationLla() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::get(_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder QueryRouteResponse::Builder::getDestinationLla() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::get(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::hdmap::MapCoordLLA::Pipeline QueryRouteResponse::Pipeline::getDestinationLla() {
  return  ::senseAD::msg::hdmap::MapCoordLLA::Pipeline(_typeless.getPointerField(4));
}
#endif  // !CAPNP_LITE
inline void QueryRouteResponse::Builder::setDestinationLla( ::senseAD::msg::hdmap::MapCoordLLA::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::set(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder QueryRouteResponse::Builder::initDestinationLla() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::init(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline void QueryRouteResponse::Builder::adoptDestinationLla(
    ::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::adopt(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA> QueryRouteResponse::Builder::disownDestinationLla() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::disown(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}

inline bool QueryRouteResponse::Reader::hasDebugInfo() const {
  return !_reader.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS).isNull();
}
inline bool QueryRouteResponse::Builder::hasDebugInfo() {
  return !_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::Text::Reader QueryRouteResponse::Reader::getDebugInfo() const {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_reader.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
inline  ::capnp::Text::Builder QueryRouteResponse::Builder::getDebugInfo() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
inline void QueryRouteResponse::Builder::setDebugInfo( ::capnp::Text::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::set(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), value);
}
inline  ::capnp::Text::Builder QueryRouteResponse::Builder::initDebugInfo(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::init(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), size);
}
inline void QueryRouteResponse::Builder::adoptDebugInfo(
    ::capnp::Orphan< ::capnp::Text>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::adopt(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::Text> QueryRouteResponse::Builder::disownDebugInfo() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::disown(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}

inline bool RerouteByENURequest::Reader::hasDepartureEnu() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool RerouteByENURequest::Builder::hasDepartureEnu() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::std_msgs::Point::Reader RerouteByENURequest::Reader::getDepartureEnu() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::std_msgs::Point::Builder RerouteByENURequest::Builder::getDepartureEnu() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::std_msgs::Point::Pipeline RerouteByENURequest::Pipeline::getDepartureEnu() {
  return  ::senseAD::msg::std_msgs::Point::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void RerouteByENURequest::Builder::setDepartureEnu( ::senseAD::msg::std_msgs::Point::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::std_msgs::Point::Builder RerouteByENURequest::Builder::initDepartureEnu() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void RerouteByENURequest::Builder::adoptDepartureEnu(
    ::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> RerouteByENURequest::Builder::disownDepartureEnu() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool RerouteByENURequest::Reader::hasDestinationEnu() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool RerouteByENURequest::Builder::hasDestinationEnu() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::std_msgs::Point::Reader RerouteByENURequest::Reader::getDestinationEnu() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::std_msgs::Point::Builder RerouteByENURequest::Builder::getDestinationEnu() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::std_msgs::Point::Pipeline RerouteByENURequest::Pipeline::getDestinationEnu() {
  return  ::senseAD::msg::std_msgs::Point::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void RerouteByENURequest::Builder::setDestinationEnu( ::senseAD::msg::std_msgs::Point::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::std_msgs::Point::Builder RerouteByENURequest::Builder::initDestinationEnu() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void RerouteByENURequest::Builder::adoptDestinationEnu(
    ::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> RerouteByENURequest::Builder::disownDestinationEnu() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool RerouteByENURequest::Reader::hasMidPointsEnu() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool RerouteByENURequest::Builder::hasMidPointsEnu() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Reader RerouteByENURequest::Reader::getMidPointsEnu() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Builder RerouteByENURequest::Builder::getMidPointsEnu() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void RerouteByENURequest::Builder::setMidPointsEnu( ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Builder RerouteByENURequest::Builder::initMidPointsEnu(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), size);
}
inline void RerouteByENURequest::Builder::adoptMidPointsEnu(
    ::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>> RerouteByENURequest::Builder::disownMidPointsEnu() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool RerouteByENURequest::Reader::hasBlacklistPointsEnu() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool RerouteByENURequest::Builder::hasBlacklistPointsEnu() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Reader RerouteByENURequest::Reader::getBlacklistPointsEnu() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Builder RerouteByENURequest::Builder::getBlacklistPointsEnu() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void RerouteByENURequest::Builder::setBlacklistPointsEnu( ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>::Builder RerouteByENURequest::Builder::initBlacklistPointsEnu(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), size);
}
inline void RerouteByENURequest::Builder::adoptBlacklistPointsEnu(
    ::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>> RerouteByENURequest::Builder::disownBlacklistPointsEnu() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Point,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline bool RerouteByENURequest::Reader::getDestinationPullOver() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline bool RerouteByENURequest::Builder::getDestinationPullOver() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void RerouteByENURequest::Builder::setDestinationPullOver(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::senseAD::msg::hdmap::RoutingRequestType RerouteByENURequest::Reader::getRequestType() const {
  return _reader.getDataField< ::senseAD::msg::hdmap::RoutingRequestType>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::senseAD::msg::hdmap::RoutingRequestType RerouteByENURequest::Builder::getRequestType() {
  return _builder.getDataField< ::senseAD::msg::hdmap::RoutingRequestType>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void RerouteByENURequest::Builder::setRequestType( ::senseAD::msg::hdmap::RoutingRequestType value) {
  _builder.setDataField< ::senseAD::msg::hdmap::RoutingRequestType>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline bool RerouteByENUResponse::Reader::getSuccess() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline bool RerouteByENUResponse::Builder::getSuccess() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void RerouteByENUResponse::Builder::setSuccess(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline bool RerouteByENUResponse::Reader::hasMessage() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool RerouteByENUResponse::Builder::hasMessage() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::Text::Reader RerouteByENUResponse::Reader::getMessage() const {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::capnp::Text::Builder RerouteByENUResponse::Builder::getMessage() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void RerouteByENUResponse::Builder::setMessage( ::capnp::Text::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::capnp::Text::Builder RerouteByENUResponse::Builder::initMessage(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), size);
}
inline void RerouteByENUResponse::Builder::adoptMessage(
    ::capnp::Orphan< ::capnp::Text>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::Text> RerouteByENUResponse::Builder::disownMessage() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool RerouteByLaneIDRequest::Reader::hasDepartureEnu() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool RerouteByLaneIDRequest::Builder::hasDepartureEnu() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::std_msgs::Point::Reader RerouteByLaneIDRequest::Reader::getDepartureEnu() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::std_msgs::Point::Builder RerouteByLaneIDRequest::Builder::getDepartureEnu() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::std_msgs::Point::Pipeline RerouteByLaneIDRequest::Pipeline::getDepartureEnu() {
  return  ::senseAD::msg::std_msgs::Point::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void RerouteByLaneIDRequest::Builder::setDepartureEnu( ::senseAD::msg::std_msgs::Point::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::std_msgs::Point::Builder RerouteByLaneIDRequest::Builder::initDepartureEnu() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void RerouteByLaneIDRequest::Builder::adoptDepartureEnu(
    ::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> RerouteByLaneIDRequest::Builder::disownDepartureEnu() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool RerouteByLaneIDRequest::Reader::hasDestinationEnu() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool RerouteByLaneIDRequest::Builder::hasDestinationEnu() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::std_msgs::Point::Reader RerouteByLaneIDRequest::Reader::getDestinationEnu() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::std_msgs::Point::Builder RerouteByLaneIDRequest::Builder::getDestinationEnu() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::std_msgs::Point::Pipeline RerouteByLaneIDRequest::Pipeline::getDestinationEnu() {
  return  ::senseAD::msg::std_msgs::Point::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void RerouteByLaneIDRequest::Builder::setDestinationEnu( ::senseAD::msg::std_msgs::Point::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::std_msgs::Point::Builder RerouteByLaneIDRequest::Builder::initDestinationEnu() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void RerouteByLaneIDRequest::Builder::adoptDestinationEnu(
    ::capnp::Orphan< ::senseAD::msg::std_msgs::Point>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Point> RerouteByLaneIDRequest::Builder::disownDestinationEnu() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Point>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool RerouteByLaneIDRequest::Reader::hasMidLaneIds() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool RerouteByLaneIDRequest::Builder::hasMidLaneIds() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>::Reader RerouteByLaneIDRequest::Reader::getMidLaneIds() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>::Builder RerouteByLaneIDRequest::Builder::getMidLaneIds() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void RerouteByLaneIDRequest::Builder::setMidLaneIds( ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline void RerouteByLaneIDRequest::Builder::setMidLaneIds(::kj::ArrayPtr<const  ::capnp::Text::Reader> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>::Builder RerouteByLaneIDRequest::Builder::initMidLaneIds(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), size);
}
inline void RerouteByLaneIDRequest::Builder::adoptMidLaneIds(
    ::capnp::Orphan< ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>> RerouteByLaneIDRequest::Builder::disownMidLaneIds() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool RerouteByLaneIDRequest::Reader::hasBlacklistLanes() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool RerouteByLaneIDRequest::Builder::hasBlacklistLanes() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>::Reader RerouteByLaneIDRequest::Reader::getBlacklistLanes() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>::Builder RerouteByLaneIDRequest::Builder::getBlacklistLanes() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void RerouteByLaneIDRequest::Builder::setBlacklistLanes( ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline void RerouteByLaneIDRequest::Builder::setBlacklistLanes(::kj::ArrayPtr<const  ::capnp::Text::Reader> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>::Builder RerouteByLaneIDRequest::Builder::initBlacklistLanes(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), size);
}
inline void RerouteByLaneIDRequest::Builder::adoptBlacklistLanes(
    ::capnp::Orphan< ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>> RerouteByLaneIDRequest::Builder::disownBlacklistLanes() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::capnp::Text,  ::capnp::Kind::BLOB>>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline bool RerouteByLaneIDRequest::Reader::getDestinationPullOver() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline bool RerouteByLaneIDRequest::Builder::getDestinationPullOver() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void RerouteByLaneIDRequest::Builder::setDestinationPullOver(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::senseAD::msg::hdmap::RoutingRequestType RerouteByLaneIDRequest::Reader::getRequestType() const {
  return _reader.getDataField< ::senseAD::msg::hdmap::RoutingRequestType>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::senseAD::msg::hdmap::RoutingRequestType RerouteByLaneIDRequest::Builder::getRequestType() {
  return _builder.getDataField< ::senseAD::msg::hdmap::RoutingRequestType>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void RerouteByLaneIDRequest::Builder::setRequestType( ::senseAD::msg::hdmap::RoutingRequestType value) {
  _builder.setDataField< ::senseAD::msg::hdmap::RoutingRequestType>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline bool RerouteByLaneIDResponse::Reader::getSuccess() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline bool RerouteByLaneIDResponse::Builder::getSuccess() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void RerouteByLaneIDResponse::Builder::setSuccess(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline bool RerouteByLaneIDResponse::Reader::hasMessage() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool RerouteByLaneIDResponse::Builder::hasMessage() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::Text::Reader RerouteByLaneIDResponse::Reader::getMessage() const {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::capnp::Text::Builder RerouteByLaneIDResponse::Builder::getMessage() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void RerouteByLaneIDResponse::Builder::setMessage( ::capnp::Text::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::capnp::Text::Builder RerouteByLaneIDResponse::Builder::initMessage(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), size);
}
inline void RerouteByLaneIDResponse::Builder::adoptMessage(
    ::capnp::Orphan< ::capnp::Text>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::Text> RerouteByLaneIDResponse::Builder::disownMessage() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool RerouteByLLARequest::Reader::hasDepartureLla() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool RerouteByLLARequest::Builder::hasDepartureLla() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::hdmap::MapCoordLLA::Reader RerouteByLLARequest::Reader::getDepartureLla() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder RerouteByLLARequest::Builder::getDepartureLla() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::hdmap::MapCoordLLA::Pipeline RerouteByLLARequest::Pipeline::getDepartureLla() {
  return  ::senseAD::msg::hdmap::MapCoordLLA::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void RerouteByLLARequest::Builder::setDepartureLla( ::senseAD::msg::hdmap::MapCoordLLA::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder RerouteByLLARequest::Builder::initDepartureLla() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void RerouteByLLARequest::Builder::adoptDepartureLla(
    ::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA> RerouteByLLARequest::Builder::disownDepartureLla() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool RerouteByLLARequest::Reader::hasDestinationLla() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool RerouteByLLARequest::Builder::hasDestinationLla() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::hdmap::MapCoordLLA::Reader RerouteByLLARequest::Reader::getDestinationLla() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder RerouteByLLARequest::Builder::getDestinationLla() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::hdmap::MapCoordLLA::Pipeline RerouteByLLARequest::Pipeline::getDestinationLla() {
  return  ::senseAD::msg::hdmap::MapCoordLLA::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void RerouteByLLARequest::Builder::setDestinationLla( ::senseAD::msg::hdmap::MapCoordLLA::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::hdmap::MapCoordLLA::Builder RerouteByLLARequest::Builder::initDestinationLla() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void RerouteByLLARequest::Builder::adoptDestinationLla(
    ::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::hdmap::MapCoordLLA> RerouteByLLARequest::Builder::disownDestinationLla() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::hdmap::MapCoordLLA>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool RerouteByLLARequest::Reader::hasMidPointsLla() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool RerouteByLLARequest::Builder::hasMidPointsLla() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Reader RerouteByLLARequest::Reader::getMidPointsLla() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Builder RerouteByLLARequest::Builder::getMidPointsLla() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void RerouteByLLARequest::Builder::setMidPointsLla( ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Builder RerouteByLLARequest::Builder::initMidPointsLla(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), size);
}
inline void RerouteByLLARequest::Builder::adoptMidPointsLla(
    ::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>> RerouteByLLARequest::Builder::disownMidPointsLla() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool RerouteByLLARequest::Reader::hasBlacklistPointsLla() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool RerouteByLLARequest::Builder::hasBlacklistPointsLla() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Reader RerouteByLLARequest::Reader::getBlacklistPointsLla() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Builder RerouteByLLARequest::Builder::getBlacklistPointsLla() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void RerouteByLLARequest::Builder::setBlacklistPointsLla( ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>::Builder RerouteByLLARequest::Builder::initBlacklistPointsLla(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), size);
}
inline void RerouteByLLARequest::Builder::adoptBlacklistPointsLla(
    ::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>> RerouteByLLARequest::Builder::disownBlacklistPointsLla() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::hdmap::MapCoordLLA,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline bool RerouteByLLARequest::Reader::getDestinationPullOver() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline bool RerouteByLLARequest::Builder::getDestinationPullOver() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void RerouteByLLARequest::Builder::setDestinationPullOver(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::senseAD::msg::hdmap::RoutingRequestType RerouteByLLARequest::Reader::getRequestType() const {
  return _reader.getDataField< ::senseAD::msg::hdmap::RoutingRequestType>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::senseAD::msg::hdmap::RoutingRequestType RerouteByLLARequest::Builder::getRequestType() {
  return _builder.getDataField< ::senseAD::msg::hdmap::RoutingRequestType>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void RerouteByLLARequest::Builder::setRequestType( ::senseAD::msg::hdmap::RoutingRequestType value) {
  _builder.setDataField< ::senseAD::msg::hdmap::RoutingRequestType>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline bool RerouteByLLAResponse::Reader::getSuccess() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline bool RerouteByLLAResponse::Builder::getSuccess() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void RerouteByLLAResponse::Builder::setSuccess(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline bool RerouteByLLAResponse::Reader::hasMessage() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool RerouteByLLAResponse::Builder::hasMessage() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::Text::Reader RerouteByLLAResponse::Reader::getMessage() const {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::capnp::Text::Builder RerouteByLLAResponse::Builder::getMessage() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void RerouteByLLAResponse::Builder::setMessage( ::capnp::Text::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::capnp::Text::Builder RerouteByLLAResponse::Builder::initMessage(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), size);
}
inline void RerouteByLLAResponse::Builder::adoptMessage(
    ::capnp::Orphan< ::capnp::Text>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::Text> RerouteByLLAResponse::Builder::disownMessage() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

}  // namespace
}  // namespace
}  // namespace

CAPNP_END_HEADER

