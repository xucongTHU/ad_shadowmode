// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: acan.capnp

#pragma once

#include <capnp/generated-header-support.h>
#include <kj/windows-sanity.h>

#if CAPNP_VERSION != 10002
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif

#include <ad_msg_idl/std_msgs/header.capnp.h>

CAPNP_BEGIN_HEADER

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(f7c0e2695b065772);
CAPNP_DECLARE_SCHEMA(a28c767c4b6e2ddb);
CAPNP_DECLARE_SCHEMA(c525cd65003f8587);
CAPNP_DECLARE_SCHEMA(9ab137aa34923c06);
CAPNP_DECLARE_SCHEMA(cdcfd39e874b15a1);
CAPNP_DECLARE_SCHEMA(90e52dcc8521d7da);
CAPNP_DECLARE_SCHEMA(8c0e3415f607c8b8);
CAPNP_DECLARE_SCHEMA(ad5d439cd029d7f8);
CAPNP_DECLARE_SCHEMA(afbdd33ffe8cb198);
CAPNP_DECLARE_SCHEMA(82163832f90e9278);
CAPNP_DECLARE_SCHEMA(daa3537f800f6c63);
CAPNP_DECLARE_SCHEMA(f86a936352a5b2cc);
CAPNP_DECLARE_SCHEMA(93decca1eda9d909);

}  // namespace schemas
}  // namespace capnp

namespace senseAD {
namespace msg {
namespace chassis_acan {

struct Eps2 {
  Eps2() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(f7c0e2695b065772, 2, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct Bcs10A {
  Bcs10A() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(a28c767c4b6e2ddb, 4, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct Vcu21A {
  Vcu21A() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(c525cd65003f8587, 2, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct Vcu13A {
  Vcu13A() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(9ab137aa34923c06, 2, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct Ebb2A {
  Ebb2A() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(cdcfd39e874b15a1, 2, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct GwBcm2A {
  GwBcm2A() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(90e52dcc8521d7da, 4, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct Bcs9A {
  Bcs9A() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(8c0e3415f607c8b8, 2, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct Vcu9A {
  Vcu9A() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(ad5d439cd029d7f8, 2, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct Vcu14A {
  Vcu14A() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(afbdd33ffe8cb198, 2, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct Bcs11A {
  Bcs11A() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(82163832f90e9278, 3, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct Eps1 {
  Eps1() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(daa3537f800f6c63, 2, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct Bcs6A {
  Bcs6A() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(f86a936352a5b2cc, 2, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct ChassisAcan {
  ChassisAcan() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(93decca1eda9d909, 0, 13)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

class Eps2::Reader {
public:
  typedef Eps2 Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getEpsAssistPraSwitchToLka() const;

  inline  ::uint8_t getEpsHandsOffDetSt() const;

  inline  ::uint8_t getEpsHandsOffDetStVd() const;

  inline  ::uint8_t getEpsLkaCtrlAbortFeedback() const;

  inline float getEpsLkaCtrlDlvdValue() const;

  inline  ::uint8_t getEpsLkaCtrlDlvdValueVd() const;

  inline  ::uint8_t getEpsLkaCtrlSt() const;

  inline  ::uint8_t getEpsPasAbortFeedback() const;

  inline  ::uint8_t getEpsPasEpasFailed() const;

  inline  ::uint8_t getEpsPasReqFeedback() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Eps2::Builder {
public:
  typedef Eps2 Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getEpsAssistPraSwitchToLka();
  inline void setEpsAssistPraSwitchToLka( ::uint8_t value);

  inline  ::uint8_t getEpsHandsOffDetSt();
  inline void setEpsHandsOffDetSt( ::uint8_t value);

  inline  ::uint8_t getEpsHandsOffDetStVd();
  inline void setEpsHandsOffDetStVd( ::uint8_t value);

  inline  ::uint8_t getEpsLkaCtrlAbortFeedback();
  inline void setEpsLkaCtrlAbortFeedback( ::uint8_t value);

  inline float getEpsLkaCtrlDlvdValue();
  inline void setEpsLkaCtrlDlvdValue(float value);

  inline  ::uint8_t getEpsLkaCtrlDlvdValueVd();
  inline void setEpsLkaCtrlDlvdValueVd( ::uint8_t value);

  inline  ::uint8_t getEpsLkaCtrlSt();
  inline void setEpsLkaCtrlSt( ::uint8_t value);

  inline  ::uint8_t getEpsPasAbortFeedback();
  inline void setEpsPasAbortFeedback( ::uint8_t value);

  inline  ::uint8_t getEpsPasEpasFailed();
  inline void setEpsPasEpasFailed( ::uint8_t value);

  inline  ::uint8_t getEpsPasReqFeedback();
  inline void setEpsPasReqFeedback( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Eps2::Pipeline {
public:
  typedef Eps2 Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class Bcs10A::Reader {
public:
  typedef Bcs10A Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getBcsCddapVehHoldActive() const;

  inline  ::uint8_t getBcsLsM12ComfortAvl() const;

  inline  ::uint8_t getBcsLsM12EmergencyAvl() const;

  inline  ::uint8_t getBcsLsM23Avl() const;

  inline  ::uint8_t getBcsLsmPosLongaCapbl() const;

  inline  ::uint8_t getBcsLsmSubMtLevelEcho() const;

  inline  ::uint8_t getBcsLsmSubMtLongEcho() const;

  inline  ::uint8_t getBcsLsmSubMtReqAvailable() const;

  inline  ::uint8_t getBcsLsmSubMtReqEcho() const;

  inline  ::uint8_t getBcsRlWheelRotatedDirection() const;

  inline  ::uint8_t getBcsRlWheelRotatedDirectionApa() const;

  inline  ::uint8_t getBcsRlWheelRotatedDirectionVd() const;

  inline float getBcsRlWheelSpd() const;

  inline  ::uint8_t getBcsRlWheelSpdVd() const;

  inline  ::uint8_t getBcsRrWheelRotatedDirection() const;

  inline  ::uint8_t getBcsRrWheelRotatedDirectionApa() const;

  inline  ::uint8_t getBcsRrWheelRotatedDirectionVd() const;

  inline float getBcsRrWheelSpd() const;

  inline  ::uint8_t getBcsRrWheelSpdVd() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Bcs10A::Builder {
public:
  typedef Bcs10A Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getBcsCddapVehHoldActive();
  inline void setBcsCddapVehHoldActive( ::uint8_t value);

  inline  ::uint8_t getBcsLsM12ComfortAvl();
  inline void setBcsLsM12ComfortAvl( ::uint8_t value);

  inline  ::uint8_t getBcsLsM12EmergencyAvl();
  inline void setBcsLsM12EmergencyAvl( ::uint8_t value);

  inline  ::uint8_t getBcsLsM23Avl();
  inline void setBcsLsM23Avl( ::uint8_t value);

  inline  ::uint8_t getBcsLsmPosLongaCapbl();
  inline void setBcsLsmPosLongaCapbl( ::uint8_t value);

  inline  ::uint8_t getBcsLsmSubMtLevelEcho();
  inline void setBcsLsmSubMtLevelEcho( ::uint8_t value);

  inline  ::uint8_t getBcsLsmSubMtLongEcho();
  inline void setBcsLsmSubMtLongEcho( ::uint8_t value);

  inline  ::uint8_t getBcsLsmSubMtReqAvailable();
  inline void setBcsLsmSubMtReqAvailable( ::uint8_t value);

  inline  ::uint8_t getBcsLsmSubMtReqEcho();
  inline void setBcsLsmSubMtReqEcho( ::uint8_t value);

  inline  ::uint8_t getBcsRlWheelRotatedDirection();
  inline void setBcsRlWheelRotatedDirection( ::uint8_t value);

  inline  ::uint8_t getBcsRlWheelRotatedDirectionApa();
  inline void setBcsRlWheelRotatedDirectionApa( ::uint8_t value);

  inline  ::uint8_t getBcsRlWheelRotatedDirectionVd();
  inline void setBcsRlWheelRotatedDirectionVd( ::uint8_t value);

  inline float getBcsRlWheelSpd();
  inline void setBcsRlWheelSpd(float value);

  inline  ::uint8_t getBcsRlWheelSpdVd();
  inline void setBcsRlWheelSpdVd( ::uint8_t value);

  inline  ::uint8_t getBcsRrWheelRotatedDirection();
  inline void setBcsRrWheelRotatedDirection( ::uint8_t value);

  inline  ::uint8_t getBcsRrWheelRotatedDirectionApa();
  inline void setBcsRrWheelRotatedDirectionApa( ::uint8_t value);

  inline  ::uint8_t getBcsRrWheelRotatedDirectionVd();
  inline void setBcsRrWheelRotatedDirectionVd( ::uint8_t value);

  inline float getBcsRrWheelSpd();
  inline void setBcsRrWheelSpd(float value);

  inline  ::uint8_t getBcsRrWheelSpdVd();
  inline void setBcsRrWheelSpdVd( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Bcs10A::Pipeline {
public:
  typedef Bcs10A Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class Vcu21A::Reader {
public:
  typedef Vcu21A Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline float getVcuEmsAccPedalActPst() const;

  inline  ::uint8_t getVcuEmsAccPedalActPstVd() const;

  inline  ::uint8_t getVcuEmsBrkPedalSt() const;

  inline  ::uint8_t getVcuEmsBrkPedalStVd() const;

  inline  ::uint16_t getVcuEmsEngSpd() const;

  inline  ::uint8_t getVcuEmsEngSpdVd() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Vcu21A::Builder {
public:
  typedef Vcu21A Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline float getVcuEmsAccPedalActPst();
  inline void setVcuEmsAccPedalActPst(float value);

  inline  ::uint8_t getVcuEmsAccPedalActPstVd();
  inline void setVcuEmsAccPedalActPstVd( ::uint8_t value);

  inline  ::uint8_t getVcuEmsBrkPedalSt();
  inline void setVcuEmsBrkPedalSt( ::uint8_t value);

  inline  ::uint8_t getVcuEmsBrkPedalStVd();
  inline void setVcuEmsBrkPedalStVd( ::uint8_t value);

  inline  ::uint16_t getVcuEmsEngSpd();
  inline void setVcuEmsEngSpd( ::uint16_t value);

  inline  ::uint8_t getVcuEmsEngSpdVd();
  inline void setVcuEmsEngSpdVd( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Vcu21A::Pipeline {
public:
  typedef Vcu21A Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class Vcu13A::Reader {
public:
  typedef Vcu13A Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getVcuAcCmaxSpdLimit() const;

  inline  ::uint8_t getVcuAccLimitOperatingSt() const;

  inline float getVcuAccMaxRecpDecel() const;

  inline  ::uint8_t getVcuAccMaxRecpDecelVd() const;

  inline  ::uint16_t getVcuActVehWheelTorq() const;

  inline  ::uint8_t getVcuApaAvailable() const;

  inline  ::uint8_t getVcuApaGearIntervern() const;

  inline  ::uint8_t getVcuApaResp() const;

  inline  ::uint16_t getVcuApaWheelTorqDriverReq() const;

  inline  ::uint8_t getVcuLateralAssistBtnInfo() const;

  inline  ::uint8_t getVcuLateralAssistBtnInfoVd() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Vcu13A::Builder {
public:
  typedef Vcu13A Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getVcuAcCmaxSpdLimit();
  inline void setVcuAcCmaxSpdLimit( ::uint8_t value);

  inline  ::uint8_t getVcuAccLimitOperatingSt();
  inline void setVcuAccLimitOperatingSt( ::uint8_t value);

  inline float getVcuAccMaxRecpDecel();
  inline void setVcuAccMaxRecpDecel(float value);

  inline  ::uint8_t getVcuAccMaxRecpDecelVd();
  inline void setVcuAccMaxRecpDecelVd( ::uint8_t value);

  inline  ::uint16_t getVcuActVehWheelTorq();
  inline void setVcuActVehWheelTorq( ::uint16_t value);

  inline  ::uint8_t getVcuApaAvailable();
  inline void setVcuApaAvailable( ::uint8_t value);

  inline  ::uint8_t getVcuApaGearIntervern();
  inline void setVcuApaGearIntervern( ::uint8_t value);

  inline  ::uint8_t getVcuApaResp();
  inline void setVcuApaResp( ::uint8_t value);

  inline  ::uint16_t getVcuApaWheelTorqDriverReq();
  inline void setVcuApaWheelTorqDriverReq( ::uint16_t value);

  inline  ::uint8_t getVcuLateralAssistBtnInfo();
  inline void setVcuLateralAssistBtnInfo( ::uint8_t value);

  inline  ::uint8_t getVcuLateralAssistBtnInfoVd();
  inline void setVcuLateralAssistBtnInfoVd( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Vcu13A::Pipeline {
public:
  typedef Vcu13A Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class Ebb2A::Reader {
public:
  typedef Ebb2A Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getEbbBrkFxCpb() const;

  inline  ::uint8_t getEbbBrkLightReq() const;

  inline float getEbbBrkPedPst() const;

  inline  ::uint8_t getEbbBrkPedPstVd() const;

  inline  ::uint8_t getEbbBrkPedalApplied() const;

  inline  ::uint8_t getEbbBrkPedalAppliedSt() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Ebb2A::Builder {
public:
  typedef Ebb2A Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getEbbBrkFxCpb();
  inline void setEbbBrkFxCpb( ::uint8_t value);

  inline  ::uint8_t getEbbBrkLightReq();
  inline void setEbbBrkLightReq( ::uint8_t value);

  inline float getEbbBrkPedPst();
  inline void setEbbBrkPedPst(float value);

  inline  ::uint8_t getEbbBrkPedPstVd();
  inline void setEbbBrkPedPstVd( ::uint8_t value);

  inline  ::uint8_t getEbbBrkPedalApplied();
  inline void setEbbBrkPedalApplied( ::uint8_t value);

  inline  ::uint8_t getEbbBrkPedalAppliedSt();
  inline void setEbbBrkPedalAppliedSt( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Ebb2A::Pipeline {
public:
  typedef Ebb2A Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class GwBcm2A::Reader {
public:
  typedef GwBcm2A Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getBcmAtwsSt() const;

  inline  ::uint8_t getBcmAutoHighBeamCtrlSt() const;

  inline  ::uint8_t getBcmBeamSwitchSt() const;

  inline  ::uint8_t getBcmBonnetAjarSt() const;

  inline  ::uint8_t getBcmBrakeLightSwitchSt() const;

  inline  ::uint8_t getBcmDriverDoorAjarSt() const;

  inline  ::uint8_t getBcmDriverDoorLockSt() const;

  inline  ::uint8_t getBcmFrontFogLampSt() const;

  inline  ::uint8_t getBcmFrontWasherSt() const;

  inline  ::uint8_t getBcmFrontWiperSt() const;

  inline  ::uint8_t getBcmHighBeamSt() const;

  inline  ::uint8_t getBcmKeySt() const;

  inline  ::uint8_t getBcmLeftTurnLampFaultSt() const;

  inline  ::uint8_t getBcmLeftTurnLampSt() const;

  inline  ::uint8_t getBcmLowBeamSt() const;

  inline  ::uint8_t getBcmMainLampSwSt() const;

  inline  ::uint8_t getBcmParkingLampSt() const;

  inline  ::uint8_t getBcmPsngrDoorAjarSt() const;

  inline  ::uint8_t getBcmPsngrDoorLockSt() const;

  inline  ::uint8_t getBcmRearFogLampSt() const;

  inline  ::uint8_t getBcmReverseSwitchSt() const;

  inline  ::uint8_t getBcmReverseSwitchStVd() const;

  inline  ::uint8_t getBcmRightTurnLampFaultSt() const;

  inline  ::uint8_t getBcmRightTurnLampSt() const;

  inline  ::uint8_t getBcmRlDoorAjarSt() const;

  inline  ::uint8_t getBcmRrDoorAjarSt() const;

  inline  ::uint8_t getBcmTrunkAjarSt() const;

  inline  ::uint8_t getBcmTurnLightSwitchSt() const;

  inline  ::uint8_t getBcmVehReverseSt() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class GwBcm2A::Builder {
public:
  typedef GwBcm2A Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getBcmAtwsSt();
  inline void setBcmAtwsSt( ::uint8_t value);

  inline  ::uint8_t getBcmAutoHighBeamCtrlSt();
  inline void setBcmAutoHighBeamCtrlSt( ::uint8_t value);

  inline  ::uint8_t getBcmBeamSwitchSt();
  inline void setBcmBeamSwitchSt( ::uint8_t value);

  inline  ::uint8_t getBcmBonnetAjarSt();
  inline void setBcmBonnetAjarSt( ::uint8_t value);

  inline  ::uint8_t getBcmBrakeLightSwitchSt();
  inline void setBcmBrakeLightSwitchSt( ::uint8_t value);

  inline  ::uint8_t getBcmDriverDoorAjarSt();
  inline void setBcmDriverDoorAjarSt( ::uint8_t value);

  inline  ::uint8_t getBcmDriverDoorLockSt();
  inline void setBcmDriverDoorLockSt( ::uint8_t value);

  inline  ::uint8_t getBcmFrontFogLampSt();
  inline void setBcmFrontFogLampSt( ::uint8_t value);

  inline  ::uint8_t getBcmFrontWasherSt();
  inline void setBcmFrontWasherSt( ::uint8_t value);

  inline  ::uint8_t getBcmFrontWiperSt();
  inline void setBcmFrontWiperSt( ::uint8_t value);

  inline  ::uint8_t getBcmHighBeamSt();
  inline void setBcmHighBeamSt( ::uint8_t value);

  inline  ::uint8_t getBcmKeySt();
  inline void setBcmKeySt( ::uint8_t value);

  inline  ::uint8_t getBcmLeftTurnLampFaultSt();
  inline void setBcmLeftTurnLampFaultSt( ::uint8_t value);

  inline  ::uint8_t getBcmLeftTurnLampSt();
  inline void setBcmLeftTurnLampSt( ::uint8_t value);

  inline  ::uint8_t getBcmLowBeamSt();
  inline void setBcmLowBeamSt( ::uint8_t value);

  inline  ::uint8_t getBcmMainLampSwSt();
  inline void setBcmMainLampSwSt( ::uint8_t value);

  inline  ::uint8_t getBcmParkingLampSt();
  inline void setBcmParkingLampSt( ::uint8_t value);

  inline  ::uint8_t getBcmPsngrDoorAjarSt();
  inline void setBcmPsngrDoorAjarSt( ::uint8_t value);

  inline  ::uint8_t getBcmPsngrDoorLockSt();
  inline void setBcmPsngrDoorLockSt( ::uint8_t value);

  inline  ::uint8_t getBcmRearFogLampSt();
  inline void setBcmRearFogLampSt( ::uint8_t value);

  inline  ::uint8_t getBcmReverseSwitchSt();
  inline void setBcmReverseSwitchSt( ::uint8_t value);

  inline  ::uint8_t getBcmReverseSwitchStVd();
  inline void setBcmReverseSwitchStVd( ::uint8_t value);

  inline  ::uint8_t getBcmRightTurnLampFaultSt();
  inline void setBcmRightTurnLampFaultSt( ::uint8_t value);

  inline  ::uint8_t getBcmRightTurnLampSt();
  inline void setBcmRightTurnLampSt( ::uint8_t value);

  inline  ::uint8_t getBcmRlDoorAjarSt();
  inline void setBcmRlDoorAjarSt( ::uint8_t value);

  inline  ::uint8_t getBcmRrDoorAjarSt();
  inline void setBcmRrDoorAjarSt( ::uint8_t value);

  inline  ::uint8_t getBcmTrunkAjarSt();
  inline void setBcmTrunkAjarSt( ::uint8_t value);

  inline  ::uint8_t getBcmTurnLightSwitchSt();
  inline void setBcmTurnLightSwitchSt( ::uint8_t value);

  inline  ::uint8_t getBcmVehReverseSt();
  inline void setBcmVehReverseSt( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class GwBcm2A::Pipeline {
public:
  typedef GwBcm2A Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class Bcs9A::Reader {
public:
  typedef Bcs9A Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getBcsFlWheelRotatedDirection() const;

  inline  ::uint8_t getBcsFlWheelRotatedDirectionApa() const;

  inline  ::uint8_t getBcsFlWheelRotatedDirectionVd() const;

  inline float getBcsFlWheelSpd() const;

  inline  ::uint8_t getBcsFlWheelSpdVd() const;

  inline  ::uint8_t getBcsFrWheelRotatedDirection() const;

  inline  ::uint8_t getBcsFrWheelRotatedDirectionApa() const;

  inline  ::uint8_t getBcsFrWheelRotatedDirectionVd() const;

  inline float getBcsFrWheelSpd() const;

  inline  ::uint8_t getBcsFrWheelSpdVd() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Bcs9A::Builder {
public:
  typedef Bcs9A Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getBcsFlWheelRotatedDirection();
  inline void setBcsFlWheelRotatedDirection( ::uint8_t value);

  inline  ::uint8_t getBcsFlWheelRotatedDirectionApa();
  inline void setBcsFlWheelRotatedDirectionApa( ::uint8_t value);

  inline  ::uint8_t getBcsFlWheelRotatedDirectionVd();
  inline void setBcsFlWheelRotatedDirectionVd( ::uint8_t value);

  inline float getBcsFlWheelSpd();
  inline void setBcsFlWheelSpd(float value);

  inline  ::uint8_t getBcsFlWheelSpdVd();
  inline void setBcsFlWheelSpdVd( ::uint8_t value);

  inline  ::uint8_t getBcsFrWheelRotatedDirection();
  inline void setBcsFrWheelRotatedDirection( ::uint8_t value);

  inline  ::uint8_t getBcsFrWheelRotatedDirectionApa();
  inline void setBcsFrWheelRotatedDirectionApa( ::uint8_t value);

  inline  ::uint8_t getBcsFrWheelRotatedDirectionVd();
  inline void setBcsFrWheelRotatedDirectionVd( ::uint8_t value);

  inline float getBcsFrWheelSpd();
  inline void setBcsFrWheelSpd(float value);

  inline  ::uint8_t getBcsFrWheelSpdVd();
  inline void setBcsFrWheelSpdVd( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Bcs9A::Pipeline {
public:
  typedef Bcs9A Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class Vcu9A::Reader {
public:
  typedef Vcu9A Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline float getVcuBrkPedPst() const;

  inline  ::uint8_t getVcuBrkPedPstVd() const;

  inline  ::uint16_t getVcuBrkVcuuPress() const;

  inline  ::uint8_t getVcuBrkVcuuPressVd() const;

  inline  ::uint8_t getVcuCrntGearLvl() const;

  inline  ::uint8_t getVcuCrntGearLvlVd() const;

  inline  ::uint16_t getVcuRecpTorqFa() const;

  inline  ::uint8_t getVcuRecpTorqFavd() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Vcu9A::Builder {
public:
  typedef Vcu9A Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline float getVcuBrkPedPst();
  inline void setVcuBrkPedPst(float value);

  inline  ::uint8_t getVcuBrkPedPstVd();
  inline void setVcuBrkPedPstVd( ::uint8_t value);

  inline  ::uint16_t getVcuBrkVcuuPress();
  inline void setVcuBrkVcuuPress( ::uint16_t value);

  inline  ::uint8_t getVcuBrkVcuuPressVd();
  inline void setVcuBrkVcuuPressVd( ::uint8_t value);

  inline  ::uint8_t getVcuCrntGearLvl();
  inline void setVcuCrntGearLvl( ::uint8_t value);

  inline  ::uint8_t getVcuCrntGearLvlVd();
  inline void setVcuCrntGearLvlVd( ::uint8_t value);

  inline  ::uint16_t getVcuRecpTorqFa();
  inline void setVcuRecpTorqFa( ::uint16_t value);

  inline  ::uint8_t getVcuRecpTorqFavd();
  inline void setVcuRecpTorqFavd( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Vcu9A::Pipeline {
public:
  typedef Vcu9A Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class Vcu14A::Reader {
public:
  typedef Vcu14A Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getEmsAccButtInfo() const;

  inline float getEmsGasPedalActPstforMrr() const;

  inline  ::uint8_t getEmsGasPedalActPstforMrrvd() const;

  inline  ::uint8_t getVcuAccDriverOrvd() const;

  inline  ::uint8_t getVcuAccElecEcFail() const;

  inline  ::uint8_t getVcuAccTmcFail() const;

  inline  ::uint16_t getVcuVehWheelTorqMax() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Vcu14A::Builder {
public:
  typedef Vcu14A Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getEmsAccButtInfo();
  inline void setEmsAccButtInfo( ::uint8_t value);

  inline float getEmsGasPedalActPstforMrr();
  inline void setEmsGasPedalActPstforMrr(float value);

  inline  ::uint8_t getEmsGasPedalActPstforMrrvd();
  inline void setEmsGasPedalActPstforMrrvd( ::uint8_t value);

  inline  ::uint8_t getVcuAccDriverOrvd();
  inline void setVcuAccDriverOrvd( ::uint8_t value);

  inline  ::uint8_t getVcuAccElecEcFail();
  inline void setVcuAccElecEcFail( ::uint8_t value);

  inline  ::uint8_t getVcuAccTmcFail();
  inline void setVcuAccTmcFail( ::uint8_t value);

  inline  ::uint16_t getVcuVehWheelTorqMax();
  inline void setVcuVehWheelTorqMax( ::uint16_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Vcu14A::Pipeline {
public:
  typedef Vcu14A Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class Bcs11A::Reader {
public:
  typedef Bcs11A Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline float getBcsActVehLaltrlAccel() const;

  inline  ::uint8_t getBcsActVehLaltrlAccelVd() const;

  inline float getBcsActVehLongAccel() const;

  inline  ::uint8_t getBcsActVehLongAccelVd() const;

  inline  ::uint8_t getBcsTcsOff() const;

  inline  ::uint8_t getBcsVdcOff() const;

  inline float getBcsVehLaltrlAccelOffset() const;

  inline float getBcsVehLongAccelOffset() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Bcs11A::Builder {
public:
  typedef Bcs11A Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline float getBcsActVehLaltrlAccel();
  inline void setBcsActVehLaltrlAccel(float value);

  inline  ::uint8_t getBcsActVehLaltrlAccelVd();
  inline void setBcsActVehLaltrlAccelVd( ::uint8_t value);

  inline float getBcsActVehLongAccel();
  inline void setBcsActVehLongAccel(float value);

  inline  ::uint8_t getBcsActVehLongAccelVd();
  inline void setBcsActVehLongAccelVd( ::uint8_t value);

  inline  ::uint8_t getBcsTcsOff();
  inline void setBcsTcsOff( ::uint8_t value);

  inline  ::uint8_t getBcsVdcOff();
  inline void setBcsVdcOff( ::uint8_t value);

  inline float getBcsVehLaltrlAccelOffset();
  inline void setBcsVehLaltrlAccelOffset(float value);

  inline float getBcsVehLongAccelOffset();
  inline void setBcsVehLongAccelOffset(float value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Bcs11A::Pipeline {
public:
  typedef Bcs11A Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class Eps1::Reader {
public:
  typedef Eps1 Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getEpsFunctionStyleSt() const;

  inline float getEpsSteeringAngle() const;

  inline  ::uint16_t getEpsSteeringAngleSpd() const;

  inline  ::uint8_t getEpsSteeringAngleSpdVd() const;

  inline  ::uint8_t getEpsSteeringAngleVd() const;

  inline  ::uint8_t getEpsSteeringModeSt() const;

  inline float getEpsStrngWhlTorq() const;

  inline  ::uint8_t getEpsStrngWhlTorqVd() const;

  inline  ::uint8_t getEpsWarnLamp() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Eps1::Builder {
public:
  typedef Eps1 Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getEpsFunctionStyleSt();
  inline void setEpsFunctionStyleSt( ::uint8_t value);

  inline float getEpsSteeringAngle();
  inline void setEpsSteeringAngle(float value);

  inline  ::uint16_t getEpsSteeringAngleSpd();
  inline void setEpsSteeringAngleSpd( ::uint16_t value);

  inline  ::uint8_t getEpsSteeringAngleSpdVd();
  inline void setEpsSteeringAngleSpdVd( ::uint8_t value);

  inline  ::uint8_t getEpsSteeringAngleVd();
  inline void setEpsSteeringAngleVd( ::uint8_t value);

  inline  ::uint8_t getEpsSteeringModeSt();
  inline void setEpsSteeringModeSt( ::uint8_t value);

  inline float getEpsStrngWhlTorq();
  inline void setEpsStrngWhlTorq(float value);

  inline  ::uint8_t getEpsStrngWhlTorqVd();
  inline void setEpsStrngWhlTorqVd( ::uint8_t value);

  inline  ::uint8_t getEpsWarnLamp();
  inline void setEpsWarnLamp( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Eps1::Pipeline {
public:
  typedef Eps1 Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class Bcs6A::Reader {
public:
  typedef Bcs6A Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline float getBcsYawRate() const;

  inline float getBcsYawRateOffset() const;

  inline  ::uint8_t getBcsYawRateSt() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Bcs6A::Builder {
public:
  typedef Bcs6A Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline float getBcsYawRate();
  inline void setBcsYawRate(float value);

  inline float getBcsYawRateOffset();
  inline void setBcsYawRateOffset(float value);

  inline  ::uint8_t getBcsYawRateSt();
  inline void setBcsYawRateSt( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Bcs6A::Pipeline {
public:
  typedef Bcs6A Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class ChassisAcan::Reader {
public:
  typedef ChassisAcan Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasHeader() const;
  inline  ::senseAD::msg::std_msgs::Header::Reader getHeader() const;

  inline bool hasEps2() const;
  inline  ::senseAD::msg::chassis_acan::Eps2::Reader getEps2() const;

  inline bool hasBcs10A() const;
  inline  ::senseAD::msg::chassis_acan::Bcs10A::Reader getBcs10A() const;

  inline bool hasVcu21A() const;
  inline  ::senseAD::msg::chassis_acan::Vcu21A::Reader getVcu21A() const;

  inline bool hasVcu13A() const;
  inline  ::senseAD::msg::chassis_acan::Vcu13A::Reader getVcu13A() const;

  inline bool hasEbb2A() const;
  inline  ::senseAD::msg::chassis_acan::Ebb2A::Reader getEbb2A() const;

  inline bool hasGwBcm2A() const;
  inline  ::senseAD::msg::chassis_acan::GwBcm2A::Reader getGwBcm2A() const;

  inline bool hasBcs9A() const;
  inline  ::senseAD::msg::chassis_acan::Bcs9A::Reader getBcs9A() const;

  inline bool hasVcu9A() const;
  inline  ::senseAD::msg::chassis_acan::Vcu9A::Reader getVcu9A() const;

  inline bool hasVcu14A() const;
  inline  ::senseAD::msg::chassis_acan::Vcu14A::Reader getVcu14A() const;

  inline bool hasBcs11A() const;
  inline  ::senseAD::msg::chassis_acan::Bcs11A::Reader getBcs11A() const;

  inline bool hasEps1() const;
  inline  ::senseAD::msg::chassis_acan::Eps1::Reader getEps1() const;

  inline bool hasBcs6A() const;
  inline  ::senseAD::msg::chassis_acan::Bcs6A::Reader getBcs6A() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class ChassisAcan::Builder {
public:
  typedef ChassisAcan Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasHeader();
  inline  ::senseAD::msg::std_msgs::Header::Builder getHeader();
  inline void setHeader( ::senseAD::msg::std_msgs::Header::Reader value);
  inline  ::senseAD::msg::std_msgs::Header::Builder initHeader();
  inline void adoptHeader(::capnp::Orphan< ::senseAD::msg::std_msgs::Header>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Header> disownHeader();

  inline bool hasEps2();
  inline  ::senseAD::msg::chassis_acan::Eps2::Builder getEps2();
  inline void setEps2( ::senseAD::msg::chassis_acan::Eps2::Reader value);
  inline  ::senseAD::msg::chassis_acan::Eps2::Builder initEps2();
  inline void adoptEps2(::capnp::Orphan< ::senseAD::msg::chassis_acan::Eps2>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::Eps2> disownEps2();

  inline bool hasBcs10A();
  inline  ::senseAD::msg::chassis_acan::Bcs10A::Builder getBcs10A();
  inline void setBcs10A( ::senseAD::msg::chassis_acan::Bcs10A::Reader value);
  inline  ::senseAD::msg::chassis_acan::Bcs10A::Builder initBcs10A();
  inline void adoptBcs10A(::capnp::Orphan< ::senseAD::msg::chassis_acan::Bcs10A>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::Bcs10A> disownBcs10A();

  inline bool hasVcu21A();
  inline  ::senseAD::msg::chassis_acan::Vcu21A::Builder getVcu21A();
  inline void setVcu21A( ::senseAD::msg::chassis_acan::Vcu21A::Reader value);
  inline  ::senseAD::msg::chassis_acan::Vcu21A::Builder initVcu21A();
  inline void adoptVcu21A(::capnp::Orphan< ::senseAD::msg::chassis_acan::Vcu21A>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::Vcu21A> disownVcu21A();

  inline bool hasVcu13A();
  inline  ::senseAD::msg::chassis_acan::Vcu13A::Builder getVcu13A();
  inline void setVcu13A( ::senseAD::msg::chassis_acan::Vcu13A::Reader value);
  inline  ::senseAD::msg::chassis_acan::Vcu13A::Builder initVcu13A();
  inline void adoptVcu13A(::capnp::Orphan< ::senseAD::msg::chassis_acan::Vcu13A>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::Vcu13A> disownVcu13A();

  inline bool hasEbb2A();
  inline  ::senseAD::msg::chassis_acan::Ebb2A::Builder getEbb2A();
  inline void setEbb2A( ::senseAD::msg::chassis_acan::Ebb2A::Reader value);
  inline  ::senseAD::msg::chassis_acan::Ebb2A::Builder initEbb2A();
  inline void adoptEbb2A(::capnp::Orphan< ::senseAD::msg::chassis_acan::Ebb2A>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::Ebb2A> disownEbb2A();

  inline bool hasGwBcm2A();
  inline  ::senseAD::msg::chassis_acan::GwBcm2A::Builder getGwBcm2A();
  inline void setGwBcm2A( ::senseAD::msg::chassis_acan::GwBcm2A::Reader value);
  inline  ::senseAD::msg::chassis_acan::GwBcm2A::Builder initGwBcm2A();
  inline void adoptGwBcm2A(::capnp::Orphan< ::senseAD::msg::chassis_acan::GwBcm2A>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::GwBcm2A> disownGwBcm2A();

  inline bool hasBcs9A();
  inline  ::senseAD::msg::chassis_acan::Bcs9A::Builder getBcs9A();
  inline void setBcs9A( ::senseAD::msg::chassis_acan::Bcs9A::Reader value);
  inline  ::senseAD::msg::chassis_acan::Bcs9A::Builder initBcs9A();
  inline void adoptBcs9A(::capnp::Orphan< ::senseAD::msg::chassis_acan::Bcs9A>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::Bcs9A> disownBcs9A();

  inline bool hasVcu9A();
  inline  ::senseAD::msg::chassis_acan::Vcu9A::Builder getVcu9A();
  inline void setVcu9A( ::senseAD::msg::chassis_acan::Vcu9A::Reader value);
  inline  ::senseAD::msg::chassis_acan::Vcu9A::Builder initVcu9A();
  inline void adoptVcu9A(::capnp::Orphan< ::senseAD::msg::chassis_acan::Vcu9A>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::Vcu9A> disownVcu9A();

  inline bool hasVcu14A();
  inline  ::senseAD::msg::chassis_acan::Vcu14A::Builder getVcu14A();
  inline void setVcu14A( ::senseAD::msg::chassis_acan::Vcu14A::Reader value);
  inline  ::senseAD::msg::chassis_acan::Vcu14A::Builder initVcu14A();
  inline void adoptVcu14A(::capnp::Orphan< ::senseAD::msg::chassis_acan::Vcu14A>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::Vcu14A> disownVcu14A();

  inline bool hasBcs11A();
  inline  ::senseAD::msg::chassis_acan::Bcs11A::Builder getBcs11A();
  inline void setBcs11A( ::senseAD::msg::chassis_acan::Bcs11A::Reader value);
  inline  ::senseAD::msg::chassis_acan::Bcs11A::Builder initBcs11A();
  inline void adoptBcs11A(::capnp::Orphan< ::senseAD::msg::chassis_acan::Bcs11A>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::Bcs11A> disownBcs11A();

  inline bool hasEps1();
  inline  ::senseAD::msg::chassis_acan::Eps1::Builder getEps1();
  inline void setEps1( ::senseAD::msg::chassis_acan::Eps1::Reader value);
  inline  ::senseAD::msg::chassis_acan::Eps1::Builder initEps1();
  inline void adoptEps1(::capnp::Orphan< ::senseAD::msg::chassis_acan::Eps1>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::Eps1> disownEps1();

  inline bool hasBcs6A();
  inline  ::senseAD::msg::chassis_acan::Bcs6A::Builder getBcs6A();
  inline void setBcs6A( ::senseAD::msg::chassis_acan::Bcs6A::Reader value);
  inline  ::senseAD::msg::chassis_acan::Bcs6A::Builder initBcs6A();
  inline void adoptBcs6A(::capnp::Orphan< ::senseAD::msg::chassis_acan::Bcs6A>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::Bcs6A> disownBcs6A();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class ChassisAcan::Pipeline {
public:
  typedef ChassisAcan Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::std_msgs::Header::Pipeline getHeader();
  inline  ::senseAD::msg::chassis_acan::Eps2::Pipeline getEps2();
  inline  ::senseAD::msg::chassis_acan::Bcs10A::Pipeline getBcs10A();
  inline  ::senseAD::msg::chassis_acan::Vcu21A::Pipeline getVcu21A();
  inline  ::senseAD::msg::chassis_acan::Vcu13A::Pipeline getVcu13A();
  inline  ::senseAD::msg::chassis_acan::Ebb2A::Pipeline getEbb2A();
  inline  ::senseAD::msg::chassis_acan::GwBcm2A::Pipeline getGwBcm2A();
  inline  ::senseAD::msg::chassis_acan::Bcs9A::Pipeline getBcs9A();
  inline  ::senseAD::msg::chassis_acan::Vcu9A::Pipeline getVcu9A();
  inline  ::senseAD::msg::chassis_acan::Vcu14A::Pipeline getVcu14A();
  inline  ::senseAD::msg::chassis_acan::Bcs11A::Pipeline getBcs11A();
  inline  ::senseAD::msg::chassis_acan::Eps1::Pipeline getEps1();
  inline  ::senseAD::msg::chassis_acan::Bcs6A::Pipeline getBcs6A();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

inline  ::uint8_t Eps2::Reader::getEpsAssistPraSwitchToLka() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Eps2::Builder::getEpsAssistPraSwitchToLka() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void Eps2::Builder::setEpsAssistPraSwitchToLka( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Eps2::Reader::getEpsHandsOffDetSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Eps2::Builder::getEpsHandsOffDetSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void Eps2::Builder::setEpsHandsOffDetSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Eps2::Reader::getEpsHandsOffDetStVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Eps2::Builder::getEpsHandsOffDetStVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void Eps2::Builder::setEpsHandsOffDetStVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Eps2::Reader::getEpsLkaCtrlAbortFeedback() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Eps2::Builder::getEpsLkaCtrlAbortFeedback() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void Eps2::Builder::setEpsLkaCtrlAbortFeedback( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline float Eps2::Reader::getEpsLkaCtrlDlvdValue() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline float Eps2::Builder::getEpsLkaCtrlDlvdValue() {
  return _builder.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void Eps2::Builder::setEpsLkaCtrlDlvdValue(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Eps2::Reader::getEpsLkaCtrlDlvdValueVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Eps2::Builder::getEpsLkaCtrlDlvdValueVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void Eps2::Builder::setEpsLkaCtrlDlvdValueVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Eps2::Reader::getEpsLkaCtrlSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Eps2::Builder::getEpsLkaCtrlSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}
inline void Eps2::Builder::setEpsLkaCtrlSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Eps2::Reader::getEpsPasAbortFeedback() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Eps2::Builder::getEpsPasAbortFeedback() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}
inline void Eps2::Builder::setEpsPasAbortFeedback( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Eps2::Reader::getEpsPasEpasFailed() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Eps2::Builder::getEpsPasEpasFailed() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}
inline void Eps2::Builder::setEpsPasEpasFailed( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Eps2::Reader::getEpsPasReqFeedback() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Eps2::Builder::getEpsPasReqFeedback() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}
inline void Eps2::Builder::setEpsPasReqFeedback( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs10A::Reader::getBcsCddapVehHoldActive() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs10A::Builder::getBcsCddapVehHoldActive() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void Bcs10A::Builder::setBcsCddapVehHoldActive( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs10A::Reader::getBcsLsM12ComfortAvl() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs10A::Builder::getBcsLsM12ComfortAvl() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void Bcs10A::Builder::setBcsLsM12ComfortAvl( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs10A::Reader::getBcsLsM12EmergencyAvl() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs10A::Builder::getBcsLsM12EmergencyAvl() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void Bcs10A::Builder::setBcsLsM12EmergencyAvl( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs10A::Reader::getBcsLsM23Avl() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs10A::Builder::getBcsLsM23Avl() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void Bcs10A::Builder::setBcsLsM23Avl( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs10A::Reader::getBcsLsmPosLongaCapbl() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs10A::Builder::getBcsLsmPosLongaCapbl() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void Bcs10A::Builder::setBcsLsmPosLongaCapbl( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs10A::Reader::getBcsLsmSubMtLevelEcho() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs10A::Builder::getBcsLsmSubMtLevelEcho() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void Bcs10A::Builder::setBcsLsmSubMtLevelEcho( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs10A::Reader::getBcsLsmSubMtLongEcho() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs10A::Builder::getBcsLsmSubMtLongEcho() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void Bcs10A::Builder::setBcsLsmSubMtLongEcho( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs10A::Reader::getBcsLsmSubMtReqAvailable() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs10A::Builder::getBcsLsmSubMtReqAvailable() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void Bcs10A::Builder::setBcsLsmSubMtReqAvailable( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs10A::Reader::getBcsLsmSubMtReqEcho() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs10A::Builder::getBcsLsmSubMtReqEcho() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void Bcs10A::Builder::setBcsLsmSubMtReqEcho( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs10A::Reader::getBcsRlWheelRotatedDirection() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs10A::Builder::getBcsRlWheelRotatedDirection() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}
inline void Bcs10A::Builder::setBcsRlWheelRotatedDirection( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs10A::Reader::getBcsRlWheelRotatedDirectionApa() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs10A::Builder::getBcsRlWheelRotatedDirectionApa() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}
inline void Bcs10A::Builder::setBcsRlWheelRotatedDirectionApa( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs10A::Reader::getBcsRlWheelRotatedDirectionVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs10A::Builder::getBcsRlWheelRotatedDirectionVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}
inline void Bcs10A::Builder::setBcsRlWheelRotatedDirectionVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS, value);
}

inline float Bcs10A::Reader::getBcsRlWheelSpd() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline float Bcs10A::Builder::getBcsRlWheelSpd() {
  return _builder.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void Bcs10A::Builder::setBcsRlWheelSpd(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs10A::Reader::getBcsRlWheelSpdVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs10A::Builder::getBcsRlWheelSpdVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS);
}
inline void Bcs10A::Builder::setBcsRlWheelSpdVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs10A::Reader::getBcsRrWheelRotatedDirection() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs10A::Builder::getBcsRrWheelRotatedDirection() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}
inline void Bcs10A::Builder::setBcsRrWheelRotatedDirection( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs10A::Reader::getBcsRrWheelRotatedDirectionApa() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs10A::Builder::getBcsRrWheelRotatedDirectionApa() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS);
}
inline void Bcs10A::Builder::setBcsRrWheelRotatedDirectionApa( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs10A::Reader::getBcsRrWheelRotatedDirectionVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs10A::Builder::getBcsRrWheelRotatedDirectionVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS);
}
inline void Bcs10A::Builder::setBcsRrWheelRotatedDirectionVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS, value);
}

inline float Bcs10A::Reader::getBcsRrWheelSpd() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline float Bcs10A::Builder::getBcsRrWheelSpd() {
  return _builder.getDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void Bcs10A::Builder::setBcsRrWheelSpd(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs10A::Reader::getBcsRrWheelSpdVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs10A::Builder::getBcsRrWheelSpdVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS);
}
inline void Bcs10A::Builder::setBcsRrWheelSpdVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS, value);
}

inline float Vcu21A::Reader::getVcuEmsAccPedalActPst() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline float Vcu21A::Builder::getVcuEmsAccPedalActPst() {
  return _builder.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void Vcu21A::Builder::setVcuEmsAccPedalActPst(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Vcu21A::Reader::getVcuEmsAccPedalActPstVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Vcu21A::Builder::getVcuEmsAccPedalActPstVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void Vcu21A::Builder::setVcuEmsAccPedalActPstVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Vcu21A::Reader::getVcuEmsBrkPedalSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Vcu21A::Builder::getVcuEmsBrkPedalSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void Vcu21A::Builder::setVcuEmsBrkPedalSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Vcu21A::Reader::getVcuEmsBrkPedalStVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Vcu21A::Builder::getVcuEmsBrkPedalStVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void Vcu21A::Builder::setVcuEmsBrkPedalStVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t Vcu21A::Reader::getVcuEmsEngSpd() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t Vcu21A::Builder::getVcuEmsEngSpd() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void Vcu21A::Builder::setVcuEmsEngSpd( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Vcu21A::Reader::getVcuEmsEngSpdVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Vcu21A::Builder::getVcuEmsEngSpdVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void Vcu21A::Builder::setVcuEmsEngSpdVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Vcu13A::Reader::getVcuAcCmaxSpdLimit() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Vcu13A::Builder::getVcuAcCmaxSpdLimit() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void Vcu13A::Builder::setVcuAcCmaxSpdLimit( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Vcu13A::Reader::getVcuAccLimitOperatingSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Vcu13A::Builder::getVcuAccLimitOperatingSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void Vcu13A::Builder::setVcuAccLimitOperatingSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline float Vcu13A::Reader::getVcuAccMaxRecpDecel() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline float Vcu13A::Builder::getVcuAccMaxRecpDecel() {
  return _builder.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void Vcu13A::Builder::setVcuAccMaxRecpDecel(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Vcu13A::Reader::getVcuAccMaxRecpDecelVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Vcu13A::Builder::getVcuAccMaxRecpDecelVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void Vcu13A::Builder::setVcuAccMaxRecpDecelVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t Vcu13A::Reader::getVcuActVehWheelTorq() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t Vcu13A::Builder::getVcuActVehWheelTorq() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void Vcu13A::Builder::setVcuActVehWheelTorq( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Vcu13A::Reader::getVcuApaAvailable() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Vcu13A::Builder::getVcuApaAvailable() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void Vcu13A::Builder::setVcuApaAvailable( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Vcu13A::Reader::getVcuApaGearIntervern() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Vcu13A::Builder::getVcuApaGearIntervern() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}
inline void Vcu13A::Builder::setVcuApaGearIntervern( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Vcu13A::Reader::getVcuApaResp() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Vcu13A::Builder::getVcuApaResp() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}
inline void Vcu13A::Builder::setVcuApaResp( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t Vcu13A::Reader::getVcuApaWheelTorqDriverReq() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t Vcu13A::Builder::getVcuApaWheelTorqDriverReq() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void Vcu13A::Builder::setVcuApaWheelTorqDriverReq( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Vcu13A::Reader::getVcuLateralAssistBtnInfo() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Vcu13A::Builder::getVcuLateralAssistBtnInfo() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}
inline void Vcu13A::Builder::setVcuLateralAssistBtnInfo( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Vcu13A::Reader::getVcuLateralAssistBtnInfoVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Vcu13A::Builder::getVcuLateralAssistBtnInfoVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}
inline void Vcu13A::Builder::setVcuLateralAssistBtnInfoVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Ebb2A::Reader::getEbbBrkFxCpb() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Ebb2A::Builder::getEbbBrkFxCpb() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void Ebb2A::Builder::setEbbBrkFxCpb( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Ebb2A::Reader::getEbbBrkLightReq() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Ebb2A::Builder::getEbbBrkLightReq() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void Ebb2A::Builder::setEbbBrkLightReq( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline float Ebb2A::Reader::getEbbBrkPedPst() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline float Ebb2A::Builder::getEbbBrkPedPst() {
  return _builder.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void Ebb2A::Builder::setEbbBrkPedPst(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Ebb2A::Reader::getEbbBrkPedPstVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Ebb2A::Builder::getEbbBrkPedPstVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void Ebb2A::Builder::setEbbBrkPedPstVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Ebb2A::Reader::getEbbBrkPedalApplied() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Ebb2A::Builder::getEbbBrkPedalApplied() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void Ebb2A::Builder::setEbbBrkPedalApplied( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Ebb2A::Reader::getEbbBrkPedalAppliedSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Ebb2A::Builder::getEbbBrkPedalAppliedSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void Ebb2A::Builder::setEbbBrkPedalAppliedSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmAtwsSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmAtwsSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmAtwsSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmAutoHighBeamCtrlSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmAutoHighBeamCtrlSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmAutoHighBeamCtrlSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmBeamSwitchSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmBeamSwitchSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmBeamSwitchSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmBonnetAjarSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmBonnetAjarSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmBonnetAjarSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmBrakeLightSwitchSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmBrakeLightSwitchSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmBrakeLightSwitchSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmDriverDoorAjarSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmDriverDoorAjarSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmDriverDoorAjarSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmDriverDoorLockSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmDriverDoorLockSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmDriverDoorLockSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmFrontFogLampSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmFrontFogLampSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmFrontFogLampSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmFrontWasherSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmFrontWasherSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmFrontWasherSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmFrontWiperSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmFrontWiperSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmFrontWiperSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmHighBeamSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmHighBeamSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmHighBeamSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmKeySt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmKeySt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmKeySt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmLeftTurnLampFaultSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmLeftTurnLampFaultSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmLeftTurnLampFaultSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmLeftTurnLampSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmLeftTurnLampSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmLeftTurnLampSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmLowBeamSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmLowBeamSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmLowBeamSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmMainLampSwSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmMainLampSwSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmMainLampSwSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmParkingLampSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmParkingLampSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmParkingLampSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmPsngrDoorAjarSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmPsngrDoorAjarSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmPsngrDoorAjarSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmPsngrDoorLockSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmPsngrDoorLockSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmPsngrDoorLockSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmRearFogLampSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmRearFogLampSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmRearFogLampSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmReverseSwitchSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<20>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmReverseSwitchSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<20>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmReverseSwitchSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<20>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmReverseSwitchStVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<21>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmReverseSwitchStVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<21>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmReverseSwitchStVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<21>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmRightTurnLampFaultSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<22>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmRightTurnLampFaultSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<22>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmRightTurnLampFaultSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<22>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmRightTurnLampSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<23>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmRightTurnLampSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<23>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmRightTurnLampSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<23>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmRlDoorAjarSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmRlDoorAjarSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmRlDoorAjarSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmRrDoorAjarSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<25>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmRrDoorAjarSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<25>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmRrDoorAjarSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<25>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmTrunkAjarSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<26>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmTrunkAjarSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<26>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmTrunkAjarSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<26>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmTurnLightSwitchSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<27>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmTurnLightSwitchSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<27>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmTurnLightSwitchSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<27>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GwBcm2A::Reader::getBcmVehReverseSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<28>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GwBcm2A::Builder::getBcmVehReverseSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<28>() * ::capnp::ELEMENTS);
}
inline void GwBcm2A::Builder::setBcmVehReverseSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<28>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs9A::Reader::getBcsFlWheelRotatedDirection() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs9A::Builder::getBcsFlWheelRotatedDirection() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void Bcs9A::Builder::setBcsFlWheelRotatedDirection( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs9A::Reader::getBcsFlWheelRotatedDirectionApa() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs9A::Builder::getBcsFlWheelRotatedDirectionApa() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void Bcs9A::Builder::setBcsFlWheelRotatedDirectionApa( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs9A::Reader::getBcsFlWheelRotatedDirectionVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs9A::Builder::getBcsFlWheelRotatedDirectionVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void Bcs9A::Builder::setBcsFlWheelRotatedDirectionVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline float Bcs9A::Reader::getBcsFlWheelSpd() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline float Bcs9A::Builder::getBcsFlWheelSpd() {
  return _builder.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void Bcs9A::Builder::setBcsFlWheelSpd(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs9A::Reader::getBcsFlWheelSpdVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs9A::Builder::getBcsFlWheelSpdVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void Bcs9A::Builder::setBcsFlWheelSpdVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs9A::Reader::getBcsFrWheelRotatedDirection() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs9A::Builder::getBcsFrWheelRotatedDirection() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void Bcs9A::Builder::setBcsFrWheelRotatedDirection( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs9A::Reader::getBcsFrWheelRotatedDirectionApa() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs9A::Builder::getBcsFrWheelRotatedDirectionApa() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}
inline void Bcs9A::Builder::setBcsFrWheelRotatedDirectionApa( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs9A::Reader::getBcsFrWheelRotatedDirectionVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs9A::Builder::getBcsFrWheelRotatedDirectionVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}
inline void Bcs9A::Builder::setBcsFrWheelRotatedDirectionVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS, value);
}

inline float Bcs9A::Reader::getBcsFrWheelSpd() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline float Bcs9A::Builder::getBcsFrWheelSpd() {
  return _builder.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void Bcs9A::Builder::setBcsFrWheelSpd(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs9A::Reader::getBcsFrWheelSpdVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs9A::Builder::getBcsFrWheelSpdVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}
inline void Bcs9A::Builder::setBcsFrWheelSpdVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS, value);
}

inline float Vcu9A::Reader::getVcuBrkPedPst() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline float Vcu9A::Builder::getVcuBrkPedPst() {
  return _builder.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void Vcu9A::Builder::setVcuBrkPedPst(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Vcu9A::Reader::getVcuBrkPedPstVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Vcu9A::Builder::getVcuBrkPedPstVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void Vcu9A::Builder::setVcuBrkPedPstVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t Vcu9A::Reader::getVcuBrkVcuuPress() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t Vcu9A::Builder::getVcuBrkVcuuPress() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void Vcu9A::Builder::setVcuBrkVcuuPress( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Vcu9A::Reader::getVcuBrkVcuuPressVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Vcu9A::Builder::getVcuBrkVcuuPressVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void Vcu9A::Builder::setVcuBrkVcuuPressVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Vcu9A::Reader::getVcuCrntGearLvl() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Vcu9A::Builder::getVcuCrntGearLvl() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void Vcu9A::Builder::setVcuCrntGearLvl( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Vcu9A::Reader::getVcuCrntGearLvlVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Vcu9A::Builder::getVcuCrntGearLvlVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}
inline void Vcu9A::Builder::setVcuCrntGearLvlVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t Vcu9A::Reader::getVcuRecpTorqFa() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t Vcu9A::Builder::getVcuRecpTorqFa() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void Vcu9A::Builder::setVcuRecpTorqFa( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Vcu9A::Reader::getVcuRecpTorqFavd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Vcu9A::Builder::getVcuRecpTorqFavd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}
inline void Vcu9A::Builder::setVcuRecpTorqFavd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Vcu14A::Reader::getEmsAccButtInfo() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Vcu14A::Builder::getEmsAccButtInfo() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void Vcu14A::Builder::setEmsAccButtInfo( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline float Vcu14A::Reader::getEmsGasPedalActPstforMrr() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline float Vcu14A::Builder::getEmsGasPedalActPstforMrr() {
  return _builder.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void Vcu14A::Builder::setEmsGasPedalActPstforMrr(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Vcu14A::Reader::getEmsGasPedalActPstforMrrvd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Vcu14A::Builder::getEmsGasPedalActPstforMrrvd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void Vcu14A::Builder::setEmsGasPedalActPstforMrrvd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Vcu14A::Reader::getVcuAccDriverOrvd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Vcu14A::Builder::getVcuAccDriverOrvd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void Vcu14A::Builder::setVcuAccDriverOrvd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Vcu14A::Reader::getVcuAccElecEcFail() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Vcu14A::Builder::getVcuAccElecEcFail() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void Vcu14A::Builder::setVcuAccElecEcFail( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Vcu14A::Reader::getVcuAccTmcFail() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Vcu14A::Builder::getVcuAccTmcFail() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void Vcu14A::Builder::setVcuAccTmcFail( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t Vcu14A::Reader::getVcuVehWheelTorqMax() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t Vcu14A::Builder::getVcuVehWheelTorqMax() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void Vcu14A::Builder::setVcuVehWheelTorqMax( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline float Bcs11A::Reader::getBcsActVehLaltrlAccel() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline float Bcs11A::Builder::getBcsActVehLaltrlAccel() {
  return _builder.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void Bcs11A::Builder::setBcsActVehLaltrlAccel(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs11A::Reader::getBcsActVehLaltrlAccelVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs11A::Builder::getBcsActVehLaltrlAccelVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void Bcs11A::Builder::setBcsActVehLaltrlAccelVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline float Bcs11A::Reader::getBcsActVehLongAccel() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline float Bcs11A::Builder::getBcsActVehLongAccel() {
  return _builder.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void Bcs11A::Builder::setBcsActVehLongAccel(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs11A::Reader::getBcsActVehLongAccelVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs11A::Builder::getBcsActVehLongAccelVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void Bcs11A::Builder::setBcsActVehLongAccelVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs11A::Reader::getBcsTcsOff() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs11A::Builder::getBcsTcsOff() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void Bcs11A::Builder::setBcsTcsOff( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs11A::Reader::getBcsVdcOff() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs11A::Builder::getBcsVdcOff() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void Bcs11A::Builder::setBcsVdcOff( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline float Bcs11A::Reader::getBcsVehLaltrlAccelOffset() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline float Bcs11A::Builder::getBcsVehLaltrlAccelOffset() {
  return _builder.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void Bcs11A::Builder::setBcsVehLaltrlAccelOffset(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline float Bcs11A::Reader::getBcsVehLongAccelOffset() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline float Bcs11A::Builder::getBcsVehLongAccelOffset() {
  return _builder.getDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void Bcs11A::Builder::setBcsVehLongAccelOffset(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Eps1::Reader::getEpsFunctionStyleSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Eps1::Builder::getEpsFunctionStyleSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void Eps1::Builder::setEpsFunctionStyleSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline float Eps1::Reader::getEpsSteeringAngle() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline float Eps1::Builder::getEpsSteeringAngle() {
  return _builder.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void Eps1::Builder::setEpsSteeringAngle(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t Eps1::Reader::getEpsSteeringAngleSpd() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t Eps1::Builder::getEpsSteeringAngleSpd() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void Eps1::Builder::setEpsSteeringAngleSpd( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Eps1::Reader::getEpsSteeringAngleSpdVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Eps1::Builder::getEpsSteeringAngleSpdVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void Eps1::Builder::setEpsSteeringAngleSpdVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Eps1::Reader::getEpsSteeringAngleVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Eps1::Builder::getEpsSteeringAngleVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void Eps1::Builder::setEpsSteeringAngleVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Eps1::Reader::getEpsSteeringModeSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Eps1::Builder::getEpsSteeringModeSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}
inline void Eps1::Builder::setEpsSteeringModeSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS, value);
}

inline float Eps1::Reader::getEpsStrngWhlTorq() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline float Eps1::Builder::getEpsStrngWhlTorq() {
  return _builder.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void Eps1::Builder::setEpsStrngWhlTorq(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Eps1::Reader::getEpsStrngWhlTorqVd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Eps1::Builder::getEpsStrngWhlTorqVd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}
inline void Eps1::Builder::setEpsStrngWhlTorqVd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Eps1::Reader::getEpsWarnLamp() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Eps1::Builder::getEpsWarnLamp() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}
inline void Eps1::Builder::setEpsWarnLamp( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS, value);
}

inline float Bcs6A::Reader::getBcsYawRate() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline float Bcs6A::Builder::getBcsYawRate() {
  return _builder.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void Bcs6A::Builder::setBcsYawRate(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline float Bcs6A::Reader::getBcsYawRateOffset() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline float Bcs6A::Builder::getBcsYawRateOffset() {
  return _builder.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void Bcs6A::Builder::setBcsYawRateOffset(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Bcs6A::Reader::getBcsYawRateSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Bcs6A::Builder::getBcsYawRateSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void Bcs6A::Builder::setBcsYawRateSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline bool ChassisAcan::Reader::hasHeader() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool ChassisAcan::Builder::hasHeader() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::std_msgs::Header::Reader ChassisAcan::Reader::getHeader() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::std_msgs::Header::Builder ChassisAcan::Builder::getHeader() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::std_msgs::Header::Pipeline ChassisAcan::Pipeline::getHeader() {
  return  ::senseAD::msg::std_msgs::Header::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void ChassisAcan::Builder::setHeader( ::senseAD::msg::std_msgs::Header::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::std_msgs::Header::Builder ChassisAcan::Builder::initHeader() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void ChassisAcan::Builder::adoptHeader(
    ::capnp::Orphan< ::senseAD::msg::std_msgs::Header>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Header> ChassisAcan::Builder::disownHeader() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool ChassisAcan::Reader::hasEps2() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool ChassisAcan::Builder::hasEps2() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::chassis_acan::Eps2::Reader ChassisAcan::Reader::getEps2() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Eps2>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::chassis_acan::Eps2::Builder ChassisAcan::Builder::getEps2() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Eps2>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::chassis_acan::Eps2::Pipeline ChassisAcan::Pipeline::getEps2() {
  return  ::senseAD::msg::chassis_acan::Eps2::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void ChassisAcan::Builder::setEps2( ::senseAD::msg::chassis_acan::Eps2::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Eps2>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::chassis_acan::Eps2::Builder ChassisAcan::Builder::initEps2() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Eps2>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void ChassisAcan::Builder::adoptEps2(
    ::capnp::Orphan< ::senseAD::msg::chassis_acan::Eps2>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Eps2>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::Eps2> ChassisAcan::Builder::disownEps2() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Eps2>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool ChassisAcan::Reader::hasBcs10A() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool ChassisAcan::Builder::hasBcs10A() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::chassis_acan::Bcs10A::Reader ChassisAcan::Reader::getBcs10A() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs10A>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::chassis_acan::Bcs10A::Builder ChassisAcan::Builder::getBcs10A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs10A>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::chassis_acan::Bcs10A::Pipeline ChassisAcan::Pipeline::getBcs10A() {
  return  ::senseAD::msg::chassis_acan::Bcs10A::Pipeline(_typeless.getPointerField(2));
}
#endif  // !CAPNP_LITE
inline void ChassisAcan::Builder::setBcs10A( ::senseAD::msg::chassis_acan::Bcs10A::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs10A>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::chassis_acan::Bcs10A::Builder ChassisAcan::Builder::initBcs10A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs10A>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void ChassisAcan::Builder::adoptBcs10A(
    ::capnp::Orphan< ::senseAD::msg::chassis_acan::Bcs10A>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs10A>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::Bcs10A> ChassisAcan::Builder::disownBcs10A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs10A>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool ChassisAcan::Reader::hasVcu21A() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool ChassisAcan::Builder::hasVcu21A() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::chassis_acan::Vcu21A::Reader ChassisAcan::Reader::getVcu21A() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu21A>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::chassis_acan::Vcu21A::Builder ChassisAcan::Builder::getVcu21A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu21A>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::chassis_acan::Vcu21A::Pipeline ChassisAcan::Pipeline::getVcu21A() {
  return  ::senseAD::msg::chassis_acan::Vcu21A::Pipeline(_typeless.getPointerField(3));
}
#endif  // !CAPNP_LITE
inline void ChassisAcan::Builder::setVcu21A( ::senseAD::msg::chassis_acan::Vcu21A::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu21A>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::chassis_acan::Vcu21A::Builder ChassisAcan::Builder::initVcu21A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu21A>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void ChassisAcan::Builder::adoptVcu21A(
    ::capnp::Orphan< ::senseAD::msg::chassis_acan::Vcu21A>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu21A>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::Vcu21A> ChassisAcan::Builder::disownVcu21A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu21A>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline bool ChassisAcan::Reader::hasVcu13A() const {
  return !_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline bool ChassisAcan::Builder::hasVcu13A() {
  return !_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::chassis_acan::Vcu13A::Reader ChassisAcan::Reader::getVcu13A() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu13A>::get(_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::chassis_acan::Vcu13A::Builder ChassisAcan::Builder::getVcu13A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu13A>::get(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::chassis_acan::Vcu13A::Pipeline ChassisAcan::Pipeline::getVcu13A() {
  return  ::senseAD::msg::chassis_acan::Vcu13A::Pipeline(_typeless.getPointerField(4));
}
#endif  // !CAPNP_LITE
inline void ChassisAcan::Builder::setVcu13A( ::senseAD::msg::chassis_acan::Vcu13A::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu13A>::set(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::chassis_acan::Vcu13A::Builder ChassisAcan::Builder::initVcu13A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu13A>::init(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline void ChassisAcan::Builder::adoptVcu13A(
    ::capnp::Orphan< ::senseAD::msg::chassis_acan::Vcu13A>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu13A>::adopt(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::Vcu13A> ChassisAcan::Builder::disownVcu13A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu13A>::disown(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}

inline bool ChassisAcan::Reader::hasEbb2A() const {
  return !_reader.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS).isNull();
}
inline bool ChassisAcan::Builder::hasEbb2A() {
  return !_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::chassis_acan::Ebb2A::Reader ChassisAcan::Reader::getEbb2A() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Ebb2A>::get(_reader.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::chassis_acan::Ebb2A::Builder ChassisAcan::Builder::getEbb2A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Ebb2A>::get(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::chassis_acan::Ebb2A::Pipeline ChassisAcan::Pipeline::getEbb2A() {
  return  ::senseAD::msg::chassis_acan::Ebb2A::Pipeline(_typeless.getPointerField(5));
}
#endif  // !CAPNP_LITE
inline void ChassisAcan::Builder::setEbb2A( ::senseAD::msg::chassis_acan::Ebb2A::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Ebb2A>::set(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::chassis_acan::Ebb2A::Builder ChassisAcan::Builder::initEbb2A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Ebb2A>::init(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
inline void ChassisAcan::Builder::adoptEbb2A(
    ::capnp::Orphan< ::senseAD::msg::chassis_acan::Ebb2A>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Ebb2A>::adopt(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::Ebb2A> ChassisAcan::Builder::disownEbb2A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Ebb2A>::disown(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}

inline bool ChassisAcan::Reader::hasGwBcm2A() const {
  return !_reader.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS).isNull();
}
inline bool ChassisAcan::Builder::hasGwBcm2A() {
  return !_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::chassis_acan::GwBcm2A::Reader ChassisAcan::Reader::getGwBcm2A() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::GwBcm2A>::get(_reader.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::chassis_acan::GwBcm2A::Builder ChassisAcan::Builder::getGwBcm2A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::GwBcm2A>::get(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::chassis_acan::GwBcm2A::Pipeline ChassisAcan::Pipeline::getGwBcm2A() {
  return  ::senseAD::msg::chassis_acan::GwBcm2A::Pipeline(_typeless.getPointerField(6));
}
#endif  // !CAPNP_LITE
inline void ChassisAcan::Builder::setGwBcm2A( ::senseAD::msg::chassis_acan::GwBcm2A::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::GwBcm2A>::set(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::chassis_acan::GwBcm2A::Builder ChassisAcan::Builder::initGwBcm2A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::GwBcm2A>::init(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}
inline void ChassisAcan::Builder::adoptGwBcm2A(
    ::capnp::Orphan< ::senseAD::msg::chassis_acan::GwBcm2A>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::GwBcm2A>::adopt(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::GwBcm2A> ChassisAcan::Builder::disownGwBcm2A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::GwBcm2A>::disown(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}

inline bool ChassisAcan::Reader::hasBcs9A() const {
  return !_reader.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS).isNull();
}
inline bool ChassisAcan::Builder::hasBcs9A() {
  return !_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::chassis_acan::Bcs9A::Reader ChassisAcan::Reader::getBcs9A() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs9A>::get(_reader.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::chassis_acan::Bcs9A::Builder ChassisAcan::Builder::getBcs9A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs9A>::get(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::chassis_acan::Bcs9A::Pipeline ChassisAcan::Pipeline::getBcs9A() {
  return  ::senseAD::msg::chassis_acan::Bcs9A::Pipeline(_typeless.getPointerField(7));
}
#endif  // !CAPNP_LITE
inline void ChassisAcan::Builder::setBcs9A( ::senseAD::msg::chassis_acan::Bcs9A::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs9A>::set(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::chassis_acan::Bcs9A::Builder ChassisAcan::Builder::initBcs9A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs9A>::init(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}
inline void ChassisAcan::Builder::adoptBcs9A(
    ::capnp::Orphan< ::senseAD::msg::chassis_acan::Bcs9A>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs9A>::adopt(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::Bcs9A> ChassisAcan::Builder::disownBcs9A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs9A>::disown(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}

inline bool ChassisAcan::Reader::hasVcu9A() const {
  return !_reader.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS).isNull();
}
inline bool ChassisAcan::Builder::hasVcu9A() {
  return !_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::chassis_acan::Vcu9A::Reader ChassisAcan::Reader::getVcu9A() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu9A>::get(_reader.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::chassis_acan::Vcu9A::Builder ChassisAcan::Builder::getVcu9A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu9A>::get(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::chassis_acan::Vcu9A::Pipeline ChassisAcan::Pipeline::getVcu9A() {
  return  ::senseAD::msg::chassis_acan::Vcu9A::Pipeline(_typeless.getPointerField(8));
}
#endif  // !CAPNP_LITE
inline void ChassisAcan::Builder::setVcu9A( ::senseAD::msg::chassis_acan::Vcu9A::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu9A>::set(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::chassis_acan::Vcu9A::Builder ChassisAcan::Builder::initVcu9A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu9A>::init(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}
inline void ChassisAcan::Builder::adoptVcu9A(
    ::capnp::Orphan< ::senseAD::msg::chassis_acan::Vcu9A>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu9A>::adopt(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::Vcu9A> ChassisAcan::Builder::disownVcu9A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu9A>::disown(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}

inline bool ChassisAcan::Reader::hasVcu14A() const {
  return !_reader.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS).isNull();
}
inline bool ChassisAcan::Builder::hasVcu14A() {
  return !_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::chassis_acan::Vcu14A::Reader ChassisAcan::Reader::getVcu14A() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu14A>::get(_reader.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::chassis_acan::Vcu14A::Builder ChassisAcan::Builder::getVcu14A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu14A>::get(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::chassis_acan::Vcu14A::Pipeline ChassisAcan::Pipeline::getVcu14A() {
  return  ::senseAD::msg::chassis_acan::Vcu14A::Pipeline(_typeless.getPointerField(9));
}
#endif  // !CAPNP_LITE
inline void ChassisAcan::Builder::setVcu14A( ::senseAD::msg::chassis_acan::Vcu14A::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu14A>::set(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::chassis_acan::Vcu14A::Builder ChassisAcan::Builder::initVcu14A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu14A>::init(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}
inline void ChassisAcan::Builder::adoptVcu14A(
    ::capnp::Orphan< ::senseAD::msg::chassis_acan::Vcu14A>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu14A>::adopt(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::Vcu14A> ChassisAcan::Builder::disownVcu14A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Vcu14A>::disown(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}

inline bool ChassisAcan::Reader::hasBcs11A() const {
  return !_reader.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS).isNull();
}
inline bool ChassisAcan::Builder::hasBcs11A() {
  return !_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::chassis_acan::Bcs11A::Reader ChassisAcan::Reader::getBcs11A() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs11A>::get(_reader.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::chassis_acan::Bcs11A::Builder ChassisAcan::Builder::getBcs11A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs11A>::get(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::chassis_acan::Bcs11A::Pipeline ChassisAcan::Pipeline::getBcs11A() {
  return  ::senseAD::msg::chassis_acan::Bcs11A::Pipeline(_typeless.getPointerField(10));
}
#endif  // !CAPNP_LITE
inline void ChassisAcan::Builder::setBcs11A( ::senseAD::msg::chassis_acan::Bcs11A::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs11A>::set(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::chassis_acan::Bcs11A::Builder ChassisAcan::Builder::initBcs11A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs11A>::init(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}
inline void ChassisAcan::Builder::adoptBcs11A(
    ::capnp::Orphan< ::senseAD::msg::chassis_acan::Bcs11A>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs11A>::adopt(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::Bcs11A> ChassisAcan::Builder::disownBcs11A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs11A>::disown(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}

inline bool ChassisAcan::Reader::hasEps1() const {
  return !_reader.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS).isNull();
}
inline bool ChassisAcan::Builder::hasEps1() {
  return !_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::chassis_acan::Eps1::Reader ChassisAcan::Reader::getEps1() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Eps1>::get(_reader.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::chassis_acan::Eps1::Builder ChassisAcan::Builder::getEps1() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Eps1>::get(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::chassis_acan::Eps1::Pipeline ChassisAcan::Pipeline::getEps1() {
  return  ::senseAD::msg::chassis_acan::Eps1::Pipeline(_typeless.getPointerField(11));
}
#endif  // !CAPNP_LITE
inline void ChassisAcan::Builder::setEps1( ::senseAD::msg::chassis_acan::Eps1::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Eps1>::set(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::chassis_acan::Eps1::Builder ChassisAcan::Builder::initEps1() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Eps1>::init(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS));
}
inline void ChassisAcan::Builder::adoptEps1(
    ::capnp::Orphan< ::senseAD::msg::chassis_acan::Eps1>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Eps1>::adopt(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::Eps1> ChassisAcan::Builder::disownEps1() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Eps1>::disown(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS));
}

inline bool ChassisAcan::Reader::hasBcs6A() const {
  return !_reader.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS).isNull();
}
inline bool ChassisAcan::Builder::hasBcs6A() {
  return !_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::chassis_acan::Bcs6A::Reader ChassisAcan::Reader::getBcs6A() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs6A>::get(_reader.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::chassis_acan::Bcs6A::Builder ChassisAcan::Builder::getBcs6A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs6A>::get(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::chassis_acan::Bcs6A::Pipeline ChassisAcan::Pipeline::getBcs6A() {
  return  ::senseAD::msg::chassis_acan::Bcs6A::Pipeline(_typeless.getPointerField(12));
}
#endif  // !CAPNP_LITE
inline void ChassisAcan::Builder::setBcs6A( ::senseAD::msg::chassis_acan::Bcs6A::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs6A>::set(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::chassis_acan::Bcs6A::Builder ChassisAcan::Builder::initBcs6A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs6A>::init(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS));
}
inline void ChassisAcan::Builder::adoptBcs6A(
    ::capnp::Orphan< ::senseAD::msg::chassis_acan::Bcs6A>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs6A>::adopt(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::chassis_acan::Bcs6A> ChassisAcan::Builder::disownBcs6A() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::chassis_acan::Bcs6A>::disown(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS));
}

}  // namespace
}  // namespace
}  // namespace

CAPNP_END_HEADER

