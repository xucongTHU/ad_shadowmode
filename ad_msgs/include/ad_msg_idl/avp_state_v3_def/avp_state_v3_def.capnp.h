// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: avp_state_v3_def.capnp

#pragma once

#include <capnp/generated-header-support.h>
#include <kj/windows-sanity.h>

#if CAPNP_VERSION != 10002
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif


CAPNP_BEGIN_HEADER

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(b13d37abaf0f9dc1);
enum class AvpMainStatus_b13d37abaf0f9dc1: uint16_t {
  NONE,
  ERROR,
  STARTUP,
  BACKGROUND,
  APA_SEARCHING,
  APA_PARKING,
  APA_SUSPEND,
  APA_ABORT,
  APA_PARKING_DONE,
  HPP_SEARCHING,
  HPP_MAPPING,
  HPP_MAPPING_DONE,
  HPP_CRUISE,
  HPP_ABORT,
  RA_CRUISE,
  RA_SUSPEND,
  RA_DONE,
  RA_ABORT,
};
CAPNP_DECLARE_ENUM(AvpMainStatus, b13d37abaf0f9dc1);
CAPNP_DECLARE_SCHEMA(d0c2eede64a8cd52);
enum class AvpRunningMode_d0c2eede64a8cd52: uint16_t {
  INVALID,
  PILOT,
  PARKING,
};
CAPNP_DECLARE_ENUM(AvpRunningMode, d0c2eede64a8cd52);

}  // namespace schemas
}  // namespace capnp

namespace senseAD {
namespace msg {
namespace avp_state_v3 {

typedef ::capnp::schemas::AvpMainStatus_b13d37abaf0f9dc1 AvpMainStatus;

typedef ::capnp::schemas::AvpRunningMode_d0c2eede64a8cd52 AvpRunningMode;

// =======================================================================================

// =======================================================================================

}  // namespace
}  // namespace
}  // namespace

CAPNP_END_HEADER

