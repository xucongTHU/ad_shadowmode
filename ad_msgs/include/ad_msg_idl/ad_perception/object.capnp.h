// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: object.capnp

#pragma once

#include <capnp/generated-header-support.h>
#include <kj/windows-sanity.h>

#if CAPNP_VERSION != 10002
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif

#include <ad_msg_idl/ad_perception/base.capnp.h>
#include <ad_msg_idl/ad_perception/object_label.capnp.h>
#include <ad_msg_idl/std_msgs/typed_data_list.capnp.h>

CAPNP_BEGIN_HEADER

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(c496032c1af96e75);
CAPNP_DECLARE_SCHEMA(e2137e5703043484);
enum class DerivedType_e2137e5703043484: uint16_t {
  CAMERA_NON_VEHICLE,
  CAMERA_PEDESTRIAN,
  CAMERA_VEHICLE,
  CAMERA_STATIC_OBSTACLE,
  LIDAR_OBJECT,
  RADAR_OBJECT,
  FUSION_OBJECT,
  CAMERA_TRAFFICLIGHT,
};
CAPNP_DECLARE_ENUM(DerivedType, e2137e5703043484);

}  // namespace schemas
}  // namespace capnp

namespace senseAD {
namespace msg {
namespace avp_perception {

struct Object {
  Object() = delete;

  class Reader;
  class Builder;
  class Pipeline;
  typedef ::capnp::schemas::DerivedType_e2137e5703043484 DerivedType;


  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(c496032c1af96e75, 16, 18)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

class Object::Reader {
public:
  typedef Object Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::int32_t getSensorId() const;

  inline  ::senseAD::msg::avp_perception::ObjectLabel getLabel() const;

  inline float getTypeConfidence() const;

  inline float getExistenceConfidence() const;

  inline  ::int32_t getSubType() const;

  inline bool hasSubTypeProbs() const;
  inline  ::senseAD::msg::std_msgs::Float32List::Reader getSubTypeProbs() const;

  inline  ::int32_t getTrackId() const;

  inline float getTrackAgeTimeSecond() const;

  inline  ::uint64_t getLastMeasureUpdateTimestampNs() const;

  inline  ::uint64_t getCurrentPredictionTimestampNs() const;

  inline bool hasSizeInfo() const;
  inline  ::senseAD::msg::avp_perception::SizeInfo::Reader getSizeInfo() const;

  inline bool hasPolygonBox() const;
  inline  ::senseAD::msg::avp_perception::PolygonBox::Reader getPolygonBox() const;

  inline bool hasDirectionInfo() const;
  inline  ::senseAD::msg::avp_perception::DirectionInfo::Reader getDirectionInfo() const;

  inline bool hasBvCorners() const;
  inline  ::senseAD::msg::avp_perception::BirdViewCorners::Reader getBvCorners() const;

  inline bool hasMotionInfo() const;
  inline  ::senseAD::msg::avp_perception::MotionInfo::Reader getMotionInfo() const;

  inline  ::int32_t getMotionStatus() const;

  inline float getMotionStaticScore() const;

  inline  ::int32_t getMaintenanceStatus() const;

  inline  ::int32_t getOcclusionStatus() const;

  inline bool hasFeature() const;
  inline  ::capnp::List< ::senseAD::msg::avp_perception::ModelOutputFeature,  ::capnp::Kind::STRUCT>::Reader getFeature() const;

  inline bool hasCameraBboxInfo() const;
  inline  ::senseAD::msg::avp_perception::CameraBBox2DInfo::Reader getCameraBboxInfo() const;

  inline  ::senseAD::msg::avp_perception::Object::DerivedType getDerivedType() const;

  inline bool hasAttribute() const;
  inline  ::senseAD::msg::avp_perception::BaseCameraAttribute::Reader getAttribute() const;

  inline bool hasAutomobileLightStatus() const;
  inline  ::senseAD::msg::avp_perception::AutomobileLightStatus::Reader getAutomobileLightStatus() const;

  inline bool getIsRightEdgeDetected() const;

  inline bool hasRightEdgeLine() const;
  inline  ::senseAD::msg::avp_perception::Vector4i::Reader getRightEdgeLine() const;

  inline bool hasNonAutomobileVehicleLightStatus() const;
  inline  ::senseAD::msg::avp_perception::NonAutomobileVehicleLightStatus::Reader getNonAutomobileVehicleLightStatus() const;

  inline bool getIsWithPed() const;

  inline  ::int32_t getUmbrella() const;

  inline  ::int32_t getCall() const;

  inline  ::int32_t getPhone() const;

  inline  ::int32_t getWave() const;

  inline  ::int32_t getStanding() const;

  inline bool hasUpperBodyDirection() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getUpperBodyDirection() const;

  inline bool hasLowerBodyDirection() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getLowerBodyDirection() const;

  inline bool hasFaceDirection() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getFaceDirection() const;

  inline bool hasIntention() const;
  inline  ::senseAD::msg::avp_perception::PedestrianIntention::Reader getIntention() const;

  inline bool getIsOnBike() const;

  inline bool hasDepthPoint() const;
  inline  ::senseAD::msg::avp_perception::DepthDetPoint::Reader getDepthPoint() const;

  inline  ::uint64_t getPointCloudTimestampNs() const;

  inline double getTrackRange() const;

  inline double getTrackRangeRate() const;

  inline double getTrackRangeAccelRate() const;

  inline double getTrackLatRate() const;

  inline bool hasMatchedSensorObjectInfo() const;
  inline  ::capnp::List< ::senseAD::msg::avp_perception::MatchedSensorObjectInfo,  ::capnp::Kind::STRUCT>::Reader getMatchedSensorObjectInfo() const;

  inline  ::uint32_t getColorLabel() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Object::Builder {
public:
  typedef Object Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::int32_t getSensorId();
  inline void setSensorId( ::int32_t value);

  inline  ::senseAD::msg::avp_perception::ObjectLabel getLabel();
  inline void setLabel( ::senseAD::msg::avp_perception::ObjectLabel value);

  inline float getTypeConfidence();
  inline void setTypeConfidence(float value);

  inline float getExistenceConfidence();
  inline void setExistenceConfidence(float value);

  inline  ::int32_t getSubType();
  inline void setSubType( ::int32_t value);

  inline bool hasSubTypeProbs();
  inline  ::senseAD::msg::std_msgs::Float32List::Builder getSubTypeProbs();
  inline void setSubTypeProbs( ::senseAD::msg::std_msgs::Float32List::Reader value);
  inline  ::senseAD::msg::std_msgs::Float32List::Builder initSubTypeProbs();
  inline void adoptSubTypeProbs(::capnp::Orphan< ::senseAD::msg::std_msgs::Float32List>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Float32List> disownSubTypeProbs();

  inline  ::int32_t getTrackId();
  inline void setTrackId( ::int32_t value);

  inline float getTrackAgeTimeSecond();
  inline void setTrackAgeTimeSecond(float value);

  inline  ::uint64_t getLastMeasureUpdateTimestampNs();
  inline void setLastMeasureUpdateTimestampNs( ::uint64_t value);

  inline  ::uint64_t getCurrentPredictionTimestampNs();
  inline void setCurrentPredictionTimestampNs( ::uint64_t value);

  inline bool hasSizeInfo();
  inline  ::senseAD::msg::avp_perception::SizeInfo::Builder getSizeInfo();
  inline void setSizeInfo( ::senseAD::msg::avp_perception::SizeInfo::Reader value);
  inline  ::senseAD::msg::avp_perception::SizeInfo::Builder initSizeInfo();
  inline void adoptSizeInfo(::capnp::Orphan< ::senseAD::msg::avp_perception::SizeInfo>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::SizeInfo> disownSizeInfo();

  inline bool hasPolygonBox();
  inline  ::senseAD::msg::avp_perception::PolygonBox::Builder getPolygonBox();
  inline void setPolygonBox( ::senseAD::msg::avp_perception::PolygonBox::Reader value);
  inline  ::senseAD::msg::avp_perception::PolygonBox::Builder initPolygonBox();
  inline void adoptPolygonBox(::capnp::Orphan< ::senseAD::msg::avp_perception::PolygonBox>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::PolygonBox> disownPolygonBox();

  inline bool hasDirectionInfo();
  inline  ::senseAD::msg::avp_perception::DirectionInfo::Builder getDirectionInfo();
  inline void setDirectionInfo( ::senseAD::msg::avp_perception::DirectionInfo::Reader value);
  inline  ::senseAD::msg::avp_perception::DirectionInfo::Builder initDirectionInfo();
  inline void adoptDirectionInfo(::capnp::Orphan< ::senseAD::msg::avp_perception::DirectionInfo>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::DirectionInfo> disownDirectionInfo();

  inline bool hasBvCorners();
  inline  ::senseAD::msg::avp_perception::BirdViewCorners::Builder getBvCorners();
  inline void setBvCorners( ::senseAD::msg::avp_perception::BirdViewCorners::Reader value);
  inline  ::senseAD::msg::avp_perception::BirdViewCorners::Builder initBvCorners();
  inline void adoptBvCorners(::capnp::Orphan< ::senseAD::msg::avp_perception::BirdViewCorners>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::BirdViewCorners> disownBvCorners();

  inline bool hasMotionInfo();
  inline  ::senseAD::msg::avp_perception::MotionInfo::Builder getMotionInfo();
  inline void setMotionInfo( ::senseAD::msg::avp_perception::MotionInfo::Reader value);
  inline  ::senseAD::msg::avp_perception::MotionInfo::Builder initMotionInfo();
  inline void adoptMotionInfo(::capnp::Orphan< ::senseAD::msg::avp_perception::MotionInfo>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::MotionInfo> disownMotionInfo();

  inline  ::int32_t getMotionStatus();
  inline void setMotionStatus( ::int32_t value);

  inline float getMotionStaticScore();
  inline void setMotionStaticScore(float value);

  inline  ::int32_t getMaintenanceStatus();
  inline void setMaintenanceStatus( ::int32_t value);

  inline  ::int32_t getOcclusionStatus();
  inline void setOcclusionStatus( ::int32_t value);

  inline bool hasFeature();
  inline  ::capnp::List< ::senseAD::msg::avp_perception::ModelOutputFeature,  ::capnp::Kind::STRUCT>::Builder getFeature();
  inline void setFeature( ::capnp::List< ::senseAD::msg::avp_perception::ModelOutputFeature,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::senseAD::msg::avp_perception::ModelOutputFeature,  ::capnp::Kind::STRUCT>::Builder initFeature(unsigned int size);
  inline void adoptFeature(::capnp::Orphan< ::capnp::List< ::senseAD::msg::avp_perception::ModelOutputFeature,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::avp_perception::ModelOutputFeature,  ::capnp::Kind::STRUCT>> disownFeature();

  inline bool hasCameraBboxInfo();
  inline  ::senseAD::msg::avp_perception::CameraBBox2DInfo::Builder getCameraBboxInfo();
  inline void setCameraBboxInfo( ::senseAD::msg::avp_perception::CameraBBox2DInfo::Reader value);
  inline  ::senseAD::msg::avp_perception::CameraBBox2DInfo::Builder initCameraBboxInfo();
  inline void adoptCameraBboxInfo(::capnp::Orphan< ::senseAD::msg::avp_perception::CameraBBox2DInfo>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::CameraBBox2DInfo> disownCameraBboxInfo();

  inline  ::senseAD::msg::avp_perception::Object::DerivedType getDerivedType();
  inline void setDerivedType( ::senseAD::msg::avp_perception::Object::DerivedType value);

  inline bool hasAttribute();
  inline  ::senseAD::msg::avp_perception::BaseCameraAttribute::Builder getAttribute();
  inline void setAttribute( ::senseAD::msg::avp_perception::BaseCameraAttribute::Reader value);
  inline  ::senseAD::msg::avp_perception::BaseCameraAttribute::Builder initAttribute();
  inline void adoptAttribute(::capnp::Orphan< ::senseAD::msg::avp_perception::BaseCameraAttribute>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::BaseCameraAttribute> disownAttribute();

  inline bool hasAutomobileLightStatus();
  inline  ::senseAD::msg::avp_perception::AutomobileLightStatus::Builder getAutomobileLightStatus();
  inline void setAutomobileLightStatus( ::senseAD::msg::avp_perception::AutomobileLightStatus::Reader value);
  inline  ::senseAD::msg::avp_perception::AutomobileLightStatus::Builder initAutomobileLightStatus();
  inline void adoptAutomobileLightStatus(::capnp::Orphan< ::senseAD::msg::avp_perception::AutomobileLightStatus>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::AutomobileLightStatus> disownAutomobileLightStatus();

  inline bool getIsRightEdgeDetected();
  inline void setIsRightEdgeDetected(bool value);

  inline bool hasRightEdgeLine();
  inline  ::senseAD::msg::avp_perception::Vector4i::Builder getRightEdgeLine();
  inline void setRightEdgeLine( ::senseAD::msg::avp_perception::Vector4i::Reader value);
  inline  ::senseAD::msg::avp_perception::Vector4i::Builder initRightEdgeLine();
  inline void adoptRightEdgeLine(::capnp::Orphan< ::senseAD::msg::avp_perception::Vector4i>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Vector4i> disownRightEdgeLine();

  inline bool hasNonAutomobileVehicleLightStatus();
  inline  ::senseAD::msg::avp_perception::NonAutomobileVehicleLightStatus::Builder getNonAutomobileVehicleLightStatus();
  inline void setNonAutomobileVehicleLightStatus( ::senseAD::msg::avp_perception::NonAutomobileVehicleLightStatus::Reader value);
  inline  ::senseAD::msg::avp_perception::NonAutomobileVehicleLightStatus::Builder initNonAutomobileVehicleLightStatus();
  inline void adoptNonAutomobileVehicleLightStatus(::capnp::Orphan< ::senseAD::msg::avp_perception::NonAutomobileVehicleLightStatus>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::NonAutomobileVehicleLightStatus> disownNonAutomobileVehicleLightStatus();

  inline bool getIsWithPed();
  inline void setIsWithPed(bool value);

  inline  ::int32_t getUmbrella();
  inline void setUmbrella( ::int32_t value);

  inline  ::int32_t getCall();
  inline void setCall( ::int32_t value);

  inline  ::int32_t getPhone();
  inline void setPhone( ::int32_t value);

  inline  ::int32_t getWave();
  inline void setWave( ::int32_t value);

  inline  ::int32_t getStanding();
  inline void setStanding( ::int32_t value);

  inline bool hasUpperBodyDirection();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getUpperBodyDirection();
  inline void setUpperBodyDirection( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initUpperBodyDirection();
  inline void adoptUpperBodyDirection(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownUpperBodyDirection();

  inline bool hasLowerBodyDirection();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getLowerBodyDirection();
  inline void setLowerBodyDirection( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initLowerBodyDirection();
  inline void adoptLowerBodyDirection(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownLowerBodyDirection();

  inline bool hasFaceDirection();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getFaceDirection();
  inline void setFaceDirection( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initFaceDirection();
  inline void adoptFaceDirection(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownFaceDirection();

  inline bool hasIntention();
  inline  ::senseAD::msg::avp_perception::PedestrianIntention::Builder getIntention();
  inline void setIntention( ::senseAD::msg::avp_perception::PedestrianIntention::Reader value);
  inline  ::senseAD::msg::avp_perception::PedestrianIntention::Builder initIntention();
  inline void adoptIntention(::capnp::Orphan< ::senseAD::msg::avp_perception::PedestrianIntention>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::PedestrianIntention> disownIntention();

  inline bool getIsOnBike();
  inline void setIsOnBike(bool value);

  inline bool hasDepthPoint();
  inline  ::senseAD::msg::avp_perception::DepthDetPoint::Builder getDepthPoint();
  inline void setDepthPoint( ::senseAD::msg::avp_perception::DepthDetPoint::Reader value);
  inline  ::senseAD::msg::avp_perception::DepthDetPoint::Builder initDepthPoint();
  inline void adoptDepthPoint(::capnp::Orphan< ::senseAD::msg::avp_perception::DepthDetPoint>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::DepthDetPoint> disownDepthPoint();

  inline  ::uint64_t getPointCloudTimestampNs();
  inline void setPointCloudTimestampNs( ::uint64_t value);

  inline double getTrackRange();
  inline void setTrackRange(double value);

  inline double getTrackRangeRate();
  inline void setTrackRangeRate(double value);

  inline double getTrackRangeAccelRate();
  inline void setTrackRangeAccelRate(double value);

  inline double getTrackLatRate();
  inline void setTrackLatRate(double value);

  inline bool hasMatchedSensorObjectInfo();
  inline  ::capnp::List< ::senseAD::msg::avp_perception::MatchedSensorObjectInfo,  ::capnp::Kind::STRUCT>::Builder getMatchedSensorObjectInfo();
  inline void setMatchedSensorObjectInfo( ::capnp::List< ::senseAD::msg::avp_perception::MatchedSensorObjectInfo,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::senseAD::msg::avp_perception::MatchedSensorObjectInfo,  ::capnp::Kind::STRUCT>::Builder initMatchedSensorObjectInfo(unsigned int size);
  inline void adoptMatchedSensorObjectInfo(::capnp::Orphan< ::capnp::List< ::senseAD::msg::avp_perception::MatchedSensorObjectInfo,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::avp_perception::MatchedSensorObjectInfo,  ::capnp::Kind::STRUCT>> disownMatchedSensorObjectInfo();

  inline  ::uint32_t getColorLabel();
  inline void setColorLabel( ::uint32_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Object::Pipeline {
public:
  typedef Object Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::std_msgs::Float32List::Pipeline getSubTypeProbs();
  inline  ::senseAD::msg::avp_perception::SizeInfo::Pipeline getSizeInfo();
  inline  ::senseAD::msg::avp_perception::PolygonBox::Pipeline getPolygonBox();
  inline  ::senseAD::msg::avp_perception::DirectionInfo::Pipeline getDirectionInfo();
  inline  ::senseAD::msg::avp_perception::BirdViewCorners::Pipeline getBvCorners();
  inline  ::senseAD::msg::avp_perception::MotionInfo::Pipeline getMotionInfo();
  inline  ::senseAD::msg::avp_perception::CameraBBox2DInfo::Pipeline getCameraBboxInfo();
  inline  ::senseAD::msg::avp_perception::BaseCameraAttribute::Pipeline getAttribute();
  inline  ::senseAD::msg::avp_perception::AutomobileLightStatus::Pipeline getAutomobileLightStatus();
  inline  ::senseAD::msg::avp_perception::Vector4i::Pipeline getRightEdgeLine();
  inline  ::senseAD::msg::avp_perception::NonAutomobileVehicleLightStatus::Pipeline getNonAutomobileVehicleLightStatus();
  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getUpperBodyDirection();
  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getLowerBodyDirection();
  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getFaceDirection();
  inline  ::senseAD::msg::avp_perception::PedestrianIntention::Pipeline getIntention();
  inline  ::senseAD::msg::avp_perception::DepthDetPoint::Pipeline getDepthPoint();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

inline  ::int32_t Object::Reader::getSensorId() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::int32_t Object::Builder::getSensorId() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setSensorId( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::senseAD::msg::avp_perception::ObjectLabel Object::Reader::getLabel() const {
  return _reader.getDataField< ::senseAD::msg::avp_perception::ObjectLabel>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::senseAD::msg::avp_perception::ObjectLabel Object::Builder::getLabel() {
  return _builder.getDataField< ::senseAD::msg::avp_perception::ObjectLabel>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setLabel( ::senseAD::msg::avp_perception::ObjectLabel value) {
  _builder.setDataField< ::senseAD::msg::avp_perception::ObjectLabel>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline float Object::Reader::getTypeConfidence() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline float Object::Builder::getTypeConfidence() {
  return _builder.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setTypeConfidence(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline float Object::Reader::getExistenceConfidence() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline float Object::Builder::getExistenceConfidence() {
  return _builder.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setExistenceConfidence(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t Object::Reader::getSubType() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::int32_t Object::Builder::getSubType() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setSubType( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline bool Object::Reader::hasSubTypeProbs() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool Object::Builder::hasSubTypeProbs() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::std_msgs::Float32List::Reader Object::Reader::getSubTypeProbs() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Float32List>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::std_msgs::Float32List::Builder Object::Builder::getSubTypeProbs() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Float32List>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::std_msgs::Float32List::Pipeline Object::Pipeline::getSubTypeProbs() {
  return  ::senseAD::msg::std_msgs::Float32List::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void Object::Builder::setSubTypeProbs( ::senseAD::msg::std_msgs::Float32List::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Float32List>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::std_msgs::Float32List::Builder Object::Builder::initSubTypeProbs() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Float32List>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void Object::Builder::adoptSubTypeProbs(
    ::capnp::Orphan< ::senseAD::msg::std_msgs::Float32List>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Float32List>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Float32List> Object::Builder::disownSubTypeProbs() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Float32List>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline  ::int32_t Object::Reader::getTrackId() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::int32_t Object::Builder::getTrackId() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setTrackId( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline float Object::Reader::getTrackAgeTimeSecond() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline float Object::Builder::getTrackAgeTimeSecond() {
  return _builder.getDataField<float>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setTrackAgeTimeSecond(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::uint64_t Object::Reader::getLastMeasureUpdateTimestampNs() const {
  return _reader.getDataField< ::uint64_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint64_t Object::Builder::getLastMeasureUpdateTimestampNs() {
  return _builder.getDataField< ::uint64_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setLastMeasureUpdateTimestampNs( ::uint64_t value) {
  _builder.setDataField< ::uint64_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline  ::uint64_t Object::Reader::getCurrentPredictionTimestampNs() const {
  return _reader.getDataField< ::uint64_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint64_t Object::Builder::getCurrentPredictionTimestampNs() {
  return _builder.getDataField< ::uint64_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setCurrentPredictionTimestampNs( ::uint64_t value) {
  _builder.setDataField< ::uint64_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline bool Object::Reader::hasSizeInfo() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool Object::Builder::hasSizeInfo() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::SizeInfo::Reader Object::Reader::getSizeInfo() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::SizeInfo>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::SizeInfo::Builder Object::Builder::getSizeInfo() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::SizeInfo>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::SizeInfo::Pipeline Object::Pipeline::getSizeInfo() {
  return  ::senseAD::msg::avp_perception::SizeInfo::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void Object::Builder::setSizeInfo( ::senseAD::msg::avp_perception::SizeInfo::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::SizeInfo>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::SizeInfo::Builder Object::Builder::initSizeInfo() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::SizeInfo>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void Object::Builder::adoptSizeInfo(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::SizeInfo>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::SizeInfo>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::SizeInfo> Object::Builder::disownSizeInfo() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::SizeInfo>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool Object::Reader::hasPolygonBox() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool Object::Builder::hasPolygonBox() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::PolygonBox::Reader Object::Reader::getPolygonBox() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::PolygonBox>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::PolygonBox::Builder Object::Builder::getPolygonBox() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::PolygonBox>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::PolygonBox::Pipeline Object::Pipeline::getPolygonBox() {
  return  ::senseAD::msg::avp_perception::PolygonBox::Pipeline(_typeless.getPointerField(2));
}
#endif  // !CAPNP_LITE
inline void Object::Builder::setPolygonBox( ::senseAD::msg::avp_perception::PolygonBox::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::PolygonBox>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::PolygonBox::Builder Object::Builder::initPolygonBox() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::PolygonBox>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void Object::Builder::adoptPolygonBox(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::PolygonBox>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::PolygonBox>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::PolygonBox> Object::Builder::disownPolygonBox() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::PolygonBox>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool Object::Reader::hasDirectionInfo() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool Object::Builder::hasDirectionInfo() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::DirectionInfo::Reader Object::Reader::getDirectionInfo() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::DirectionInfo>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::DirectionInfo::Builder Object::Builder::getDirectionInfo() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::DirectionInfo>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::DirectionInfo::Pipeline Object::Pipeline::getDirectionInfo() {
  return  ::senseAD::msg::avp_perception::DirectionInfo::Pipeline(_typeless.getPointerField(3));
}
#endif  // !CAPNP_LITE
inline void Object::Builder::setDirectionInfo( ::senseAD::msg::avp_perception::DirectionInfo::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::DirectionInfo>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::DirectionInfo::Builder Object::Builder::initDirectionInfo() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::DirectionInfo>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void Object::Builder::adoptDirectionInfo(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::DirectionInfo>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::DirectionInfo>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::DirectionInfo> Object::Builder::disownDirectionInfo() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::DirectionInfo>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline bool Object::Reader::hasBvCorners() const {
  return !_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline bool Object::Builder::hasBvCorners() {
  return !_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::BirdViewCorners::Reader Object::Reader::getBvCorners() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::BirdViewCorners>::get(_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::BirdViewCorners::Builder Object::Builder::getBvCorners() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::BirdViewCorners>::get(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::BirdViewCorners::Pipeline Object::Pipeline::getBvCorners() {
  return  ::senseAD::msg::avp_perception::BirdViewCorners::Pipeline(_typeless.getPointerField(4));
}
#endif  // !CAPNP_LITE
inline void Object::Builder::setBvCorners( ::senseAD::msg::avp_perception::BirdViewCorners::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::BirdViewCorners>::set(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::BirdViewCorners::Builder Object::Builder::initBvCorners() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::BirdViewCorners>::init(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline void Object::Builder::adoptBvCorners(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::BirdViewCorners>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::BirdViewCorners>::adopt(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::BirdViewCorners> Object::Builder::disownBvCorners() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::BirdViewCorners>::disown(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}

inline bool Object::Reader::hasMotionInfo() const {
  return !_reader.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS).isNull();
}
inline bool Object::Builder::hasMotionInfo() {
  return !_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::MotionInfo::Reader Object::Reader::getMotionInfo() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::MotionInfo>::get(_reader.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::MotionInfo::Builder Object::Builder::getMotionInfo() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::MotionInfo>::get(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::MotionInfo::Pipeline Object::Pipeline::getMotionInfo() {
  return  ::senseAD::msg::avp_perception::MotionInfo::Pipeline(_typeless.getPointerField(5));
}
#endif  // !CAPNP_LITE
inline void Object::Builder::setMotionInfo( ::senseAD::msg::avp_perception::MotionInfo::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::MotionInfo>::set(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::MotionInfo::Builder Object::Builder::initMotionInfo() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::MotionInfo>::init(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
inline void Object::Builder::adoptMotionInfo(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::MotionInfo>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::MotionInfo>::adopt(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::MotionInfo> Object::Builder::disownMotionInfo() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::MotionInfo>::disown(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}

inline  ::int32_t Object::Reader::getMotionStatus() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline  ::int32_t Object::Builder::getMotionStatus() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setMotionStatus( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline float Object::Reader::getMotionStaticScore() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}

inline float Object::Builder::getMotionStaticScore() {
  return _builder.getDataField<float>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setMotionStaticScore(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t Object::Reader::getMaintenanceStatus() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}

inline  ::int32_t Object::Builder::getMaintenanceStatus() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setMaintenanceStatus( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t Object::Reader::getOcclusionStatus() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}

inline  ::int32_t Object::Builder::getOcclusionStatus() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setOcclusionStatus( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS, value);
}

inline bool Object::Reader::hasFeature() const {
  return !_reader.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS).isNull();
}
inline bool Object::Builder::hasFeature() {
  return !_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::senseAD::msg::avp_perception::ModelOutputFeature,  ::capnp::Kind::STRUCT>::Reader Object::Reader::getFeature() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::avp_perception::ModelOutputFeature,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::senseAD::msg::avp_perception::ModelOutputFeature,  ::capnp::Kind::STRUCT>::Builder Object::Builder::getFeature() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::avp_perception::ModelOutputFeature,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}
inline void Object::Builder::setFeature( ::capnp::List< ::senseAD::msg::avp_perception::ModelOutputFeature,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::avp_perception::ModelOutputFeature,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::senseAD::msg::avp_perception::ModelOutputFeature,  ::capnp::Kind::STRUCT>::Builder Object::Builder::initFeature(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::avp_perception::ModelOutputFeature,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS), size);
}
inline void Object::Builder::adoptFeature(
    ::capnp::Orphan< ::capnp::List< ::senseAD::msg::avp_perception::ModelOutputFeature,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::avp_perception::ModelOutputFeature,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::avp_perception::ModelOutputFeature,  ::capnp::Kind::STRUCT>> Object::Builder::disownFeature() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::avp_perception::ModelOutputFeature,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}

inline bool Object::Reader::hasCameraBboxInfo() const {
  return !_reader.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS).isNull();
}
inline bool Object::Builder::hasCameraBboxInfo() {
  return !_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::CameraBBox2DInfo::Reader Object::Reader::getCameraBboxInfo() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::CameraBBox2DInfo>::get(_reader.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::CameraBBox2DInfo::Builder Object::Builder::getCameraBboxInfo() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::CameraBBox2DInfo>::get(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::CameraBBox2DInfo::Pipeline Object::Pipeline::getCameraBboxInfo() {
  return  ::senseAD::msg::avp_perception::CameraBBox2DInfo::Pipeline(_typeless.getPointerField(7));
}
#endif  // !CAPNP_LITE
inline void Object::Builder::setCameraBboxInfo( ::senseAD::msg::avp_perception::CameraBBox2DInfo::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::CameraBBox2DInfo>::set(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::CameraBBox2DInfo::Builder Object::Builder::initCameraBboxInfo() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::CameraBBox2DInfo>::init(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}
inline void Object::Builder::adoptCameraBboxInfo(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::CameraBBox2DInfo>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::CameraBBox2DInfo>::adopt(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::CameraBBox2DInfo> Object::Builder::disownCameraBboxInfo() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::CameraBBox2DInfo>::disown(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}

inline  ::senseAD::msg::avp_perception::Object::DerivedType Object::Reader::getDerivedType() const {
  return _reader.getDataField< ::senseAD::msg::avp_perception::Object::DerivedType>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::senseAD::msg::avp_perception::Object::DerivedType Object::Builder::getDerivedType() {
  return _builder.getDataField< ::senseAD::msg::avp_perception::Object::DerivedType>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setDerivedType( ::senseAD::msg::avp_perception::Object::DerivedType value) {
  _builder.setDataField< ::senseAD::msg::avp_perception::Object::DerivedType>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline bool Object::Reader::hasAttribute() const {
  return !_reader.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS).isNull();
}
inline bool Object::Builder::hasAttribute() {
  return !_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::BaseCameraAttribute::Reader Object::Reader::getAttribute() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::BaseCameraAttribute>::get(_reader.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::BaseCameraAttribute::Builder Object::Builder::getAttribute() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::BaseCameraAttribute>::get(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::BaseCameraAttribute::Pipeline Object::Pipeline::getAttribute() {
  return  ::senseAD::msg::avp_perception::BaseCameraAttribute::Pipeline(_typeless.getPointerField(8));
}
#endif  // !CAPNP_LITE
inline void Object::Builder::setAttribute( ::senseAD::msg::avp_perception::BaseCameraAttribute::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::BaseCameraAttribute>::set(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::BaseCameraAttribute::Builder Object::Builder::initAttribute() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::BaseCameraAttribute>::init(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}
inline void Object::Builder::adoptAttribute(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::BaseCameraAttribute>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::BaseCameraAttribute>::adopt(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::BaseCameraAttribute> Object::Builder::disownAttribute() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::BaseCameraAttribute>::disown(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}

inline bool Object::Reader::hasAutomobileLightStatus() const {
  return !_reader.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS).isNull();
}
inline bool Object::Builder::hasAutomobileLightStatus() {
  return !_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::AutomobileLightStatus::Reader Object::Reader::getAutomobileLightStatus() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::AutomobileLightStatus>::get(_reader.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::AutomobileLightStatus::Builder Object::Builder::getAutomobileLightStatus() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::AutomobileLightStatus>::get(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::AutomobileLightStatus::Pipeline Object::Pipeline::getAutomobileLightStatus() {
  return  ::senseAD::msg::avp_perception::AutomobileLightStatus::Pipeline(_typeless.getPointerField(9));
}
#endif  // !CAPNP_LITE
inline void Object::Builder::setAutomobileLightStatus( ::senseAD::msg::avp_perception::AutomobileLightStatus::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::AutomobileLightStatus>::set(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::AutomobileLightStatus::Builder Object::Builder::initAutomobileLightStatus() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::AutomobileLightStatus>::init(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}
inline void Object::Builder::adoptAutomobileLightStatus(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::AutomobileLightStatus>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::AutomobileLightStatus>::adopt(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::AutomobileLightStatus> Object::Builder::disownAutomobileLightStatus() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::AutomobileLightStatus>::disown(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}

inline bool Object::Reader::getIsRightEdgeDetected() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<480>() * ::capnp::ELEMENTS);
}

inline bool Object::Builder::getIsRightEdgeDetected() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<480>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setIsRightEdgeDetected(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<480>() * ::capnp::ELEMENTS, value);
}

inline bool Object::Reader::hasRightEdgeLine() const {
  return !_reader.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS).isNull();
}
inline bool Object::Builder::hasRightEdgeLine() {
  return !_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Vector4i::Reader Object::Reader::getRightEdgeLine() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Vector4i>::get(_reader.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Vector4i::Builder Object::Builder::getRightEdgeLine() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Vector4i>::get(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Vector4i::Pipeline Object::Pipeline::getRightEdgeLine() {
  return  ::senseAD::msg::avp_perception::Vector4i::Pipeline(_typeless.getPointerField(10));
}
#endif  // !CAPNP_LITE
inline void Object::Builder::setRightEdgeLine( ::senseAD::msg::avp_perception::Vector4i::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Vector4i>::set(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Vector4i::Builder Object::Builder::initRightEdgeLine() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Vector4i>::init(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}
inline void Object::Builder::adoptRightEdgeLine(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Vector4i>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Vector4i>::adopt(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Vector4i> Object::Builder::disownRightEdgeLine() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Vector4i>::disown(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}

inline bool Object::Reader::hasNonAutomobileVehicleLightStatus() const {
  return !_reader.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS).isNull();
}
inline bool Object::Builder::hasNonAutomobileVehicleLightStatus() {
  return !_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::NonAutomobileVehicleLightStatus::Reader Object::Reader::getNonAutomobileVehicleLightStatus() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::NonAutomobileVehicleLightStatus>::get(_reader.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::NonAutomobileVehicleLightStatus::Builder Object::Builder::getNonAutomobileVehicleLightStatus() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::NonAutomobileVehicleLightStatus>::get(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::NonAutomobileVehicleLightStatus::Pipeline Object::Pipeline::getNonAutomobileVehicleLightStatus() {
  return  ::senseAD::msg::avp_perception::NonAutomobileVehicleLightStatus::Pipeline(_typeless.getPointerField(11));
}
#endif  // !CAPNP_LITE
inline void Object::Builder::setNonAutomobileVehicleLightStatus( ::senseAD::msg::avp_perception::NonAutomobileVehicleLightStatus::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::NonAutomobileVehicleLightStatus>::set(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::NonAutomobileVehicleLightStatus::Builder Object::Builder::initNonAutomobileVehicleLightStatus() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::NonAutomobileVehicleLightStatus>::init(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS));
}
inline void Object::Builder::adoptNonAutomobileVehicleLightStatus(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::NonAutomobileVehicleLightStatus>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::NonAutomobileVehicleLightStatus>::adopt(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::NonAutomobileVehicleLightStatus> Object::Builder::disownNonAutomobileVehicleLightStatus() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::NonAutomobileVehicleLightStatus>::disown(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS));
}

inline bool Object::Reader::getIsWithPed() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<481>() * ::capnp::ELEMENTS);
}

inline bool Object::Builder::getIsWithPed() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<481>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setIsWithPed(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<481>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t Object::Reader::getUmbrella() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS);
}

inline  ::int32_t Object::Builder::getUmbrella() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setUmbrella( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t Object::Reader::getCall() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}

inline  ::int32_t Object::Builder::getCall() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setCall( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t Object::Reader::getPhone() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS);
}

inline  ::int32_t Object::Builder::getPhone() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setPhone( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t Object::Reader::getWave() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS);
}

inline  ::int32_t Object::Builder::getWave() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setWave( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t Object::Reader::getStanding() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<20>() * ::capnp::ELEMENTS);
}

inline  ::int32_t Object::Builder::getStanding() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<20>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setStanding( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<20>() * ::capnp::ELEMENTS, value);
}

inline bool Object::Reader::hasUpperBodyDirection() const {
  return !_reader.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS).isNull();
}
inline bool Object::Builder::hasUpperBodyDirection() {
  return !_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader Object::Reader::getUpperBodyDirection() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder Object::Builder::getUpperBodyDirection() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline Object::Pipeline::getUpperBodyDirection() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(12));
}
#endif  // !CAPNP_LITE
inline void Object::Builder::setUpperBodyDirection( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder Object::Builder::initUpperBodyDirection() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS));
}
inline void Object::Builder::adoptUpperBodyDirection(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> Object::Builder::disownUpperBodyDirection() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS));
}

inline bool Object::Reader::hasLowerBodyDirection() const {
  return !_reader.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS).isNull();
}
inline bool Object::Builder::hasLowerBodyDirection() {
  return !_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader Object::Reader::getLowerBodyDirection() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder Object::Builder::getLowerBodyDirection() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline Object::Pipeline::getLowerBodyDirection() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(13));
}
#endif  // !CAPNP_LITE
inline void Object::Builder::setLowerBodyDirection( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder Object::Builder::initLowerBodyDirection() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS));
}
inline void Object::Builder::adoptLowerBodyDirection(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> Object::Builder::disownLowerBodyDirection() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS));
}

inline bool Object::Reader::hasFaceDirection() const {
  return !_reader.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS).isNull();
}
inline bool Object::Builder::hasFaceDirection() {
  return !_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader Object::Reader::getFaceDirection() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder Object::Builder::getFaceDirection() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline Object::Pipeline::getFaceDirection() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(14));
}
#endif  // !CAPNP_LITE
inline void Object::Builder::setFaceDirection( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder Object::Builder::initFaceDirection() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS));
}
inline void Object::Builder::adoptFaceDirection(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> Object::Builder::disownFaceDirection() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS));
}

inline bool Object::Reader::hasIntention() const {
  return !_reader.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS).isNull();
}
inline bool Object::Builder::hasIntention() {
  return !_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::PedestrianIntention::Reader Object::Reader::getIntention() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::PedestrianIntention>::get(_reader.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::PedestrianIntention::Builder Object::Builder::getIntention() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::PedestrianIntention>::get(_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::PedestrianIntention::Pipeline Object::Pipeline::getIntention() {
  return  ::senseAD::msg::avp_perception::PedestrianIntention::Pipeline(_typeless.getPointerField(15));
}
#endif  // !CAPNP_LITE
inline void Object::Builder::setIntention( ::senseAD::msg::avp_perception::PedestrianIntention::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::PedestrianIntention>::set(_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::PedestrianIntention::Builder Object::Builder::initIntention() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::PedestrianIntention>::init(_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS));
}
inline void Object::Builder::adoptIntention(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::PedestrianIntention>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::PedestrianIntention>::adopt(_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::PedestrianIntention> Object::Builder::disownIntention() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::PedestrianIntention>::disown(_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS));
}

inline bool Object::Reader::getIsOnBike() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<482>() * ::capnp::ELEMENTS);
}

inline bool Object::Builder::getIsOnBike() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<482>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setIsOnBike(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<482>() * ::capnp::ELEMENTS, value);
}

inline bool Object::Reader::hasDepthPoint() const {
  return !_reader.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS).isNull();
}
inline bool Object::Builder::hasDepthPoint() {
  return !_builder.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::DepthDetPoint::Reader Object::Reader::getDepthPoint() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::DepthDetPoint>::get(_reader.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::DepthDetPoint::Builder Object::Builder::getDepthPoint() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::DepthDetPoint>::get(_builder.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::DepthDetPoint::Pipeline Object::Pipeline::getDepthPoint() {
  return  ::senseAD::msg::avp_perception::DepthDetPoint::Pipeline(_typeless.getPointerField(16));
}
#endif  // !CAPNP_LITE
inline void Object::Builder::setDepthPoint( ::senseAD::msg::avp_perception::DepthDetPoint::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::DepthDetPoint>::set(_builder.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::DepthDetPoint::Builder Object::Builder::initDepthPoint() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::DepthDetPoint>::init(_builder.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS));
}
inline void Object::Builder::adoptDepthPoint(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::DepthDetPoint>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::DepthDetPoint>::adopt(_builder.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::DepthDetPoint> Object::Builder::disownDepthPoint() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::DepthDetPoint>::disown(_builder.getPointerField(
      ::capnp::bounded<16>() * ::capnp::POINTERS));
}

inline  ::uint64_t Object::Reader::getPointCloudTimestampNs() const {
  return _reader.getDataField< ::uint64_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}

inline  ::uint64_t Object::Builder::getPointCloudTimestampNs() {
  return _builder.getDataField< ::uint64_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setPointCloudTimestampNs( ::uint64_t value) {
  _builder.setDataField< ::uint64_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS, value);
}

inline double Object::Reader::getTrackRange() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}

inline double Object::Builder::getTrackRange() {
  return _builder.getDataField<double>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setTrackRange(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS, value);
}

inline double Object::Reader::getTrackRangeRate() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}

inline double Object::Builder::getTrackRangeRate() {
  return _builder.getDataField<double>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setTrackRangeRate(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS, value);
}

inline double Object::Reader::getTrackRangeAccelRate() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}

inline double Object::Builder::getTrackRangeAccelRate() {
  return _builder.getDataField<double>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setTrackRangeAccelRate(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS, value);
}

inline double Object::Reader::getTrackLatRate() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}

inline double Object::Builder::getTrackLatRate() {
  return _builder.getDataField<double>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setTrackLatRate(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS, value);
}

inline bool Object::Reader::hasMatchedSensorObjectInfo() const {
  return !_reader.getPointerField(
      ::capnp::bounded<17>() * ::capnp::POINTERS).isNull();
}
inline bool Object::Builder::hasMatchedSensorObjectInfo() {
  return !_builder.getPointerField(
      ::capnp::bounded<17>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::senseAD::msg::avp_perception::MatchedSensorObjectInfo,  ::capnp::Kind::STRUCT>::Reader Object::Reader::getMatchedSensorObjectInfo() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::avp_perception::MatchedSensorObjectInfo,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<17>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::senseAD::msg::avp_perception::MatchedSensorObjectInfo,  ::capnp::Kind::STRUCT>::Builder Object::Builder::getMatchedSensorObjectInfo() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::avp_perception::MatchedSensorObjectInfo,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<17>() * ::capnp::POINTERS));
}
inline void Object::Builder::setMatchedSensorObjectInfo( ::capnp::List< ::senseAD::msg::avp_perception::MatchedSensorObjectInfo,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::avp_perception::MatchedSensorObjectInfo,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<17>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::senseAD::msg::avp_perception::MatchedSensorObjectInfo,  ::capnp::Kind::STRUCT>::Builder Object::Builder::initMatchedSensorObjectInfo(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::avp_perception::MatchedSensorObjectInfo,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<17>() * ::capnp::POINTERS), size);
}
inline void Object::Builder::adoptMatchedSensorObjectInfo(
    ::capnp::Orphan< ::capnp::List< ::senseAD::msg::avp_perception::MatchedSensorObjectInfo,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::avp_perception::MatchedSensorObjectInfo,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<17>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::avp_perception::MatchedSensorObjectInfo,  ::capnp::Kind::STRUCT>> Object::Builder::disownMatchedSensorObjectInfo() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::avp_perception::MatchedSensorObjectInfo,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<17>() * ::capnp::POINTERS));
}

inline  ::uint32_t Object::Reader::getColorLabel() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<21>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t Object::Builder::getColorLabel() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<21>() * ::capnp::ELEMENTS);
}
inline void Object::Builder::setColorLabel( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<21>() * ::capnp::ELEMENTS, value);
}

}  // namespace
}  // namespace
}  // namespace

CAPNP_END_HEADER

