// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: segmentation_result.capnp

#pragma once

#include <capnp/generated-header-support.h>
#include <kj/windows-sanity.h>

#if CAPNP_VERSION != 10002
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif

#include <ad_msg_idl/ad_perception/base.capnp.h>
#include <ad_msg_idl/std_msgs/raw_data.capnp.h>

CAPNP_BEGIN_HEADER

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(a7ea6c9d7d334dc2);
CAPNP_DECLARE_SCHEMA(d71c4271f8492cc3);

}  // namespace schemas
}  // namespace capnp

namespace senseAD {
namespace msg {
namespace avp_perception {

struct SegmentImages {
  SegmentImages() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(a7ea6c9d7d334dc2, 0, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct OdomSegmentImages {
  OdomSegmentImages() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(d71c4271f8492cc3, 0, 3)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

class SegmentImages::Reader {
public:
  typedef SegmentImages Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasImages() const;
  inline  ::capnp::List< ::senseAD::msg::std_msgs::Image,  ::capnp::Kind::STRUCT>::Reader getImages() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class SegmentImages::Builder {
public:
  typedef SegmentImages Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasImages();
  inline  ::capnp::List< ::senseAD::msg::std_msgs::Image,  ::capnp::Kind::STRUCT>::Builder getImages();
  inline void setImages( ::capnp::List< ::senseAD::msg::std_msgs::Image,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::senseAD::msg::std_msgs::Image,  ::capnp::Kind::STRUCT>::Builder initImages(unsigned int size);
  inline void adoptImages(::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Image,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Image,  ::capnp::Kind::STRUCT>> disownImages();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class SegmentImages::Pipeline {
public:
  typedef SegmentImages Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class OdomSegmentImages::Reader {
public:
  typedef OdomSegmentImages Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasSegmentImgs() const;
  inline  ::senseAD::msg::avp_perception::SegmentImages::Reader getSegmentImgs() const;

  inline bool hasSelfCarPose() const;
  inline  ::senseAD::msg::avp_perception::Point3f::Reader getSelfCarPose() const;

  inline bool hasSelfCarAngle() const;
  inline  ::senseAD::msg::avp_perception::Point3f::Reader getSelfCarAngle() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class OdomSegmentImages::Builder {
public:
  typedef OdomSegmentImages Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasSegmentImgs();
  inline  ::senseAD::msg::avp_perception::SegmentImages::Builder getSegmentImgs();
  inline void setSegmentImgs( ::senseAD::msg::avp_perception::SegmentImages::Reader value);
  inline  ::senseAD::msg::avp_perception::SegmentImages::Builder initSegmentImgs();
  inline void adoptSegmentImgs(::capnp::Orphan< ::senseAD::msg::avp_perception::SegmentImages>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::SegmentImages> disownSegmentImgs();

  inline bool hasSelfCarPose();
  inline  ::senseAD::msg::avp_perception::Point3f::Builder getSelfCarPose();
  inline void setSelfCarPose( ::senseAD::msg::avp_perception::Point3f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point3f::Builder initSelfCarPose();
  inline void adoptSelfCarPose(::capnp::Orphan< ::senseAD::msg::avp_perception::Point3f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point3f> disownSelfCarPose();

  inline bool hasSelfCarAngle();
  inline  ::senseAD::msg::avp_perception::Point3f::Builder getSelfCarAngle();
  inline void setSelfCarAngle( ::senseAD::msg::avp_perception::Point3f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point3f::Builder initSelfCarAngle();
  inline void adoptSelfCarAngle(::capnp::Orphan< ::senseAD::msg::avp_perception::Point3f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point3f> disownSelfCarAngle();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class OdomSegmentImages::Pipeline {
public:
  typedef OdomSegmentImages Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::avp_perception::SegmentImages::Pipeline getSegmentImgs();
  inline  ::senseAD::msg::avp_perception::Point3f::Pipeline getSelfCarPose();
  inline  ::senseAD::msg::avp_perception::Point3f::Pipeline getSelfCarAngle();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

inline bool SegmentImages::Reader::hasImages() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool SegmentImages::Builder::hasImages() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::senseAD::msg::std_msgs::Image,  ::capnp::Kind::STRUCT>::Reader SegmentImages::Reader::getImages() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Image,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::senseAD::msg::std_msgs::Image,  ::capnp::Kind::STRUCT>::Builder SegmentImages::Builder::getImages() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Image,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void SegmentImages::Builder::setImages( ::capnp::List< ::senseAD::msg::std_msgs::Image,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Image,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::senseAD::msg::std_msgs::Image,  ::capnp::Kind::STRUCT>::Builder SegmentImages::Builder::initImages(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Image,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), size);
}
inline void SegmentImages::Builder::adoptImages(
    ::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Image,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Image,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::senseAD::msg::std_msgs::Image,  ::capnp::Kind::STRUCT>> SegmentImages::Builder::disownImages() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::senseAD::msg::std_msgs::Image,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool OdomSegmentImages::Reader::hasSegmentImgs() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool OdomSegmentImages::Builder::hasSegmentImgs() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::SegmentImages::Reader OdomSegmentImages::Reader::getSegmentImgs() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::SegmentImages>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::SegmentImages::Builder OdomSegmentImages::Builder::getSegmentImgs() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::SegmentImages>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::SegmentImages::Pipeline OdomSegmentImages::Pipeline::getSegmentImgs() {
  return  ::senseAD::msg::avp_perception::SegmentImages::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void OdomSegmentImages::Builder::setSegmentImgs( ::senseAD::msg::avp_perception::SegmentImages::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::SegmentImages>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::SegmentImages::Builder OdomSegmentImages::Builder::initSegmentImgs() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::SegmentImages>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void OdomSegmentImages::Builder::adoptSegmentImgs(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::SegmentImages>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::SegmentImages>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::SegmentImages> OdomSegmentImages::Builder::disownSegmentImgs() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::SegmentImages>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool OdomSegmentImages::Reader::hasSelfCarPose() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool OdomSegmentImages::Builder::hasSelfCarPose() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point3f::Reader OdomSegmentImages::Reader::getSelfCarPose() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point3f>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point3f::Builder OdomSegmentImages::Builder::getSelfCarPose() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point3f>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point3f::Pipeline OdomSegmentImages::Pipeline::getSelfCarPose() {
  return  ::senseAD::msg::avp_perception::Point3f::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void OdomSegmentImages::Builder::setSelfCarPose( ::senseAD::msg::avp_perception::Point3f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point3f>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point3f::Builder OdomSegmentImages::Builder::initSelfCarPose() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point3f>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void OdomSegmentImages::Builder::adoptSelfCarPose(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point3f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point3f>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point3f> OdomSegmentImages::Builder::disownSelfCarPose() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point3f>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool OdomSegmentImages::Reader::hasSelfCarAngle() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool OdomSegmentImages::Builder::hasSelfCarAngle() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point3f::Reader OdomSegmentImages::Reader::getSelfCarAngle() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point3f>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point3f::Builder OdomSegmentImages::Builder::getSelfCarAngle() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point3f>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point3f::Pipeline OdomSegmentImages::Pipeline::getSelfCarAngle() {
  return  ::senseAD::msg::avp_perception::Point3f::Pipeline(_typeless.getPointerField(2));
}
#endif  // !CAPNP_LITE
inline void OdomSegmentImages::Builder::setSelfCarAngle( ::senseAD::msg::avp_perception::Point3f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point3f>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point3f::Builder OdomSegmentImages::Builder::initSelfCarAngle() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point3f>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void OdomSegmentImages::Builder::adoptSelfCarAngle(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point3f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point3f>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point3f> OdomSegmentImages::Builder::disownSelfCarAngle() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point3f>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

}  // namespace
}  // namespace
}  // namespace

CAPNP_END_HEADER

