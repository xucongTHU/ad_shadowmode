// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: parking_slot.capnp

#pragma once

#include <capnp/generated-header-support.h>
#include <kj/windows-sanity.h>

#if CAPNP_VERSION != 10002
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif

#include <ad_msg_idl/ad_perception/base.capnp.h>

CAPNP_BEGIN_HEADER

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(e2ee9c8440d9ce09);
CAPNP_DECLARE_SCHEMA(e531addbfab9f3fa);
CAPNP_DECLARE_SCHEMA(d18254a6cb6971ef);
enum class Type_d18254a6cb6971ef: uint16_t {
  VERTICAL,
  PARALLEL,
  SLANT,
};
CAPNP_DECLARE_ENUM(Type, d18254a6cb6971ef);

}  // namespace schemas
}  // namespace capnp

namespace senseAD {
namespace msg {
namespace avp_perception {

struct OriginalCornerPoints {
  OriginalCornerPoints() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(e2ee9c8440d9ce09, 0, 4)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct ParkingSlot {
  ParkingSlot() = delete;

  class Reader;
  class Builder;
  class Pipeline;
  typedef ::capnp::schemas::Type_d18254a6cb6971ef Type;


  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(e531addbfab9f3fa, 3, 4)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

class OriginalCornerPoints::Reader {
public:
  typedef OriginalCornerPoints Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasOriTl() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getOriTl() const;

  inline bool hasOriTr() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getOriTr() const;

  inline bool hasOriBl() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getOriBl() const;

  inline bool hasOriBr() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getOriBr() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class OriginalCornerPoints::Builder {
public:
  typedef OriginalCornerPoints Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasOriTl();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getOriTl();
  inline void setOriTl( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initOriTl();
  inline void adoptOriTl(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownOriTl();

  inline bool hasOriTr();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getOriTr();
  inline void setOriTr( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initOriTr();
  inline void adoptOriTr(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownOriTr();

  inline bool hasOriBl();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getOriBl();
  inline void setOriBl( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initOriBl();
  inline void adoptOriBl(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownOriBl();

  inline bool hasOriBr();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getOriBr();
  inline void setOriBr( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initOriBr();
  inline void adoptOriBr(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownOriBr();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class OriginalCornerPoints::Pipeline {
public:
  typedef OriginalCornerPoints Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getOriTl();
  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getOriTr();
  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getOriBl();
  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getOriBr();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class ParkingSlot::Reader {
public:
  typedef ParkingSlot Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline float getConfidence() const;

  inline float getWidth() const;

  inline float getLength() const;

  inline bool hasCenter() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getCenter() const;

  inline bool hasWideDirection() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getWideDirection() const;

  inline bool hasLongDirection() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getLongDirection() const;

  inline bool getIsOccupied() const;

  inline  ::uint32_t getType() const;

  inline bool hasOriCornerPoints() const;
  inline  ::senseAD::msg::avp_perception::OriginalCornerPoints::Reader getOriCornerPoints() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class ParkingSlot::Builder {
public:
  typedef ParkingSlot Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline float getConfidence();
  inline void setConfidence(float value);

  inline float getWidth();
  inline void setWidth(float value);

  inline float getLength();
  inline void setLength(float value);

  inline bool hasCenter();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getCenter();
  inline void setCenter( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initCenter();
  inline void adoptCenter(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownCenter();

  inline bool hasWideDirection();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getWideDirection();
  inline void setWideDirection( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initWideDirection();
  inline void adoptWideDirection(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownWideDirection();

  inline bool hasLongDirection();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getLongDirection();
  inline void setLongDirection( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initLongDirection();
  inline void adoptLongDirection(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownLongDirection();

  inline bool getIsOccupied();
  inline void setIsOccupied(bool value);

  inline  ::uint32_t getType();
  inline void setType( ::uint32_t value);

  inline bool hasOriCornerPoints();
  inline  ::senseAD::msg::avp_perception::OriginalCornerPoints::Builder getOriCornerPoints();
  inline void setOriCornerPoints( ::senseAD::msg::avp_perception::OriginalCornerPoints::Reader value);
  inline  ::senseAD::msg::avp_perception::OriginalCornerPoints::Builder initOriCornerPoints();
  inline void adoptOriCornerPoints(::capnp::Orphan< ::senseAD::msg::avp_perception::OriginalCornerPoints>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::OriginalCornerPoints> disownOriCornerPoints();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class ParkingSlot::Pipeline {
public:
  typedef ParkingSlot Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getCenter();
  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getWideDirection();
  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getLongDirection();
  inline  ::senseAD::msg::avp_perception::OriginalCornerPoints::Pipeline getOriCornerPoints();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

inline bool OriginalCornerPoints::Reader::hasOriTl() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool OriginalCornerPoints::Builder::hasOriTl() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader OriginalCornerPoints::Reader::getOriTl() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder OriginalCornerPoints::Builder::getOriTl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline OriginalCornerPoints::Pipeline::getOriTl() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void OriginalCornerPoints::Builder::setOriTl( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder OriginalCornerPoints::Builder::initOriTl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void OriginalCornerPoints::Builder::adoptOriTl(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> OriginalCornerPoints::Builder::disownOriTl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool OriginalCornerPoints::Reader::hasOriTr() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool OriginalCornerPoints::Builder::hasOriTr() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader OriginalCornerPoints::Reader::getOriTr() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder OriginalCornerPoints::Builder::getOriTr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline OriginalCornerPoints::Pipeline::getOriTr() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void OriginalCornerPoints::Builder::setOriTr( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder OriginalCornerPoints::Builder::initOriTr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void OriginalCornerPoints::Builder::adoptOriTr(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> OriginalCornerPoints::Builder::disownOriTr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool OriginalCornerPoints::Reader::hasOriBl() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool OriginalCornerPoints::Builder::hasOriBl() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader OriginalCornerPoints::Reader::getOriBl() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder OriginalCornerPoints::Builder::getOriBl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline OriginalCornerPoints::Pipeline::getOriBl() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(2));
}
#endif  // !CAPNP_LITE
inline void OriginalCornerPoints::Builder::setOriBl( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder OriginalCornerPoints::Builder::initOriBl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void OriginalCornerPoints::Builder::adoptOriBl(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> OriginalCornerPoints::Builder::disownOriBl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool OriginalCornerPoints::Reader::hasOriBr() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool OriginalCornerPoints::Builder::hasOriBr() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader OriginalCornerPoints::Reader::getOriBr() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder OriginalCornerPoints::Builder::getOriBr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline OriginalCornerPoints::Pipeline::getOriBr() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(3));
}
#endif  // !CAPNP_LITE
inline void OriginalCornerPoints::Builder::setOriBr( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder OriginalCornerPoints::Builder::initOriBr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void OriginalCornerPoints::Builder::adoptOriBr(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> OriginalCornerPoints::Builder::disownOriBr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline float ParkingSlot::Reader::getConfidence() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline float ParkingSlot::Builder::getConfidence() {
  return _builder.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void ParkingSlot::Builder::setConfidence(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline float ParkingSlot::Reader::getWidth() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline float ParkingSlot::Builder::getWidth() {
  return _builder.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void ParkingSlot::Builder::setWidth(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline float ParkingSlot::Reader::getLength() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline float ParkingSlot::Builder::getLength() {
  return _builder.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void ParkingSlot::Builder::setLength(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline bool ParkingSlot::Reader::hasCenter() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool ParkingSlot::Builder::hasCenter() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader ParkingSlot::Reader::getCenter() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder ParkingSlot::Builder::getCenter() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline ParkingSlot::Pipeline::getCenter() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void ParkingSlot::Builder::setCenter( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder ParkingSlot::Builder::initCenter() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void ParkingSlot::Builder::adoptCenter(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> ParkingSlot::Builder::disownCenter() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool ParkingSlot::Reader::hasWideDirection() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool ParkingSlot::Builder::hasWideDirection() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader ParkingSlot::Reader::getWideDirection() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder ParkingSlot::Builder::getWideDirection() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline ParkingSlot::Pipeline::getWideDirection() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void ParkingSlot::Builder::setWideDirection( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder ParkingSlot::Builder::initWideDirection() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void ParkingSlot::Builder::adoptWideDirection(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> ParkingSlot::Builder::disownWideDirection() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool ParkingSlot::Reader::hasLongDirection() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool ParkingSlot::Builder::hasLongDirection() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader ParkingSlot::Reader::getLongDirection() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder ParkingSlot::Builder::getLongDirection() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline ParkingSlot::Pipeline::getLongDirection() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(2));
}
#endif  // !CAPNP_LITE
inline void ParkingSlot::Builder::setLongDirection( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder ParkingSlot::Builder::initLongDirection() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void ParkingSlot::Builder::adoptLongDirection(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> ParkingSlot::Builder::disownLongDirection() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool ParkingSlot::Reader::getIsOccupied() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<96>() * ::capnp::ELEMENTS);
}

inline bool ParkingSlot::Builder::getIsOccupied() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<96>() * ::capnp::ELEMENTS);
}
inline void ParkingSlot::Builder::setIsOccupied(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<96>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t ParkingSlot::Reader::getType() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t ParkingSlot::Builder::getType() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void ParkingSlot::Builder::setType( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline bool ParkingSlot::Reader::hasOriCornerPoints() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool ParkingSlot::Builder::hasOriCornerPoints() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::OriginalCornerPoints::Reader ParkingSlot::Reader::getOriCornerPoints() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::OriginalCornerPoints>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::OriginalCornerPoints::Builder ParkingSlot::Builder::getOriCornerPoints() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::OriginalCornerPoints>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::OriginalCornerPoints::Pipeline ParkingSlot::Pipeline::getOriCornerPoints() {
  return  ::senseAD::msg::avp_perception::OriginalCornerPoints::Pipeline(_typeless.getPointerField(3));
}
#endif  // !CAPNP_LITE
inline void ParkingSlot::Builder::setOriCornerPoints( ::senseAD::msg::avp_perception::OriginalCornerPoints::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::OriginalCornerPoints>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::OriginalCornerPoints::Builder ParkingSlot::Builder::initOriCornerPoints() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::OriginalCornerPoints>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void ParkingSlot::Builder::adoptOriCornerPoints(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::OriginalCornerPoints>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::OriginalCornerPoints>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::OriginalCornerPoints> ParkingSlot::Builder::disownOriCornerPoints() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::OriginalCornerPoints>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

}  // namespace
}  // namespace
}  // namespace

CAPNP_END_HEADER

