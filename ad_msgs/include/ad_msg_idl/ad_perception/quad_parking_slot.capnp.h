// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: quad_parking_slot.capnp

#pragma once

#include <capnp/generated-header-support.h>
#include <kj/windows-sanity.h>

#if CAPNP_VERSION != 10002
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif

#include <ad_msg_idl/ad_perception/base.capnp.h>

CAPNP_BEGIN_HEADER

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(f5c417c7d181950d);
CAPNP_DECLARE_SCHEMA(bf810ef24ed0a5d4);
CAPNP_DECLARE_SCHEMA(c271b369706603dd);

}  // namespace schemas
}  // namespace capnp

namespace senseAD {
namespace msg {
namespace avp_perception {

struct IpmSlotLimiter {
  IpmSlotLimiter() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(f5c417c7d181950d, 1, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct ApproxBoxPoints {
  ApproxBoxPoints() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(bf810ef24ed0a5d4, 3, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct QuadParkingSlot {
  QuadParkingSlot() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(c271b369706603dd, 5, 16)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

class IpmSlotLimiter::Reader {
public:
  typedef IpmSlotLimiter Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasLimiterPoint() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getLimiterPoint() const;

  inline float getConfidence() const;

  inline  ::uint32_t getLimiterType() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class IpmSlotLimiter::Builder {
public:
  typedef IpmSlotLimiter Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasLimiterPoint();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getLimiterPoint();
  inline void setLimiterPoint( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initLimiterPoint();
  inline void adoptLimiterPoint(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownLimiterPoint();

  inline float getConfidence();
  inline void setConfidence(float value);

  inline  ::uint32_t getLimiterType();
  inline void setLimiterType( ::uint32_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class IpmSlotLimiter::Pipeline {
public:
  typedef IpmSlotLimiter Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getLimiterPoint();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class ApproxBoxPoints::Reader {
public:
  typedef ApproxBoxPoints Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasPoint() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getPoint() const;

  inline float getBorderDist() const;

  inline float getPointScore() const;

  inline float getLineLen() const;

  inline float getLineScore() const;

  inline bool getHasBorderPoint() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class ApproxBoxPoints::Builder {
public:
  typedef ApproxBoxPoints Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasPoint();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getPoint();
  inline void setPoint( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initPoint();
  inline void adoptPoint(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownPoint();

  inline float getBorderDist();
  inline void setBorderDist(float value);

  inline float getPointScore();
  inline void setPointScore(float value);

  inline float getLineLen();
  inline void setLineLen(float value);

  inline float getLineScore();
  inline void setLineScore(float value);

  inline bool getHasBorderPoint();
  inline void setHasBorderPoint(bool value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class ApproxBoxPoints::Pipeline {
public:
  typedef ApproxBoxPoints Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getPoint();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class QuadParkingSlot::Reader {
public:
  typedef QuadParkingSlot Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasTl() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getTl() const;

  inline bool hasTr() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getTr() const;

  inline bool hasBl() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getBl() const;

  inline bool hasBr() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getBr() const;

  inline float getConfidence() const;

  inline  ::uint32_t getLabel() const;

  inline bool getFiltered() const;

  inline  ::int32_t getSlotType() const;

  inline float getSTl() const;

  inline float getSTr() const;

  inline float getSBl() const;

  inline float getSBr() const;

  inline bool hasDirIn() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getDirIn() const;

  inline bool hasDirWidth() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getDirWidth() const;

  inline bool hasDirLength() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getDirLength() const;

  inline bool hasCenter() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getCenter() const;

  inline bool getOppModify() const;

  inline bool getIsComplete() const;

  inline float getWidth() const;

  inline float getLength() const;

  inline bool getIsVisited() const;

  inline bool hasPTl() const;
  inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Reader getPTl() const;

  inline bool hasPTr() const;
  inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Reader getPTr() const;

  inline bool hasPBl() const;
  inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Reader getPBl() const;

  inline bool hasPBr() const;
  inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Reader getPBr() const;

  inline bool hasOriTl() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getOriTl() const;

  inline bool hasOriTr() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getOriTr() const;

  inline bool hasOriBl() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getOriBl() const;

  inline bool hasOriBr() const;
  inline  ::senseAD::msg::avp_perception::Point2f::Reader getOriBr() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class QuadParkingSlot::Builder {
public:
  typedef QuadParkingSlot Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasTl();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getTl();
  inline void setTl( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initTl();
  inline void adoptTl(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownTl();

  inline bool hasTr();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getTr();
  inline void setTr( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initTr();
  inline void adoptTr(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownTr();

  inline bool hasBl();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getBl();
  inline void setBl( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initBl();
  inline void adoptBl(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownBl();

  inline bool hasBr();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getBr();
  inline void setBr( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initBr();
  inline void adoptBr(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownBr();

  inline float getConfidence();
  inline void setConfidence(float value);

  inline  ::uint32_t getLabel();
  inline void setLabel( ::uint32_t value);

  inline bool getFiltered();
  inline void setFiltered(bool value);

  inline  ::int32_t getSlotType();
  inline void setSlotType( ::int32_t value);

  inline float getSTl();
  inline void setSTl(float value);

  inline float getSTr();
  inline void setSTr(float value);

  inline float getSBl();
  inline void setSBl(float value);

  inline float getSBr();
  inline void setSBr(float value);

  inline bool hasDirIn();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getDirIn();
  inline void setDirIn( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initDirIn();
  inline void adoptDirIn(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownDirIn();

  inline bool hasDirWidth();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getDirWidth();
  inline void setDirWidth( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initDirWidth();
  inline void adoptDirWidth(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownDirWidth();

  inline bool hasDirLength();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getDirLength();
  inline void setDirLength( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initDirLength();
  inline void adoptDirLength(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownDirLength();

  inline bool hasCenter();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getCenter();
  inline void setCenter( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initCenter();
  inline void adoptCenter(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownCenter();

  inline bool getOppModify();
  inline void setOppModify(bool value);

  inline bool getIsComplete();
  inline void setIsComplete(bool value);

  inline float getWidth();
  inline void setWidth(float value);

  inline float getLength();
  inline void setLength(float value);

  inline bool getIsVisited();
  inline void setIsVisited(bool value);

  inline bool hasPTl();
  inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Builder getPTl();
  inline void setPTl( ::senseAD::msg::avp_perception::ApproxBoxPoints::Reader value);
  inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Builder initPTl();
  inline void adoptPTl(::capnp::Orphan< ::senseAD::msg::avp_perception::ApproxBoxPoints>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::ApproxBoxPoints> disownPTl();

  inline bool hasPTr();
  inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Builder getPTr();
  inline void setPTr( ::senseAD::msg::avp_perception::ApproxBoxPoints::Reader value);
  inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Builder initPTr();
  inline void adoptPTr(::capnp::Orphan< ::senseAD::msg::avp_perception::ApproxBoxPoints>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::ApproxBoxPoints> disownPTr();

  inline bool hasPBl();
  inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Builder getPBl();
  inline void setPBl( ::senseAD::msg::avp_perception::ApproxBoxPoints::Reader value);
  inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Builder initPBl();
  inline void adoptPBl(::capnp::Orphan< ::senseAD::msg::avp_perception::ApproxBoxPoints>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::ApproxBoxPoints> disownPBl();

  inline bool hasPBr();
  inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Builder getPBr();
  inline void setPBr( ::senseAD::msg::avp_perception::ApproxBoxPoints::Reader value);
  inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Builder initPBr();
  inline void adoptPBr(::capnp::Orphan< ::senseAD::msg::avp_perception::ApproxBoxPoints>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::ApproxBoxPoints> disownPBr();

  inline bool hasOriTl();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getOriTl();
  inline void setOriTl( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initOriTl();
  inline void adoptOriTl(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownOriTl();

  inline bool hasOriTr();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getOriTr();
  inline void setOriTr( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initOriTr();
  inline void adoptOriTr(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownOriTr();

  inline bool hasOriBl();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getOriBl();
  inline void setOriBl( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initOriBl();
  inline void adoptOriBl(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownOriBl();

  inline bool hasOriBr();
  inline  ::senseAD::msg::avp_perception::Point2f::Builder getOriBr();
  inline void setOriBr( ::senseAD::msg::avp_perception::Point2f::Reader value);
  inline  ::senseAD::msg::avp_perception::Point2f::Builder initOriBr();
  inline void adoptOriBr(::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> disownOriBr();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class QuadParkingSlot::Pipeline {
public:
  typedef QuadParkingSlot Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getTl();
  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getTr();
  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getBl();
  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getBr();
  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getDirIn();
  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getDirWidth();
  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getDirLength();
  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getCenter();
  inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Pipeline getPTl();
  inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Pipeline getPTr();
  inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Pipeline getPBl();
  inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Pipeline getPBr();
  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getOriTl();
  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getOriTr();
  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getOriBl();
  inline  ::senseAD::msg::avp_perception::Point2f::Pipeline getOriBr();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

inline bool IpmSlotLimiter::Reader::hasLimiterPoint() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool IpmSlotLimiter::Builder::hasLimiterPoint() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader IpmSlotLimiter::Reader::getLimiterPoint() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder IpmSlotLimiter::Builder::getLimiterPoint() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline IpmSlotLimiter::Pipeline::getLimiterPoint() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void IpmSlotLimiter::Builder::setLimiterPoint( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder IpmSlotLimiter::Builder::initLimiterPoint() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void IpmSlotLimiter::Builder::adoptLimiterPoint(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> IpmSlotLimiter::Builder::disownLimiterPoint() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline float IpmSlotLimiter::Reader::getConfidence() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline float IpmSlotLimiter::Builder::getConfidence() {
  return _builder.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void IpmSlotLimiter::Builder::setConfidence(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t IpmSlotLimiter::Reader::getLimiterType() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t IpmSlotLimiter::Builder::getLimiterType() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void IpmSlotLimiter::Builder::setLimiterType( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline bool ApproxBoxPoints::Reader::hasPoint() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool ApproxBoxPoints::Builder::hasPoint() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader ApproxBoxPoints::Reader::getPoint() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder ApproxBoxPoints::Builder::getPoint() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline ApproxBoxPoints::Pipeline::getPoint() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void ApproxBoxPoints::Builder::setPoint( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder ApproxBoxPoints::Builder::initPoint() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void ApproxBoxPoints::Builder::adoptPoint(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> ApproxBoxPoints::Builder::disownPoint() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline float ApproxBoxPoints::Reader::getBorderDist() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline float ApproxBoxPoints::Builder::getBorderDist() {
  return _builder.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void ApproxBoxPoints::Builder::setBorderDist(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline float ApproxBoxPoints::Reader::getPointScore() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline float ApproxBoxPoints::Builder::getPointScore() {
  return _builder.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void ApproxBoxPoints::Builder::setPointScore(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline float ApproxBoxPoints::Reader::getLineLen() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline float ApproxBoxPoints::Builder::getLineLen() {
  return _builder.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void ApproxBoxPoints::Builder::setLineLen(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline float ApproxBoxPoints::Reader::getLineScore() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline float ApproxBoxPoints::Builder::getLineScore() {
  return _builder.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void ApproxBoxPoints::Builder::setLineScore(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline bool ApproxBoxPoints::Reader::getHasBorderPoint() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<128>() * ::capnp::ELEMENTS);
}

inline bool ApproxBoxPoints::Builder::getHasBorderPoint() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<128>() * ::capnp::ELEMENTS);
}
inline void ApproxBoxPoints::Builder::setHasBorderPoint(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<128>() * ::capnp::ELEMENTS, value);
}

inline bool QuadParkingSlot::Reader::hasTl() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool QuadParkingSlot::Builder::hasTl() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader QuadParkingSlot::Reader::getTl() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::getTl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline QuadParkingSlot::Pipeline::getTl() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void QuadParkingSlot::Builder::setTl( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::initTl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void QuadParkingSlot::Builder::adoptTl(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> QuadParkingSlot::Builder::disownTl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool QuadParkingSlot::Reader::hasTr() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool QuadParkingSlot::Builder::hasTr() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader QuadParkingSlot::Reader::getTr() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::getTr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline QuadParkingSlot::Pipeline::getTr() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void QuadParkingSlot::Builder::setTr( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::initTr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void QuadParkingSlot::Builder::adoptTr(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> QuadParkingSlot::Builder::disownTr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool QuadParkingSlot::Reader::hasBl() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool QuadParkingSlot::Builder::hasBl() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader QuadParkingSlot::Reader::getBl() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::getBl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline QuadParkingSlot::Pipeline::getBl() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(2));
}
#endif  // !CAPNP_LITE
inline void QuadParkingSlot::Builder::setBl( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::initBl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void QuadParkingSlot::Builder::adoptBl(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> QuadParkingSlot::Builder::disownBl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool QuadParkingSlot::Reader::hasBr() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool QuadParkingSlot::Builder::hasBr() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader QuadParkingSlot::Reader::getBr() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::getBr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline QuadParkingSlot::Pipeline::getBr() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(3));
}
#endif  // !CAPNP_LITE
inline void QuadParkingSlot::Builder::setBr( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::initBr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void QuadParkingSlot::Builder::adoptBr(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> QuadParkingSlot::Builder::disownBr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline float QuadParkingSlot::Reader::getConfidence() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline float QuadParkingSlot::Builder::getConfidence() {
  return _builder.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void QuadParkingSlot::Builder::setConfidence(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t QuadParkingSlot::Reader::getLabel() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t QuadParkingSlot::Builder::getLabel() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void QuadParkingSlot::Builder::setLabel( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline bool QuadParkingSlot::Reader::getFiltered() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<64>() * ::capnp::ELEMENTS);
}

inline bool QuadParkingSlot::Builder::getFiltered() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<64>() * ::capnp::ELEMENTS);
}
inline void QuadParkingSlot::Builder::setFiltered(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<64>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t QuadParkingSlot::Reader::getSlotType() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::int32_t QuadParkingSlot::Builder::getSlotType() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void QuadParkingSlot::Builder::setSlotType( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline float QuadParkingSlot::Reader::getSTl() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline float QuadParkingSlot::Builder::getSTl() {
  return _builder.getDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void QuadParkingSlot::Builder::setSTl(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline float QuadParkingSlot::Reader::getSTr() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline float QuadParkingSlot::Builder::getSTr() {
  return _builder.getDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void QuadParkingSlot::Builder::setSTr(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline float QuadParkingSlot::Reader::getSBl() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline float QuadParkingSlot::Builder::getSBl() {
  return _builder.getDataField<float>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void QuadParkingSlot::Builder::setSBl(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline float QuadParkingSlot::Reader::getSBr() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline float QuadParkingSlot::Builder::getSBr() {
  return _builder.getDataField<float>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void QuadParkingSlot::Builder::setSBr(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline bool QuadParkingSlot::Reader::hasDirIn() const {
  return !_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline bool QuadParkingSlot::Builder::hasDirIn() {
  return !_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader QuadParkingSlot::Reader::getDirIn() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::getDirIn() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline QuadParkingSlot::Pipeline::getDirIn() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(4));
}
#endif  // !CAPNP_LITE
inline void QuadParkingSlot::Builder::setDirIn( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::initDirIn() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline void QuadParkingSlot::Builder::adoptDirIn(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> QuadParkingSlot::Builder::disownDirIn() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}

inline bool QuadParkingSlot::Reader::hasDirWidth() const {
  return !_reader.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS).isNull();
}
inline bool QuadParkingSlot::Builder::hasDirWidth() {
  return !_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader QuadParkingSlot::Reader::getDirWidth() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::getDirWidth() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline QuadParkingSlot::Pipeline::getDirWidth() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(5));
}
#endif  // !CAPNP_LITE
inline void QuadParkingSlot::Builder::setDirWidth( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::initDirWidth() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
inline void QuadParkingSlot::Builder::adoptDirWidth(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> QuadParkingSlot::Builder::disownDirWidth() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}

inline bool QuadParkingSlot::Reader::hasDirLength() const {
  return !_reader.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS).isNull();
}
inline bool QuadParkingSlot::Builder::hasDirLength() {
  return !_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader QuadParkingSlot::Reader::getDirLength() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::getDirLength() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline QuadParkingSlot::Pipeline::getDirLength() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(6));
}
#endif  // !CAPNP_LITE
inline void QuadParkingSlot::Builder::setDirLength( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::initDirLength() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}
inline void QuadParkingSlot::Builder::adoptDirLength(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> QuadParkingSlot::Builder::disownDirLength() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}

inline bool QuadParkingSlot::Reader::hasCenter() const {
  return !_reader.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS).isNull();
}
inline bool QuadParkingSlot::Builder::hasCenter() {
  return !_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader QuadParkingSlot::Reader::getCenter() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::getCenter() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline QuadParkingSlot::Pipeline::getCenter() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(7));
}
#endif  // !CAPNP_LITE
inline void QuadParkingSlot::Builder::setCenter( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::initCenter() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}
inline void QuadParkingSlot::Builder::adoptCenter(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> QuadParkingSlot::Builder::disownCenter() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}

inline bool QuadParkingSlot::Reader::getOppModify() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<65>() * ::capnp::ELEMENTS);
}

inline bool QuadParkingSlot::Builder::getOppModify() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<65>() * ::capnp::ELEMENTS);
}
inline void QuadParkingSlot::Builder::setOppModify(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<65>() * ::capnp::ELEMENTS, value);
}

inline bool QuadParkingSlot::Reader::getIsComplete() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<66>() * ::capnp::ELEMENTS);
}

inline bool QuadParkingSlot::Builder::getIsComplete() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<66>() * ::capnp::ELEMENTS);
}
inline void QuadParkingSlot::Builder::setIsComplete(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<66>() * ::capnp::ELEMENTS, value);
}

inline float QuadParkingSlot::Reader::getWidth() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline float QuadParkingSlot::Builder::getWidth() {
  return _builder.getDataField<float>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void QuadParkingSlot::Builder::setWidth(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline float QuadParkingSlot::Reader::getLength() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}

inline float QuadParkingSlot::Builder::getLength() {
  return _builder.getDataField<float>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}
inline void QuadParkingSlot::Builder::setLength(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS, value);
}

inline bool QuadParkingSlot::Reader::getIsVisited() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<67>() * ::capnp::ELEMENTS);
}

inline bool QuadParkingSlot::Builder::getIsVisited() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<67>() * ::capnp::ELEMENTS);
}
inline void QuadParkingSlot::Builder::setIsVisited(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<67>() * ::capnp::ELEMENTS, value);
}

inline bool QuadParkingSlot::Reader::hasPTl() const {
  return !_reader.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS).isNull();
}
inline bool QuadParkingSlot::Builder::hasPTl() {
  return !_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Reader QuadParkingSlot::Reader::getPTl() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::get(_reader.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Builder QuadParkingSlot::Builder::getPTl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::get(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Pipeline QuadParkingSlot::Pipeline::getPTl() {
  return  ::senseAD::msg::avp_perception::ApproxBoxPoints::Pipeline(_typeless.getPointerField(8));
}
#endif  // !CAPNP_LITE
inline void QuadParkingSlot::Builder::setPTl( ::senseAD::msg::avp_perception::ApproxBoxPoints::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::set(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Builder QuadParkingSlot::Builder::initPTl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::init(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}
inline void QuadParkingSlot::Builder::adoptPTl(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::ApproxBoxPoints>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::adopt(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::ApproxBoxPoints> QuadParkingSlot::Builder::disownPTl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::disown(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}

inline bool QuadParkingSlot::Reader::hasPTr() const {
  return !_reader.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS).isNull();
}
inline bool QuadParkingSlot::Builder::hasPTr() {
  return !_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Reader QuadParkingSlot::Reader::getPTr() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::get(_reader.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Builder QuadParkingSlot::Builder::getPTr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::get(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Pipeline QuadParkingSlot::Pipeline::getPTr() {
  return  ::senseAD::msg::avp_perception::ApproxBoxPoints::Pipeline(_typeless.getPointerField(9));
}
#endif  // !CAPNP_LITE
inline void QuadParkingSlot::Builder::setPTr( ::senseAD::msg::avp_perception::ApproxBoxPoints::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::set(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Builder QuadParkingSlot::Builder::initPTr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::init(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}
inline void QuadParkingSlot::Builder::adoptPTr(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::ApproxBoxPoints>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::adopt(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::ApproxBoxPoints> QuadParkingSlot::Builder::disownPTr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::disown(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}

inline bool QuadParkingSlot::Reader::hasPBl() const {
  return !_reader.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS).isNull();
}
inline bool QuadParkingSlot::Builder::hasPBl() {
  return !_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Reader QuadParkingSlot::Reader::getPBl() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::get(_reader.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Builder QuadParkingSlot::Builder::getPBl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::get(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Pipeline QuadParkingSlot::Pipeline::getPBl() {
  return  ::senseAD::msg::avp_perception::ApproxBoxPoints::Pipeline(_typeless.getPointerField(10));
}
#endif  // !CAPNP_LITE
inline void QuadParkingSlot::Builder::setPBl( ::senseAD::msg::avp_perception::ApproxBoxPoints::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::set(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Builder QuadParkingSlot::Builder::initPBl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::init(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}
inline void QuadParkingSlot::Builder::adoptPBl(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::ApproxBoxPoints>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::adopt(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::ApproxBoxPoints> QuadParkingSlot::Builder::disownPBl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::disown(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}

inline bool QuadParkingSlot::Reader::hasPBr() const {
  return !_reader.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS).isNull();
}
inline bool QuadParkingSlot::Builder::hasPBr() {
  return !_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Reader QuadParkingSlot::Reader::getPBr() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::get(_reader.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Builder QuadParkingSlot::Builder::getPBr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::get(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Pipeline QuadParkingSlot::Pipeline::getPBr() {
  return  ::senseAD::msg::avp_perception::ApproxBoxPoints::Pipeline(_typeless.getPointerField(11));
}
#endif  // !CAPNP_LITE
inline void QuadParkingSlot::Builder::setPBr( ::senseAD::msg::avp_perception::ApproxBoxPoints::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::set(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::ApproxBoxPoints::Builder QuadParkingSlot::Builder::initPBr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::init(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS));
}
inline void QuadParkingSlot::Builder::adoptPBr(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::ApproxBoxPoints>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::adopt(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::ApproxBoxPoints> QuadParkingSlot::Builder::disownPBr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::ApproxBoxPoints>::disown(_builder.getPointerField(
      ::capnp::bounded<11>() * ::capnp::POINTERS));
}

inline bool QuadParkingSlot::Reader::hasOriTl() const {
  return !_reader.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS).isNull();
}
inline bool QuadParkingSlot::Builder::hasOriTl() {
  return !_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader QuadParkingSlot::Reader::getOriTl() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::getOriTl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline QuadParkingSlot::Pipeline::getOriTl() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(12));
}
#endif  // !CAPNP_LITE
inline void QuadParkingSlot::Builder::setOriTl( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::initOriTl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS));
}
inline void QuadParkingSlot::Builder::adoptOriTl(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> QuadParkingSlot::Builder::disownOriTl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<12>() * ::capnp::POINTERS));
}

inline bool QuadParkingSlot::Reader::hasOriTr() const {
  return !_reader.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS).isNull();
}
inline bool QuadParkingSlot::Builder::hasOriTr() {
  return !_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader QuadParkingSlot::Reader::getOriTr() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::getOriTr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline QuadParkingSlot::Pipeline::getOriTr() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(13));
}
#endif  // !CAPNP_LITE
inline void QuadParkingSlot::Builder::setOriTr( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::initOriTr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS));
}
inline void QuadParkingSlot::Builder::adoptOriTr(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> QuadParkingSlot::Builder::disownOriTr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<13>() * ::capnp::POINTERS));
}

inline bool QuadParkingSlot::Reader::hasOriBl() const {
  return !_reader.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS).isNull();
}
inline bool QuadParkingSlot::Builder::hasOriBl() {
  return !_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader QuadParkingSlot::Reader::getOriBl() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::getOriBl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline QuadParkingSlot::Pipeline::getOriBl() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(14));
}
#endif  // !CAPNP_LITE
inline void QuadParkingSlot::Builder::setOriBl( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::initOriBl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS));
}
inline void QuadParkingSlot::Builder::adoptOriBl(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> QuadParkingSlot::Builder::disownOriBl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<14>() * ::capnp::POINTERS));
}

inline bool QuadParkingSlot::Reader::hasOriBr() const {
  return !_reader.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS).isNull();
}
inline bool QuadParkingSlot::Builder::hasOriBr() {
  return !_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_perception::Point2f::Reader QuadParkingSlot::Reader::getOriBr() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_reader.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::getOriBr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::get(_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_perception::Point2f::Pipeline QuadParkingSlot::Pipeline::getOriBr() {
  return  ::senseAD::msg::avp_perception::Point2f::Pipeline(_typeless.getPointerField(15));
}
#endif  // !CAPNP_LITE
inline void QuadParkingSlot::Builder::setOriBr( ::senseAD::msg::avp_perception::Point2f::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::set(_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_perception::Point2f::Builder QuadParkingSlot::Builder::initOriBr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::init(_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS));
}
inline void QuadParkingSlot::Builder::adoptOriBr(
    ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::adopt(_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_perception::Point2f> QuadParkingSlot::Builder::disownOriBr() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_perception::Point2f>::disown(_builder.getPointerField(
      ::capnp::bounded<15>() * ::capnp::POINTERS));
}

}  // namespace
}  // namespace
}  // namespace

CAPNP_END_HEADER

