// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: ins.capnp

#pragma once

#include <capnp/generated-header-support.h>
#include <kj/windows-sanity.h>

#if CAPNP_VERSION != 10002
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif

#include <ad_msg_idl/ad_gac/radar_a_cm_data_type.capnp.h>

CAPNP_BEGIN_HEADER

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(c5df35011a53747c);
CAPNP_DECLARE_SCHEMA(a3ad902ccc654024);
CAPNP_DECLARE_SCHEMA(cbc04973bd80c4e1);
CAPNP_DECLARE_SCHEMA(adf799a20ce7e2e4);

}  // namespace schemas
}  // namespace capnp

namespace gac {
namespace rscl {

struct GeometryPoit {
  GeometryPoit() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(c5df35011a53747c, 3, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct GnssInfo {
  GnssInfo() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(a3ad902ccc654024, 13, 9)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct InsInfo {
  InsInfo() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(cbc04973bd80c4e1, 14, 11)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct ImuInfo {
  ImuInfo() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(adf799a20ce7e2e4, 1, 3)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

class GeometryPoit::Reader {
public:
  typedef GeometryPoit Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline double getX() const;

  inline double getY() const;

  inline double getZ() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class GeometryPoit::Builder {
public:
  typedef GeometryPoit Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline double getX();
  inline void setX(double value);

  inline double getY();
  inline void setY(double value);

  inline double getZ();
  inline void setZ(double value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class GeometryPoit::Pipeline {
public:
  typedef GeometryPoit Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class GnssInfo::Reader {
public:
  typedef GnssInfo Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasHeader() const;
  inline  ::gac::rscl::Header::Reader getHeader() const;

  inline double getLongitude() const;

  inline double getLatitude() const;

  inline double getElevation() const;

  inline bool hasUtmPosition() const;
  inline  ::gac::rscl::GeometryPoit::Reader getUtmPosition() const;

  inline  ::int32_t getUtmZoneNum() const;

  inline  ::uint8_t getUtmZoneChar() const;

  inline bool hasAttitude() const;
  inline  ::gac::rscl::GeometryPoit::Reader getAttitude() const;

  inline bool hasLinearVelocity() const;
  inline  ::gac::rscl::GeometryPoit::Reader getLinearVelocity() const;

  inline bool hasSdPosition() const;
  inline  ::gac::rscl::GeometryPoit::Reader getSdPosition() const;

  inline bool hasSdVelocity() const;
  inline  ::gac::rscl::GeometryPoit::Reader getSdVelocity() const;

  inline bool hasSdAttitude() const;
  inline  ::gac::rscl::GeometryPoit::Reader getSdAttitude() const;

  inline double getCep68() const;

  inline double getCep95() const;

  inline double getSecond() const;

  inline  ::int32_t getSatUseNum() const;

  inline  ::int32_t getSatInViewNum() const;

  inline  ::uint16_t getSolutionStatus() const;

  inline  ::uint16_t getPositionType() const;

  inline float getPDop() const;

  inline float getHDop() const;

  inline float getVDop() const;

  inline bool hasAttitudeDual() const;
  inline  ::gac::rscl::GeometryPoit::Reader getAttitudeDual() const;

  inline bool hasSdAngleDual() const;
  inline  ::gac::rscl::GeometryPoit::Reader getSdAngleDual() const;

  inline double getBaseLineLengthDual() const;

  inline  ::int32_t getSolutionStatusDual() const;

  inline  ::int32_t getPositionTypeDual() const;

  inline  ::int32_t getSolutionSourceDual() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class GnssInfo::Builder {
public:
  typedef GnssInfo Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasHeader();
  inline  ::gac::rscl::Header::Builder getHeader();
  inline void setHeader( ::gac::rscl::Header::Reader value);
  inline  ::gac::rscl::Header::Builder initHeader();
  inline void adoptHeader(::capnp::Orphan< ::gac::rscl::Header>&& value);
  inline ::capnp::Orphan< ::gac::rscl::Header> disownHeader();

  inline double getLongitude();
  inline void setLongitude(double value);

  inline double getLatitude();
  inline void setLatitude(double value);

  inline double getElevation();
  inline void setElevation(double value);

  inline bool hasUtmPosition();
  inline  ::gac::rscl::GeometryPoit::Builder getUtmPosition();
  inline void setUtmPosition( ::gac::rscl::GeometryPoit::Reader value);
  inline  ::gac::rscl::GeometryPoit::Builder initUtmPosition();
  inline void adoptUtmPosition(::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value);
  inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> disownUtmPosition();

  inline  ::int32_t getUtmZoneNum();
  inline void setUtmZoneNum( ::int32_t value);

  inline  ::uint8_t getUtmZoneChar();
  inline void setUtmZoneChar( ::uint8_t value);

  inline bool hasAttitude();
  inline  ::gac::rscl::GeometryPoit::Builder getAttitude();
  inline void setAttitude( ::gac::rscl::GeometryPoit::Reader value);
  inline  ::gac::rscl::GeometryPoit::Builder initAttitude();
  inline void adoptAttitude(::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value);
  inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> disownAttitude();

  inline bool hasLinearVelocity();
  inline  ::gac::rscl::GeometryPoit::Builder getLinearVelocity();
  inline void setLinearVelocity( ::gac::rscl::GeometryPoit::Reader value);
  inline  ::gac::rscl::GeometryPoit::Builder initLinearVelocity();
  inline void adoptLinearVelocity(::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value);
  inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> disownLinearVelocity();

  inline bool hasSdPosition();
  inline  ::gac::rscl::GeometryPoit::Builder getSdPosition();
  inline void setSdPosition( ::gac::rscl::GeometryPoit::Reader value);
  inline  ::gac::rscl::GeometryPoit::Builder initSdPosition();
  inline void adoptSdPosition(::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value);
  inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> disownSdPosition();

  inline bool hasSdVelocity();
  inline  ::gac::rscl::GeometryPoit::Builder getSdVelocity();
  inline void setSdVelocity( ::gac::rscl::GeometryPoit::Reader value);
  inline  ::gac::rscl::GeometryPoit::Builder initSdVelocity();
  inline void adoptSdVelocity(::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value);
  inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> disownSdVelocity();

  inline bool hasSdAttitude();
  inline  ::gac::rscl::GeometryPoit::Builder getSdAttitude();
  inline void setSdAttitude( ::gac::rscl::GeometryPoit::Reader value);
  inline  ::gac::rscl::GeometryPoit::Builder initSdAttitude();
  inline void adoptSdAttitude(::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value);
  inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> disownSdAttitude();

  inline double getCep68();
  inline void setCep68(double value);

  inline double getCep95();
  inline void setCep95(double value);

  inline double getSecond();
  inline void setSecond(double value);

  inline  ::int32_t getSatUseNum();
  inline void setSatUseNum( ::int32_t value);

  inline  ::int32_t getSatInViewNum();
  inline void setSatInViewNum( ::int32_t value);

  inline  ::uint16_t getSolutionStatus();
  inline void setSolutionStatus( ::uint16_t value);

  inline  ::uint16_t getPositionType();
  inline void setPositionType( ::uint16_t value);

  inline float getPDop();
  inline void setPDop(float value);

  inline float getHDop();
  inline void setHDop(float value);

  inline float getVDop();
  inline void setVDop(float value);

  inline bool hasAttitudeDual();
  inline  ::gac::rscl::GeometryPoit::Builder getAttitudeDual();
  inline void setAttitudeDual( ::gac::rscl::GeometryPoit::Reader value);
  inline  ::gac::rscl::GeometryPoit::Builder initAttitudeDual();
  inline void adoptAttitudeDual(::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value);
  inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> disownAttitudeDual();

  inline bool hasSdAngleDual();
  inline  ::gac::rscl::GeometryPoit::Builder getSdAngleDual();
  inline void setSdAngleDual( ::gac::rscl::GeometryPoit::Reader value);
  inline  ::gac::rscl::GeometryPoit::Builder initSdAngleDual();
  inline void adoptSdAngleDual(::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value);
  inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> disownSdAngleDual();

  inline double getBaseLineLengthDual();
  inline void setBaseLineLengthDual(double value);

  inline  ::int32_t getSolutionStatusDual();
  inline void setSolutionStatusDual( ::int32_t value);

  inline  ::int32_t getPositionTypeDual();
  inline void setPositionTypeDual( ::int32_t value);

  inline  ::int32_t getSolutionSourceDual();
  inline void setSolutionSourceDual( ::int32_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class GnssInfo::Pipeline {
public:
  typedef GnssInfo Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::gac::rscl::Header::Pipeline getHeader();
  inline  ::gac::rscl::GeometryPoit::Pipeline getUtmPosition();
  inline  ::gac::rscl::GeometryPoit::Pipeline getAttitude();
  inline  ::gac::rscl::GeometryPoit::Pipeline getLinearVelocity();
  inline  ::gac::rscl::GeometryPoit::Pipeline getSdPosition();
  inline  ::gac::rscl::GeometryPoit::Pipeline getSdVelocity();
  inline  ::gac::rscl::GeometryPoit::Pipeline getSdAttitude();
  inline  ::gac::rscl::GeometryPoit::Pipeline getAttitudeDual();
  inline  ::gac::rscl::GeometryPoit::Pipeline getSdAngleDual();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class InsInfo::Reader {
public:
  typedef InsInfo Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasHeader() const;
  inline  ::gac::rscl::Header::Reader getHeader() const;

  inline double getLongitude() const;

  inline double getLatitude() const;

  inline double getElevation() const;

  inline bool hasUtmPosition() const;
  inline  ::gac::rscl::GeometryPoit::Reader getUtmPosition() const;

  inline  ::int32_t getUtmZoneNum() const;

  inline  ::uint8_t getUtmZoneChar() const;

  inline bool hasAttitude() const;
  inline  ::gac::rscl::GeometryPoit::Reader getAttitude() const;

  inline bool hasLinearVelocity() const;
  inline  ::gac::rscl::GeometryPoit::Reader getLinearVelocity() const;

  inline bool hasSdPosition() const;
  inline  ::gac::rscl::GeometryPoit::Reader getSdPosition() const;

  inline bool hasSdVelocity() const;
  inline  ::gac::rscl::GeometryPoit::Reader getSdVelocity() const;

  inline bool hasSdAttitude() const;
  inline  ::gac::rscl::GeometryPoit::Reader getSdAttitude() const;

  inline double getCep68() const;

  inline double getCep95() const;

  inline double getSecond() const;

  inline  ::int32_t getSatUseNum() const;

  inline  ::int32_t getSatInViewNum() const;

  inline  ::uint16_t getSolutionStatus() const;

  inline  ::uint16_t getPositionType() const;

  inline float getPDop() const;

  inline float getHDop() const;

  inline float getVDop() const;

  inline bool hasAttitudeDual() const;
  inline  ::gac::rscl::GeometryPoit::Reader getAttitudeDual() const;

  inline bool hasSdAngleDual() const;
  inline  ::gac::rscl::GeometryPoit::Reader getSdAngleDual() const;

  inline double getBaseLineLengthDual() const;

  inline  ::int32_t getSolutionStatusDual() const;

  inline  ::int32_t getPositionTypeDual() const;

  inline  ::int32_t getSolutionSourceDual() const;

  inline  ::int32_t getAoc() const;

  inline  ::int32_t getRtkBaseline() const;

  inline bool hasAngularVelocity() const;
  inline  ::gac::rscl::GeometryPoit::Reader getAngularVelocity() const;

  inline bool hasAcceleration() const;
  inline  ::gac::rscl::GeometryPoit::Reader getAcceleration() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class InsInfo::Builder {
public:
  typedef InsInfo Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasHeader();
  inline  ::gac::rscl::Header::Builder getHeader();
  inline void setHeader( ::gac::rscl::Header::Reader value);
  inline  ::gac::rscl::Header::Builder initHeader();
  inline void adoptHeader(::capnp::Orphan< ::gac::rscl::Header>&& value);
  inline ::capnp::Orphan< ::gac::rscl::Header> disownHeader();

  inline double getLongitude();
  inline void setLongitude(double value);

  inline double getLatitude();
  inline void setLatitude(double value);

  inline double getElevation();
  inline void setElevation(double value);

  inline bool hasUtmPosition();
  inline  ::gac::rscl::GeometryPoit::Builder getUtmPosition();
  inline void setUtmPosition( ::gac::rscl::GeometryPoit::Reader value);
  inline  ::gac::rscl::GeometryPoit::Builder initUtmPosition();
  inline void adoptUtmPosition(::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value);
  inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> disownUtmPosition();

  inline  ::int32_t getUtmZoneNum();
  inline void setUtmZoneNum( ::int32_t value);

  inline  ::uint8_t getUtmZoneChar();
  inline void setUtmZoneChar( ::uint8_t value);

  inline bool hasAttitude();
  inline  ::gac::rscl::GeometryPoit::Builder getAttitude();
  inline void setAttitude( ::gac::rscl::GeometryPoit::Reader value);
  inline  ::gac::rscl::GeometryPoit::Builder initAttitude();
  inline void adoptAttitude(::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value);
  inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> disownAttitude();

  inline bool hasLinearVelocity();
  inline  ::gac::rscl::GeometryPoit::Builder getLinearVelocity();
  inline void setLinearVelocity( ::gac::rscl::GeometryPoit::Reader value);
  inline  ::gac::rscl::GeometryPoit::Builder initLinearVelocity();
  inline void adoptLinearVelocity(::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value);
  inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> disownLinearVelocity();

  inline bool hasSdPosition();
  inline  ::gac::rscl::GeometryPoit::Builder getSdPosition();
  inline void setSdPosition( ::gac::rscl::GeometryPoit::Reader value);
  inline  ::gac::rscl::GeometryPoit::Builder initSdPosition();
  inline void adoptSdPosition(::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value);
  inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> disownSdPosition();

  inline bool hasSdVelocity();
  inline  ::gac::rscl::GeometryPoit::Builder getSdVelocity();
  inline void setSdVelocity( ::gac::rscl::GeometryPoit::Reader value);
  inline  ::gac::rscl::GeometryPoit::Builder initSdVelocity();
  inline void adoptSdVelocity(::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value);
  inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> disownSdVelocity();

  inline bool hasSdAttitude();
  inline  ::gac::rscl::GeometryPoit::Builder getSdAttitude();
  inline void setSdAttitude( ::gac::rscl::GeometryPoit::Reader value);
  inline  ::gac::rscl::GeometryPoit::Builder initSdAttitude();
  inline void adoptSdAttitude(::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value);
  inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> disownSdAttitude();

  inline double getCep68();
  inline void setCep68(double value);

  inline double getCep95();
  inline void setCep95(double value);

  inline double getSecond();
  inline void setSecond(double value);

  inline  ::int32_t getSatUseNum();
  inline void setSatUseNum( ::int32_t value);

  inline  ::int32_t getSatInViewNum();
  inline void setSatInViewNum( ::int32_t value);

  inline  ::uint16_t getSolutionStatus();
  inline void setSolutionStatus( ::uint16_t value);

  inline  ::uint16_t getPositionType();
  inline void setPositionType( ::uint16_t value);

  inline float getPDop();
  inline void setPDop(float value);

  inline float getHDop();
  inline void setHDop(float value);

  inline float getVDop();
  inline void setVDop(float value);

  inline bool hasAttitudeDual();
  inline  ::gac::rscl::GeometryPoit::Builder getAttitudeDual();
  inline void setAttitudeDual( ::gac::rscl::GeometryPoit::Reader value);
  inline  ::gac::rscl::GeometryPoit::Builder initAttitudeDual();
  inline void adoptAttitudeDual(::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value);
  inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> disownAttitudeDual();

  inline bool hasSdAngleDual();
  inline  ::gac::rscl::GeometryPoit::Builder getSdAngleDual();
  inline void setSdAngleDual( ::gac::rscl::GeometryPoit::Reader value);
  inline  ::gac::rscl::GeometryPoit::Builder initSdAngleDual();
  inline void adoptSdAngleDual(::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value);
  inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> disownSdAngleDual();

  inline double getBaseLineLengthDual();
  inline void setBaseLineLengthDual(double value);

  inline  ::int32_t getSolutionStatusDual();
  inline void setSolutionStatusDual( ::int32_t value);

  inline  ::int32_t getPositionTypeDual();
  inline void setPositionTypeDual( ::int32_t value);

  inline  ::int32_t getSolutionSourceDual();
  inline void setSolutionSourceDual( ::int32_t value);

  inline  ::int32_t getAoc();
  inline void setAoc( ::int32_t value);

  inline  ::int32_t getRtkBaseline();
  inline void setRtkBaseline( ::int32_t value);

  inline bool hasAngularVelocity();
  inline  ::gac::rscl::GeometryPoit::Builder getAngularVelocity();
  inline void setAngularVelocity( ::gac::rscl::GeometryPoit::Reader value);
  inline  ::gac::rscl::GeometryPoit::Builder initAngularVelocity();
  inline void adoptAngularVelocity(::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value);
  inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> disownAngularVelocity();

  inline bool hasAcceleration();
  inline  ::gac::rscl::GeometryPoit::Builder getAcceleration();
  inline void setAcceleration( ::gac::rscl::GeometryPoit::Reader value);
  inline  ::gac::rscl::GeometryPoit::Builder initAcceleration();
  inline void adoptAcceleration(::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value);
  inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> disownAcceleration();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class InsInfo::Pipeline {
public:
  typedef InsInfo Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::gac::rscl::Header::Pipeline getHeader();
  inline  ::gac::rscl::GeometryPoit::Pipeline getUtmPosition();
  inline  ::gac::rscl::GeometryPoit::Pipeline getAttitude();
  inline  ::gac::rscl::GeometryPoit::Pipeline getLinearVelocity();
  inline  ::gac::rscl::GeometryPoit::Pipeline getSdPosition();
  inline  ::gac::rscl::GeometryPoit::Pipeline getSdVelocity();
  inline  ::gac::rscl::GeometryPoit::Pipeline getSdAttitude();
  inline  ::gac::rscl::GeometryPoit::Pipeline getAttitudeDual();
  inline  ::gac::rscl::GeometryPoit::Pipeline getSdAngleDual();
  inline  ::gac::rscl::GeometryPoit::Pipeline getAngularVelocity();
  inline  ::gac::rscl::GeometryPoit::Pipeline getAcceleration();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class ImuInfo::Reader {
public:
  typedef ImuInfo Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasHeader() const;
  inline  ::gac::rscl::Header::Reader getHeader() const;

  inline bool hasAngularVelocity() const;
  inline  ::gac::rscl::GeometryPoit::Reader getAngularVelocity() const;

  inline bool hasAcceleration() const;
  inline  ::gac::rscl::GeometryPoit::Reader getAcceleration() const;

  inline  ::uint16_t getImuStatus() const;

  inline float getTemperature() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class ImuInfo::Builder {
public:
  typedef ImuInfo Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasHeader();
  inline  ::gac::rscl::Header::Builder getHeader();
  inline void setHeader( ::gac::rscl::Header::Reader value);
  inline  ::gac::rscl::Header::Builder initHeader();
  inline void adoptHeader(::capnp::Orphan< ::gac::rscl::Header>&& value);
  inline ::capnp::Orphan< ::gac::rscl::Header> disownHeader();

  inline bool hasAngularVelocity();
  inline  ::gac::rscl::GeometryPoit::Builder getAngularVelocity();
  inline void setAngularVelocity( ::gac::rscl::GeometryPoit::Reader value);
  inline  ::gac::rscl::GeometryPoit::Builder initAngularVelocity();
  inline void adoptAngularVelocity(::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value);
  inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> disownAngularVelocity();

  inline bool hasAcceleration();
  inline  ::gac::rscl::GeometryPoit::Builder getAcceleration();
  inline void setAcceleration( ::gac::rscl::GeometryPoit::Reader value);
  inline  ::gac::rscl::GeometryPoit::Builder initAcceleration();
  inline void adoptAcceleration(::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value);
  inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> disownAcceleration();

  inline  ::uint16_t getImuStatus();
  inline void setImuStatus( ::uint16_t value);

  inline float getTemperature();
  inline void setTemperature(float value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class ImuInfo::Pipeline {
public:
  typedef ImuInfo Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::gac::rscl::Header::Pipeline getHeader();
  inline  ::gac::rscl::GeometryPoit::Pipeline getAngularVelocity();
  inline  ::gac::rscl::GeometryPoit::Pipeline getAcceleration();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

inline double GeometryPoit::Reader::getX() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline double GeometryPoit::Builder::getX() {
  return _builder.getDataField<double>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void GeometryPoit::Builder::setX(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline double GeometryPoit::Reader::getY() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline double GeometryPoit::Builder::getY() {
  return _builder.getDataField<double>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void GeometryPoit::Builder::setY(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline double GeometryPoit::Reader::getZ() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline double GeometryPoit::Builder::getZ() {
  return _builder.getDataField<double>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void GeometryPoit::Builder::setZ(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline bool GnssInfo::Reader::hasHeader() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool GnssInfo::Builder::hasHeader() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::Header::Reader GnssInfo::Reader::getHeader() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::Header>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::Header::Builder GnssInfo::Builder::getHeader() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::Header>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::Header::Pipeline GnssInfo::Pipeline::getHeader() {
  return  ::gac::rscl::Header::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void GnssInfo::Builder::setHeader( ::gac::rscl::Header::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::Header>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::Header::Builder GnssInfo::Builder::initHeader() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::Header>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void GnssInfo::Builder::adoptHeader(
    ::capnp::Orphan< ::gac::rscl::Header>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::Header>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::Header> GnssInfo::Builder::disownHeader() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::Header>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline double GnssInfo::Reader::getLongitude() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline double GnssInfo::Builder::getLongitude() {
  return _builder.getDataField<double>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void GnssInfo::Builder::setLongitude(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline double GnssInfo::Reader::getLatitude() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline double GnssInfo::Builder::getLatitude() {
  return _builder.getDataField<double>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void GnssInfo::Builder::setLatitude(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline double GnssInfo::Reader::getElevation() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline double GnssInfo::Builder::getElevation() {
  return _builder.getDataField<double>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void GnssInfo::Builder::setElevation(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline bool GnssInfo::Reader::hasUtmPosition() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool GnssInfo::Builder::hasUtmPosition() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::GeometryPoit::Reader GnssInfo::Reader::getUtmPosition() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::GeometryPoit::Builder GnssInfo::Builder::getUtmPosition() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::GeometryPoit::Pipeline GnssInfo::Pipeline::getUtmPosition() {
  return  ::gac::rscl::GeometryPoit::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void GnssInfo::Builder::setUtmPosition( ::gac::rscl::GeometryPoit::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::GeometryPoit::Builder GnssInfo::Builder::initUtmPosition() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void GnssInfo::Builder::adoptUtmPosition(
    ::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> GnssInfo::Builder::disownUtmPosition() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline  ::int32_t GnssInfo::Reader::getUtmZoneNum() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::int32_t GnssInfo::Builder::getUtmZoneNum() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void GnssInfo::Builder::setUtmZoneNum( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t GnssInfo::Reader::getUtmZoneChar() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<28>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t GnssInfo::Builder::getUtmZoneChar() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<28>() * ::capnp::ELEMENTS);
}
inline void GnssInfo::Builder::setUtmZoneChar( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<28>() * ::capnp::ELEMENTS, value);
}

inline bool GnssInfo::Reader::hasAttitude() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool GnssInfo::Builder::hasAttitude() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::GeometryPoit::Reader GnssInfo::Reader::getAttitude() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::GeometryPoit::Builder GnssInfo::Builder::getAttitude() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::GeometryPoit::Pipeline GnssInfo::Pipeline::getAttitude() {
  return  ::gac::rscl::GeometryPoit::Pipeline(_typeless.getPointerField(2));
}
#endif  // !CAPNP_LITE
inline void GnssInfo::Builder::setAttitude( ::gac::rscl::GeometryPoit::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::GeometryPoit::Builder GnssInfo::Builder::initAttitude() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void GnssInfo::Builder::adoptAttitude(
    ::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> GnssInfo::Builder::disownAttitude() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool GnssInfo::Reader::hasLinearVelocity() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool GnssInfo::Builder::hasLinearVelocity() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::GeometryPoit::Reader GnssInfo::Reader::getLinearVelocity() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::GeometryPoit::Builder GnssInfo::Builder::getLinearVelocity() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::GeometryPoit::Pipeline GnssInfo::Pipeline::getLinearVelocity() {
  return  ::gac::rscl::GeometryPoit::Pipeline(_typeless.getPointerField(3));
}
#endif  // !CAPNP_LITE
inline void GnssInfo::Builder::setLinearVelocity( ::gac::rscl::GeometryPoit::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::GeometryPoit::Builder GnssInfo::Builder::initLinearVelocity() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void GnssInfo::Builder::adoptLinearVelocity(
    ::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> GnssInfo::Builder::disownLinearVelocity() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline bool GnssInfo::Reader::hasSdPosition() const {
  return !_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline bool GnssInfo::Builder::hasSdPosition() {
  return !_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::GeometryPoit::Reader GnssInfo::Reader::getSdPosition() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::GeometryPoit::Builder GnssInfo::Builder::getSdPosition() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::GeometryPoit::Pipeline GnssInfo::Pipeline::getSdPosition() {
  return  ::gac::rscl::GeometryPoit::Pipeline(_typeless.getPointerField(4));
}
#endif  // !CAPNP_LITE
inline void GnssInfo::Builder::setSdPosition( ::gac::rscl::GeometryPoit::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::set(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::GeometryPoit::Builder GnssInfo::Builder::initSdPosition() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::init(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline void GnssInfo::Builder::adoptSdPosition(
    ::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::adopt(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> GnssInfo::Builder::disownSdPosition() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::disown(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}

inline bool GnssInfo::Reader::hasSdVelocity() const {
  return !_reader.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS).isNull();
}
inline bool GnssInfo::Builder::hasSdVelocity() {
  return !_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::GeometryPoit::Reader GnssInfo::Reader::getSdVelocity() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_reader.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::GeometryPoit::Builder GnssInfo::Builder::getSdVelocity() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::GeometryPoit::Pipeline GnssInfo::Pipeline::getSdVelocity() {
  return  ::gac::rscl::GeometryPoit::Pipeline(_typeless.getPointerField(5));
}
#endif  // !CAPNP_LITE
inline void GnssInfo::Builder::setSdVelocity( ::gac::rscl::GeometryPoit::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::set(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::GeometryPoit::Builder GnssInfo::Builder::initSdVelocity() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::init(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
inline void GnssInfo::Builder::adoptSdVelocity(
    ::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::adopt(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> GnssInfo::Builder::disownSdVelocity() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::disown(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}

inline bool GnssInfo::Reader::hasSdAttitude() const {
  return !_reader.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS).isNull();
}
inline bool GnssInfo::Builder::hasSdAttitude() {
  return !_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::GeometryPoit::Reader GnssInfo::Reader::getSdAttitude() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_reader.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::GeometryPoit::Builder GnssInfo::Builder::getSdAttitude() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::GeometryPoit::Pipeline GnssInfo::Pipeline::getSdAttitude() {
  return  ::gac::rscl::GeometryPoit::Pipeline(_typeless.getPointerField(6));
}
#endif  // !CAPNP_LITE
inline void GnssInfo::Builder::setSdAttitude( ::gac::rscl::GeometryPoit::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::set(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::GeometryPoit::Builder GnssInfo::Builder::initSdAttitude() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::init(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}
inline void GnssInfo::Builder::adoptSdAttitude(
    ::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::adopt(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> GnssInfo::Builder::disownSdAttitude() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::disown(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}

inline double GnssInfo::Reader::getCep68() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline double GnssInfo::Builder::getCep68() {
  return _builder.getDataField<double>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void GnssInfo::Builder::setCep68(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline double GnssInfo::Reader::getCep95() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline double GnssInfo::Builder::getCep95() {
  return _builder.getDataField<double>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void GnssInfo::Builder::setCep95(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline double GnssInfo::Reader::getSecond() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline double GnssInfo::Builder::getSecond() {
  return _builder.getDataField<double>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void GnssInfo::Builder::setSecond(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t GnssInfo::Reader::getSatUseNum() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}

inline  ::int32_t GnssInfo::Builder::getSatUseNum() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}
inline void GnssInfo::Builder::setSatUseNum( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t GnssInfo::Reader::getSatInViewNum() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}

inline  ::int32_t GnssInfo::Builder::getSatInViewNum() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}
inline void GnssInfo::Builder::setSatInViewNum( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t GnssInfo::Reader::getSolutionStatus() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t GnssInfo::Builder::getSolutionStatus() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}
inline void GnssInfo::Builder::setSolutionStatus( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t GnssInfo::Reader::getPositionType() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<32>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t GnssInfo::Builder::getPositionType() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<32>() * ::capnp::ELEMENTS);
}
inline void GnssInfo::Builder::setPositionType( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<32>() * ::capnp::ELEMENTS, value);
}

inline float GnssInfo::Reader::getPDop() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}

inline float GnssInfo::Builder::getPDop() {
  return _builder.getDataField<float>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}
inline void GnssInfo::Builder::setPDop(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS, value);
}

inline float GnssInfo::Reader::getHDop() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS);
}

inline float GnssInfo::Builder::getHDop() {
  return _builder.getDataField<float>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS);
}
inline void GnssInfo::Builder::setHDop(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS, value);
}

inline float GnssInfo::Reader::getVDop() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS);
}

inline float GnssInfo::Builder::getVDop() {
  return _builder.getDataField<float>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS);
}
inline void GnssInfo::Builder::setVDop(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS, value);
}

inline bool GnssInfo::Reader::hasAttitudeDual() const {
  return !_reader.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS).isNull();
}
inline bool GnssInfo::Builder::hasAttitudeDual() {
  return !_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::GeometryPoit::Reader GnssInfo::Reader::getAttitudeDual() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_reader.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::GeometryPoit::Builder GnssInfo::Builder::getAttitudeDual() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::GeometryPoit::Pipeline GnssInfo::Pipeline::getAttitudeDual() {
  return  ::gac::rscl::GeometryPoit::Pipeline(_typeless.getPointerField(7));
}
#endif  // !CAPNP_LITE
inline void GnssInfo::Builder::setAttitudeDual( ::gac::rscl::GeometryPoit::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::set(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::GeometryPoit::Builder GnssInfo::Builder::initAttitudeDual() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::init(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}
inline void GnssInfo::Builder::adoptAttitudeDual(
    ::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::adopt(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> GnssInfo::Builder::disownAttitudeDual() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::disown(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}

inline bool GnssInfo::Reader::hasSdAngleDual() const {
  return !_reader.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS).isNull();
}
inline bool GnssInfo::Builder::hasSdAngleDual() {
  return !_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::GeometryPoit::Reader GnssInfo::Reader::getSdAngleDual() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_reader.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::GeometryPoit::Builder GnssInfo::Builder::getSdAngleDual() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::GeometryPoit::Pipeline GnssInfo::Pipeline::getSdAngleDual() {
  return  ::gac::rscl::GeometryPoit::Pipeline(_typeless.getPointerField(8));
}
#endif  // !CAPNP_LITE
inline void GnssInfo::Builder::setSdAngleDual( ::gac::rscl::GeometryPoit::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::set(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::GeometryPoit::Builder GnssInfo::Builder::initSdAngleDual() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::init(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}
inline void GnssInfo::Builder::adoptSdAngleDual(
    ::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::adopt(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> GnssInfo::Builder::disownSdAngleDual() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::disown(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}

inline double GnssInfo::Reader::getBaseLineLengthDual() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}

inline double GnssInfo::Builder::getBaseLineLengthDual() {
  return _builder.getDataField<double>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}
inline void GnssInfo::Builder::setBaseLineLengthDual(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t GnssInfo::Reader::getSolutionStatusDual() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<22>() * ::capnp::ELEMENTS);
}

inline  ::int32_t GnssInfo::Builder::getSolutionStatusDual() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<22>() * ::capnp::ELEMENTS);
}
inline void GnssInfo::Builder::setSolutionStatusDual( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<22>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t GnssInfo::Reader::getPositionTypeDual() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<23>() * ::capnp::ELEMENTS);
}

inline  ::int32_t GnssInfo::Builder::getPositionTypeDual() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<23>() * ::capnp::ELEMENTS);
}
inline void GnssInfo::Builder::setPositionTypeDual( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<23>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t GnssInfo::Reader::getSolutionSourceDual() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS);
}

inline  ::int32_t GnssInfo::Builder::getSolutionSourceDual() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS);
}
inline void GnssInfo::Builder::setSolutionSourceDual( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS, value);
}

inline bool InsInfo::Reader::hasHeader() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool InsInfo::Builder::hasHeader() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::Header::Reader InsInfo::Reader::getHeader() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::Header>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::Header::Builder InsInfo::Builder::getHeader() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::Header>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::Header::Pipeline InsInfo::Pipeline::getHeader() {
  return  ::gac::rscl::Header::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void InsInfo::Builder::setHeader( ::gac::rscl::Header::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::Header>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::Header::Builder InsInfo::Builder::initHeader() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::Header>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void InsInfo::Builder::adoptHeader(
    ::capnp::Orphan< ::gac::rscl::Header>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::Header>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::Header> InsInfo::Builder::disownHeader() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::Header>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline double InsInfo::Reader::getLongitude() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline double InsInfo::Builder::getLongitude() {
  return _builder.getDataField<double>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void InsInfo::Builder::setLongitude(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline double InsInfo::Reader::getLatitude() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline double InsInfo::Builder::getLatitude() {
  return _builder.getDataField<double>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void InsInfo::Builder::setLatitude(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline double InsInfo::Reader::getElevation() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline double InsInfo::Builder::getElevation() {
  return _builder.getDataField<double>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void InsInfo::Builder::setElevation(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline bool InsInfo::Reader::hasUtmPosition() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool InsInfo::Builder::hasUtmPosition() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::GeometryPoit::Reader InsInfo::Reader::getUtmPosition() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::GeometryPoit::Builder InsInfo::Builder::getUtmPosition() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::GeometryPoit::Pipeline InsInfo::Pipeline::getUtmPosition() {
  return  ::gac::rscl::GeometryPoit::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void InsInfo::Builder::setUtmPosition( ::gac::rscl::GeometryPoit::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::GeometryPoit::Builder InsInfo::Builder::initUtmPosition() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void InsInfo::Builder::adoptUtmPosition(
    ::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> InsInfo::Builder::disownUtmPosition() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline  ::int32_t InsInfo::Reader::getUtmZoneNum() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::int32_t InsInfo::Builder::getUtmZoneNum() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void InsInfo::Builder::setUtmZoneNum( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t InsInfo::Reader::getUtmZoneChar() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<28>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t InsInfo::Builder::getUtmZoneChar() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<28>() * ::capnp::ELEMENTS);
}
inline void InsInfo::Builder::setUtmZoneChar( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<28>() * ::capnp::ELEMENTS, value);
}

inline bool InsInfo::Reader::hasAttitude() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool InsInfo::Builder::hasAttitude() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::GeometryPoit::Reader InsInfo::Reader::getAttitude() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::GeometryPoit::Builder InsInfo::Builder::getAttitude() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::GeometryPoit::Pipeline InsInfo::Pipeline::getAttitude() {
  return  ::gac::rscl::GeometryPoit::Pipeline(_typeless.getPointerField(2));
}
#endif  // !CAPNP_LITE
inline void InsInfo::Builder::setAttitude( ::gac::rscl::GeometryPoit::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::GeometryPoit::Builder InsInfo::Builder::initAttitude() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void InsInfo::Builder::adoptAttitude(
    ::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> InsInfo::Builder::disownAttitude() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool InsInfo::Reader::hasLinearVelocity() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool InsInfo::Builder::hasLinearVelocity() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::GeometryPoit::Reader InsInfo::Reader::getLinearVelocity() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::GeometryPoit::Builder InsInfo::Builder::getLinearVelocity() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::GeometryPoit::Pipeline InsInfo::Pipeline::getLinearVelocity() {
  return  ::gac::rscl::GeometryPoit::Pipeline(_typeless.getPointerField(3));
}
#endif  // !CAPNP_LITE
inline void InsInfo::Builder::setLinearVelocity( ::gac::rscl::GeometryPoit::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::GeometryPoit::Builder InsInfo::Builder::initLinearVelocity() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void InsInfo::Builder::adoptLinearVelocity(
    ::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> InsInfo::Builder::disownLinearVelocity() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline bool InsInfo::Reader::hasSdPosition() const {
  return !_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline bool InsInfo::Builder::hasSdPosition() {
  return !_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::GeometryPoit::Reader InsInfo::Reader::getSdPosition() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::GeometryPoit::Builder InsInfo::Builder::getSdPosition() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::GeometryPoit::Pipeline InsInfo::Pipeline::getSdPosition() {
  return  ::gac::rscl::GeometryPoit::Pipeline(_typeless.getPointerField(4));
}
#endif  // !CAPNP_LITE
inline void InsInfo::Builder::setSdPosition( ::gac::rscl::GeometryPoit::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::set(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::GeometryPoit::Builder InsInfo::Builder::initSdPosition() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::init(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline void InsInfo::Builder::adoptSdPosition(
    ::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::adopt(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> InsInfo::Builder::disownSdPosition() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::disown(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}

inline bool InsInfo::Reader::hasSdVelocity() const {
  return !_reader.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS).isNull();
}
inline bool InsInfo::Builder::hasSdVelocity() {
  return !_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::GeometryPoit::Reader InsInfo::Reader::getSdVelocity() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_reader.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::GeometryPoit::Builder InsInfo::Builder::getSdVelocity() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::GeometryPoit::Pipeline InsInfo::Pipeline::getSdVelocity() {
  return  ::gac::rscl::GeometryPoit::Pipeline(_typeless.getPointerField(5));
}
#endif  // !CAPNP_LITE
inline void InsInfo::Builder::setSdVelocity( ::gac::rscl::GeometryPoit::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::set(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::GeometryPoit::Builder InsInfo::Builder::initSdVelocity() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::init(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}
inline void InsInfo::Builder::adoptSdVelocity(
    ::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::adopt(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> InsInfo::Builder::disownSdVelocity() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::disown(_builder.getPointerField(
      ::capnp::bounded<5>() * ::capnp::POINTERS));
}

inline bool InsInfo::Reader::hasSdAttitude() const {
  return !_reader.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS).isNull();
}
inline bool InsInfo::Builder::hasSdAttitude() {
  return !_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::GeometryPoit::Reader InsInfo::Reader::getSdAttitude() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_reader.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::GeometryPoit::Builder InsInfo::Builder::getSdAttitude() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::GeometryPoit::Pipeline InsInfo::Pipeline::getSdAttitude() {
  return  ::gac::rscl::GeometryPoit::Pipeline(_typeless.getPointerField(6));
}
#endif  // !CAPNP_LITE
inline void InsInfo::Builder::setSdAttitude( ::gac::rscl::GeometryPoit::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::set(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::GeometryPoit::Builder InsInfo::Builder::initSdAttitude() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::init(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}
inline void InsInfo::Builder::adoptSdAttitude(
    ::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::adopt(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> InsInfo::Builder::disownSdAttitude() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::disown(_builder.getPointerField(
      ::capnp::bounded<6>() * ::capnp::POINTERS));
}

inline double InsInfo::Reader::getCep68() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline double InsInfo::Builder::getCep68() {
  return _builder.getDataField<double>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void InsInfo::Builder::setCep68(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline double InsInfo::Reader::getCep95() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline double InsInfo::Builder::getCep95() {
  return _builder.getDataField<double>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void InsInfo::Builder::setCep95(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline double InsInfo::Reader::getSecond() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline double InsInfo::Builder::getSecond() {
  return _builder.getDataField<double>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void InsInfo::Builder::setSecond(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t InsInfo::Reader::getSatUseNum() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}

inline  ::int32_t InsInfo::Builder::getSatUseNum() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}
inline void InsInfo::Builder::setSatUseNum( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t InsInfo::Reader::getSatInViewNum() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}

inline  ::int32_t InsInfo::Builder::getSatInViewNum() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}
inline void InsInfo::Builder::setSatInViewNum( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t InsInfo::Reader::getSolutionStatus() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t InsInfo::Builder::getSolutionStatus() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}
inline void InsInfo::Builder::setSolutionStatus( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t InsInfo::Reader::getPositionType() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<32>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t InsInfo::Builder::getPositionType() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<32>() * ::capnp::ELEMENTS);
}
inline void InsInfo::Builder::setPositionType( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<32>() * ::capnp::ELEMENTS, value);
}

inline float InsInfo::Reader::getPDop() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}

inline float InsInfo::Builder::getPDop() {
  return _builder.getDataField<float>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}
inline void InsInfo::Builder::setPDop(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS, value);
}

inline float InsInfo::Reader::getHDop() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS);
}

inline float InsInfo::Builder::getHDop() {
  return _builder.getDataField<float>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS);
}
inline void InsInfo::Builder::setHDop(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS, value);
}

inline float InsInfo::Reader::getVDop() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS);
}

inline float InsInfo::Builder::getVDop() {
  return _builder.getDataField<float>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS);
}
inline void InsInfo::Builder::setVDop(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS, value);
}

inline bool InsInfo::Reader::hasAttitudeDual() const {
  return !_reader.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS).isNull();
}
inline bool InsInfo::Builder::hasAttitudeDual() {
  return !_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::GeometryPoit::Reader InsInfo::Reader::getAttitudeDual() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_reader.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::GeometryPoit::Builder InsInfo::Builder::getAttitudeDual() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::GeometryPoit::Pipeline InsInfo::Pipeline::getAttitudeDual() {
  return  ::gac::rscl::GeometryPoit::Pipeline(_typeless.getPointerField(7));
}
#endif  // !CAPNP_LITE
inline void InsInfo::Builder::setAttitudeDual( ::gac::rscl::GeometryPoit::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::set(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::GeometryPoit::Builder InsInfo::Builder::initAttitudeDual() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::init(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}
inline void InsInfo::Builder::adoptAttitudeDual(
    ::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::adopt(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> InsInfo::Builder::disownAttitudeDual() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::disown(_builder.getPointerField(
      ::capnp::bounded<7>() * ::capnp::POINTERS));
}

inline bool InsInfo::Reader::hasSdAngleDual() const {
  return !_reader.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS).isNull();
}
inline bool InsInfo::Builder::hasSdAngleDual() {
  return !_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::GeometryPoit::Reader InsInfo::Reader::getSdAngleDual() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_reader.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::GeometryPoit::Builder InsInfo::Builder::getSdAngleDual() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::GeometryPoit::Pipeline InsInfo::Pipeline::getSdAngleDual() {
  return  ::gac::rscl::GeometryPoit::Pipeline(_typeless.getPointerField(8));
}
#endif  // !CAPNP_LITE
inline void InsInfo::Builder::setSdAngleDual( ::gac::rscl::GeometryPoit::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::set(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::GeometryPoit::Builder InsInfo::Builder::initSdAngleDual() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::init(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}
inline void InsInfo::Builder::adoptSdAngleDual(
    ::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::adopt(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> InsInfo::Builder::disownSdAngleDual() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::disown(_builder.getPointerField(
      ::capnp::bounded<8>() * ::capnp::POINTERS));
}

inline double InsInfo::Reader::getBaseLineLengthDual() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}

inline double InsInfo::Builder::getBaseLineLengthDual() {
  return _builder.getDataField<double>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}
inline void InsInfo::Builder::setBaseLineLengthDual(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t InsInfo::Reader::getSolutionStatusDual() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<22>() * ::capnp::ELEMENTS);
}

inline  ::int32_t InsInfo::Builder::getSolutionStatusDual() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<22>() * ::capnp::ELEMENTS);
}
inline void InsInfo::Builder::setSolutionStatusDual( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<22>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t InsInfo::Reader::getPositionTypeDual() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<23>() * ::capnp::ELEMENTS);
}

inline  ::int32_t InsInfo::Builder::getPositionTypeDual() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<23>() * ::capnp::ELEMENTS);
}
inline void InsInfo::Builder::setPositionTypeDual( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<23>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t InsInfo::Reader::getSolutionSourceDual() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS);
}

inline  ::int32_t InsInfo::Builder::getSolutionSourceDual() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS);
}
inline void InsInfo::Builder::setSolutionSourceDual( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t InsInfo::Reader::getAoc() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<25>() * ::capnp::ELEMENTS);
}

inline  ::int32_t InsInfo::Builder::getAoc() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<25>() * ::capnp::ELEMENTS);
}
inline void InsInfo::Builder::setAoc( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<25>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t InsInfo::Reader::getRtkBaseline() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<26>() * ::capnp::ELEMENTS);
}

inline  ::int32_t InsInfo::Builder::getRtkBaseline() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<26>() * ::capnp::ELEMENTS);
}
inline void InsInfo::Builder::setRtkBaseline( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<26>() * ::capnp::ELEMENTS, value);
}

inline bool InsInfo::Reader::hasAngularVelocity() const {
  return !_reader.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS).isNull();
}
inline bool InsInfo::Builder::hasAngularVelocity() {
  return !_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::GeometryPoit::Reader InsInfo::Reader::getAngularVelocity() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_reader.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::GeometryPoit::Builder InsInfo::Builder::getAngularVelocity() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::GeometryPoit::Pipeline InsInfo::Pipeline::getAngularVelocity() {
  return  ::gac::rscl::GeometryPoit::Pipeline(_typeless.getPointerField(9));
}
#endif  // !CAPNP_LITE
inline void InsInfo::Builder::setAngularVelocity( ::gac::rscl::GeometryPoit::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::set(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::GeometryPoit::Builder InsInfo::Builder::initAngularVelocity() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::init(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}
inline void InsInfo::Builder::adoptAngularVelocity(
    ::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::adopt(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> InsInfo::Builder::disownAngularVelocity() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::disown(_builder.getPointerField(
      ::capnp::bounded<9>() * ::capnp::POINTERS));
}

inline bool InsInfo::Reader::hasAcceleration() const {
  return !_reader.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS).isNull();
}
inline bool InsInfo::Builder::hasAcceleration() {
  return !_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::GeometryPoit::Reader InsInfo::Reader::getAcceleration() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_reader.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::GeometryPoit::Builder InsInfo::Builder::getAcceleration() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::GeometryPoit::Pipeline InsInfo::Pipeline::getAcceleration() {
  return  ::gac::rscl::GeometryPoit::Pipeline(_typeless.getPointerField(10));
}
#endif  // !CAPNP_LITE
inline void InsInfo::Builder::setAcceleration( ::gac::rscl::GeometryPoit::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::set(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::GeometryPoit::Builder InsInfo::Builder::initAcceleration() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::init(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}
inline void InsInfo::Builder::adoptAcceleration(
    ::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::adopt(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> InsInfo::Builder::disownAcceleration() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::disown(_builder.getPointerField(
      ::capnp::bounded<10>() * ::capnp::POINTERS));
}

inline bool ImuInfo::Reader::hasHeader() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool ImuInfo::Builder::hasHeader() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::Header::Reader ImuInfo::Reader::getHeader() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::Header>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::Header::Builder ImuInfo::Builder::getHeader() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::Header>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::Header::Pipeline ImuInfo::Pipeline::getHeader() {
  return  ::gac::rscl::Header::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void ImuInfo::Builder::setHeader( ::gac::rscl::Header::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::Header>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::Header::Builder ImuInfo::Builder::initHeader() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::Header>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void ImuInfo::Builder::adoptHeader(
    ::capnp::Orphan< ::gac::rscl::Header>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::Header>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::Header> ImuInfo::Builder::disownHeader() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::Header>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool ImuInfo::Reader::hasAngularVelocity() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool ImuInfo::Builder::hasAngularVelocity() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::GeometryPoit::Reader ImuInfo::Reader::getAngularVelocity() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::GeometryPoit::Builder ImuInfo::Builder::getAngularVelocity() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::GeometryPoit::Pipeline ImuInfo::Pipeline::getAngularVelocity() {
  return  ::gac::rscl::GeometryPoit::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void ImuInfo::Builder::setAngularVelocity( ::gac::rscl::GeometryPoit::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::GeometryPoit::Builder ImuInfo::Builder::initAngularVelocity() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void ImuInfo::Builder::adoptAngularVelocity(
    ::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> ImuInfo::Builder::disownAngularVelocity() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool ImuInfo::Reader::hasAcceleration() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool ImuInfo::Builder::hasAcceleration() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::gac::rscl::GeometryPoit::Reader ImuInfo::Reader::getAcceleration() const {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::gac::rscl::GeometryPoit::Builder ImuInfo::Builder::getAcceleration() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::gac::rscl::GeometryPoit::Pipeline ImuInfo::Pipeline::getAcceleration() {
  return  ::gac::rscl::GeometryPoit::Pipeline(_typeless.getPointerField(2));
}
#endif  // !CAPNP_LITE
inline void ImuInfo::Builder::setAcceleration( ::gac::rscl::GeometryPoit::Reader value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::gac::rscl::GeometryPoit::Builder ImuInfo::Builder::initAcceleration() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void ImuInfo::Builder::adoptAcceleration(
    ::capnp::Orphan< ::gac::rscl::GeometryPoit>&& value) {
  ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::gac::rscl::GeometryPoit> ImuInfo::Builder::disownAcceleration() {
  return ::capnp::_::PointerHelpers< ::gac::rscl::GeometryPoit>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline  ::uint16_t ImuInfo::Reader::getImuStatus() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t ImuInfo::Builder::getImuStatus() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void ImuInfo::Builder::setImuStatus( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline float ImuInfo::Reader::getTemperature() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline float ImuInfo::Builder::getTemperature() {
  return _builder.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void ImuInfo::Builder::setTemperature(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

}  // namespace
}  // namespace

CAPNP_END_HEADER

