// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: avp_customize_slot_req.capnp

#pragma once

#include <capnp/generated-header-support.h>
#include <kj/windows-sanity.h>

#if CAPNP_VERSION != 10002
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif

#include <ad_msg_idl/std_msgs/header.capnp.h>

CAPNP_BEGIN_HEADER

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(fa8cbb26a5904d99);
CAPNP_DECLARE_SCHEMA(f25fb30e64390bae);
CAPNP_DECLARE_SCHEMA(a6c24bf06e7423ec);
CAPNP_DECLARE_SCHEMA(bb737ac88b841013);
CAPNP_DECLARE_SCHEMA(d60e425f286c8102);
CAPNP_DECLARE_SCHEMA(9fe97c84e522e553);
enum class AvpCustomizeSlotResultCode_9fe97c84e522e553: uint16_t {
  NONE,
  OK,
  FAIL,
};
CAPNP_DECLARE_ENUM(AvpCustomizeSlotResultCode, 9fe97c84e522e553);
CAPNP_DECLARE_SCHEMA(8ffac77725a0367e);

}  // namespace schemas
}  // namespace capnp

namespace senseAD {
namespace msg {
namespace avp_hmi_v3 {

struct AvpcustomizeSlotPoint {
  AvpcustomizeSlotPoint() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(fa8cbb26a5904d99, 2, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct AvpCustomizeSlotFrame {
  AvpCustomizeSlotFrame() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(f25fb30e64390bae, 0, 4)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct AvpCustomizeSlot {
  AvpCustomizeSlot() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(a6c24bf06e7423ec, 2, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct AvpCustomizeSlotReq {
  AvpCustomizeSlotReq() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(bb737ac88b841013, 0, 2)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct AvpCustomizeSlotRes {
  AvpCustomizeSlotRes() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(d60e425f286c8102, 1, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

typedef ::capnp::schemas::AvpCustomizeSlotResultCode_9fe97c84e522e553 AvpCustomizeSlotResultCode;

struct AvpCustomizeSlotJudgeResult {
  AvpCustomizeSlotJudgeResult() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(8ffac77725a0367e, 2, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

class AvpcustomizeSlotPoint::Reader {
public:
  typedef AvpcustomizeSlotPoint Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline double getX() const;

  inline double getY() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class AvpcustomizeSlotPoint::Builder {
public:
  typedef AvpcustomizeSlotPoint Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline double getX();
  inline void setX(double value);

  inline double getY();
  inline void setY(double value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class AvpcustomizeSlotPoint::Pipeline {
public:
  typedef AvpcustomizeSlotPoint Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class AvpCustomizeSlotFrame::Reader {
public:
  typedef AvpCustomizeSlotFrame Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasP0() const;
  inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Reader getP0() const;

  inline bool hasP1() const;
  inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Reader getP1() const;

  inline bool hasP2() const;
  inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Reader getP2() const;

  inline bool hasP3() const;
  inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Reader getP3() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class AvpCustomizeSlotFrame::Builder {
public:
  typedef AvpCustomizeSlotFrame Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasP0();
  inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Builder getP0();
  inline void setP0( ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Reader value);
  inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Builder initP0();
  inline void adoptP0(::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint> disownP0();

  inline bool hasP1();
  inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Builder getP1();
  inline void setP1( ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Reader value);
  inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Builder initP1();
  inline void adoptP1(::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint> disownP1();

  inline bool hasP2();
  inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Builder getP2();
  inline void setP2( ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Reader value);
  inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Builder initP2();
  inline void adoptP2(::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint> disownP2();

  inline bool hasP3();
  inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Builder getP3();
  inline void setP3( ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Reader value);
  inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Builder initP3();
  inline void adoptP3(::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint> disownP3();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class AvpCustomizeSlotFrame::Pipeline {
public:
  typedef AvpCustomizeSlotFrame Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Pipeline getP0();
  inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Pipeline getP1();
  inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Pipeline getP2();
  inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Pipeline getP3();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class AvpCustomizeSlot::Reader {
public:
  typedef AvpCustomizeSlot Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint64_t getReqId() const;

  inline bool hasSlotFrame() const;
  inline  ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotFrame::Reader getSlotFrame() const;

  inline  ::uint64_t getInnerSlotId() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class AvpCustomizeSlot::Builder {
public:
  typedef AvpCustomizeSlot Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint64_t getReqId();
  inline void setReqId( ::uint64_t value);

  inline bool hasSlotFrame();
  inline  ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotFrame::Builder getSlotFrame();
  inline void setSlotFrame( ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotFrame::Reader value);
  inline  ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotFrame::Builder initSlotFrame();
  inline void adoptSlotFrame(::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotFrame>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotFrame> disownSlotFrame();

  inline  ::uint64_t getInnerSlotId();
  inline void setInnerSlotId( ::uint64_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class AvpCustomizeSlot::Pipeline {
public:
  typedef AvpCustomizeSlot Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotFrame::Pipeline getSlotFrame();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class AvpCustomizeSlotReq::Reader {
public:
  typedef AvpCustomizeSlotReq Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasHeader() const;
  inline  ::senseAD::msg::std_msgs::Header::Reader getHeader() const;

  inline bool hasCustomizeSlot() const;
  inline  ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlot::Reader getCustomizeSlot() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class AvpCustomizeSlotReq::Builder {
public:
  typedef AvpCustomizeSlotReq Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasHeader();
  inline  ::senseAD::msg::std_msgs::Header::Builder getHeader();
  inline void setHeader( ::senseAD::msg::std_msgs::Header::Reader value);
  inline  ::senseAD::msg::std_msgs::Header::Builder initHeader();
  inline void adoptHeader(::capnp::Orphan< ::senseAD::msg::std_msgs::Header>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Header> disownHeader();

  inline bool hasCustomizeSlot();
  inline  ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlot::Builder getCustomizeSlot();
  inline void setCustomizeSlot( ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlot::Reader value);
  inline  ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlot::Builder initCustomizeSlot();
  inline void adoptCustomizeSlot(::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlot>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlot> disownCustomizeSlot();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class AvpCustomizeSlotReq::Pipeline {
public:
  typedef AvpCustomizeSlotReq Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::std_msgs::Header::Pipeline getHeader();
  inline  ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlot::Pipeline getCustomizeSlot();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class AvpCustomizeSlotRes::Reader {
public:
  typedef AvpCustomizeSlotRes Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool getOk() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class AvpCustomizeSlotRes::Builder {
public:
  typedef AvpCustomizeSlotRes Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool getOk();
  inline void setOk(bool value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class AvpCustomizeSlotRes::Pipeline {
public:
  typedef AvpCustomizeSlotRes Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class AvpCustomizeSlotJudgeResult::Reader {
public:
  typedef AvpCustomizeSlotJudgeResult Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint64_t getReqId() const;

  inline  ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotResultCode getResult() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class AvpCustomizeSlotJudgeResult::Builder {
public:
  typedef AvpCustomizeSlotJudgeResult Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint64_t getReqId();
  inline void setReqId( ::uint64_t value);

  inline  ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotResultCode getResult();
  inline void setResult( ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotResultCode value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class AvpCustomizeSlotJudgeResult::Pipeline {
public:
  typedef AvpCustomizeSlotJudgeResult Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

inline double AvpcustomizeSlotPoint::Reader::getX() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline double AvpcustomizeSlotPoint::Builder::getX() {
  return _builder.getDataField<double>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void AvpcustomizeSlotPoint::Builder::setX(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline double AvpcustomizeSlotPoint::Reader::getY() const {
  return _reader.getDataField<double>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline double AvpcustomizeSlotPoint::Builder::getY() {
  return _builder.getDataField<double>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void AvpcustomizeSlotPoint::Builder::setY(double value) {
  _builder.setDataField<double>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline bool AvpCustomizeSlotFrame::Reader::hasP0() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool AvpCustomizeSlotFrame::Builder::hasP0() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Reader AvpCustomizeSlotFrame::Reader::getP0() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Builder AvpCustomizeSlotFrame::Builder::getP0() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Pipeline AvpCustomizeSlotFrame::Pipeline::getP0() {
  return  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void AvpCustomizeSlotFrame::Builder::setP0( ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Builder AvpCustomizeSlotFrame::Builder::initP0() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void AvpCustomizeSlotFrame::Builder::adoptP0(
    ::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint> AvpCustomizeSlotFrame::Builder::disownP0() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool AvpCustomizeSlotFrame::Reader::hasP1() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool AvpCustomizeSlotFrame::Builder::hasP1() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Reader AvpCustomizeSlotFrame::Reader::getP1() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Builder AvpCustomizeSlotFrame::Builder::getP1() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Pipeline AvpCustomizeSlotFrame::Pipeline::getP1() {
  return  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void AvpCustomizeSlotFrame::Builder::setP1( ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Builder AvpCustomizeSlotFrame::Builder::initP1() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void AvpCustomizeSlotFrame::Builder::adoptP1(
    ::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint> AvpCustomizeSlotFrame::Builder::disownP1() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool AvpCustomizeSlotFrame::Reader::hasP2() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool AvpCustomizeSlotFrame::Builder::hasP2() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Reader AvpCustomizeSlotFrame::Reader::getP2() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Builder AvpCustomizeSlotFrame::Builder::getP2() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Pipeline AvpCustomizeSlotFrame::Pipeline::getP2() {
  return  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Pipeline(_typeless.getPointerField(2));
}
#endif  // !CAPNP_LITE
inline void AvpCustomizeSlotFrame::Builder::setP2( ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Builder AvpCustomizeSlotFrame::Builder::initP2() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void AvpCustomizeSlotFrame::Builder::adoptP2(
    ::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint> AvpCustomizeSlotFrame::Builder::disownP2() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool AvpCustomizeSlotFrame::Reader::hasP3() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool AvpCustomizeSlotFrame::Builder::hasP3() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Reader AvpCustomizeSlotFrame::Reader::getP3() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Builder AvpCustomizeSlotFrame::Builder::getP3() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Pipeline AvpCustomizeSlotFrame::Pipeline::getP3() {
  return  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Pipeline(_typeless.getPointerField(3));
}
#endif  // !CAPNP_LITE
inline void AvpCustomizeSlotFrame::Builder::setP3( ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint::Builder AvpCustomizeSlotFrame::Builder::initP3() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void AvpCustomizeSlotFrame::Builder::adoptP3(
    ::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint> AvpCustomizeSlotFrame::Builder::disownP3() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpcustomizeSlotPoint>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline  ::uint64_t AvpCustomizeSlot::Reader::getReqId() const {
  return _reader.getDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint64_t AvpCustomizeSlot::Builder::getReqId() {
  return _builder.getDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void AvpCustomizeSlot::Builder::setReqId( ::uint64_t value) {
  _builder.setDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline bool AvpCustomizeSlot::Reader::hasSlotFrame() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool AvpCustomizeSlot::Builder::hasSlotFrame() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotFrame::Reader AvpCustomizeSlot::Reader::getSlotFrame() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotFrame>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotFrame::Builder AvpCustomizeSlot::Builder::getSlotFrame() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotFrame>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotFrame::Pipeline AvpCustomizeSlot::Pipeline::getSlotFrame() {
  return  ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotFrame::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void AvpCustomizeSlot::Builder::setSlotFrame( ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotFrame::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotFrame>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotFrame::Builder AvpCustomizeSlot::Builder::initSlotFrame() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotFrame>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void AvpCustomizeSlot::Builder::adoptSlotFrame(
    ::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotFrame>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotFrame>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotFrame> AvpCustomizeSlot::Builder::disownSlotFrame() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotFrame>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline  ::uint64_t AvpCustomizeSlot::Reader::getInnerSlotId() const {
  return _reader.getDataField< ::uint64_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint64_t AvpCustomizeSlot::Builder::getInnerSlotId() {
  return _builder.getDataField< ::uint64_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void AvpCustomizeSlot::Builder::setInnerSlotId( ::uint64_t value) {
  _builder.setDataField< ::uint64_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline bool AvpCustomizeSlotReq::Reader::hasHeader() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool AvpCustomizeSlotReq::Builder::hasHeader() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::std_msgs::Header::Reader AvpCustomizeSlotReq::Reader::getHeader() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::std_msgs::Header::Builder AvpCustomizeSlotReq::Builder::getHeader() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::std_msgs::Header::Pipeline AvpCustomizeSlotReq::Pipeline::getHeader() {
  return  ::senseAD::msg::std_msgs::Header::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void AvpCustomizeSlotReq::Builder::setHeader( ::senseAD::msg::std_msgs::Header::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::std_msgs::Header::Builder AvpCustomizeSlotReq::Builder::initHeader() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void AvpCustomizeSlotReq::Builder::adoptHeader(
    ::capnp::Orphan< ::senseAD::msg::std_msgs::Header>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Header> AvpCustomizeSlotReq::Builder::disownHeader() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool AvpCustomizeSlotReq::Reader::hasCustomizeSlot() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool AvpCustomizeSlotReq::Builder::hasCustomizeSlot() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlot::Reader AvpCustomizeSlotReq::Reader::getCustomizeSlot() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlot>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlot::Builder AvpCustomizeSlotReq::Builder::getCustomizeSlot() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlot>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlot::Pipeline AvpCustomizeSlotReq::Pipeline::getCustomizeSlot() {
  return  ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlot::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void AvpCustomizeSlotReq::Builder::setCustomizeSlot( ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlot::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlot>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlot::Builder AvpCustomizeSlotReq::Builder::initCustomizeSlot() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlot>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void AvpCustomizeSlotReq::Builder::adoptCustomizeSlot(
    ::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlot>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlot>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlot> AvpCustomizeSlotReq::Builder::disownCustomizeSlot() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlot>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool AvpCustomizeSlotRes::Reader::getOk() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline bool AvpCustomizeSlotRes::Builder::getOk() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void AvpCustomizeSlotRes::Builder::setOk(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint64_t AvpCustomizeSlotJudgeResult::Reader::getReqId() const {
  return _reader.getDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint64_t AvpCustomizeSlotJudgeResult::Builder::getReqId() {
  return _builder.getDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void AvpCustomizeSlotJudgeResult::Builder::setReqId( ::uint64_t value) {
  _builder.setDataField< ::uint64_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotResultCode AvpCustomizeSlotJudgeResult::Reader::getResult() const {
  return _reader.getDataField< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotResultCode>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotResultCode AvpCustomizeSlotJudgeResult::Builder::getResult() {
  return _builder.getDataField< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotResultCode>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void AvpCustomizeSlotJudgeResult::Builder::setResult( ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotResultCode value) {
  _builder.setDataField< ::senseAD::msg::avp_hmi_v3::AvpCustomizeSlotResultCode>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

}  // namespace
}  // namespace
}  // namespace

CAPNP_END_HEADER

