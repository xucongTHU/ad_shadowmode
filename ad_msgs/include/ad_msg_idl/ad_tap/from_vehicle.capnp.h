// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: from_vehicle.capnp

#pragma once

#include <capnp/generated-header-support.h>
#include <kj/windows-sanity.h>

#if CAPNP_VERSION != 10002
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif

#include <ad_msg_idl/std_msgs/header.capnp.h>

CAPNP_BEGIN_HEADER

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(b8fb7abca7d0eda9);
CAPNP_DECLARE_SCHEMA(fdf0487ddf6c2f30);
CAPNP_DECLARE_SCHEMA(bcc4b86005731962);
CAPNP_DECLARE_SCHEMA(d1e9a2410acd9a7d);
CAPNP_DECLARE_SCHEMA(df88c78902d2c8da);

}  // namespace schemas
}  // namespace capnp

namespace senseAD {
namespace msg {
namespace tap {

struct Rsds {
  Rsds() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(b8fb7abca7d0eda9, 4, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct RsdsR1 {
  RsdsR1() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(fdf0487ddf6c2f30, 1, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct VcanSRRSignal {
  VcanSRRSignal() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(bcc4b86005731962, 0, 3)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct NavSignal {
  NavSignal() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(d1e9a2410acd9a7d, 4, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct FromVehicle {
  FromVehicle() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(df88c78902d2c8da, 48, 3)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

class Rsds::Reader {
public:
  typedef Rsds Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getObjId() const;

  inline float getObjLongPosCurvi() const;

  inline float getObjLatPosCurvi() const;

  inline float getObjLongVelCurvi() const;

  inline float getObjLatVelCurvi() const;

  inline float getObjTtc() const;

  inline  ::uint8_t getObjLength() const;

  inline float getObjWidth() const;

  inline  ::uint8_t getObjStationary() const;

  inline  ::uint8_t getZoneInd() const;

  inline  ::uint8_t getObjStatus() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Rsds::Builder {
public:
  typedef Rsds Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getObjId();
  inline void setObjId( ::uint8_t value);

  inline float getObjLongPosCurvi();
  inline void setObjLongPosCurvi(float value);

  inline float getObjLatPosCurvi();
  inline void setObjLatPosCurvi(float value);

  inline float getObjLongVelCurvi();
  inline void setObjLongVelCurvi(float value);

  inline float getObjLatVelCurvi();
  inline void setObjLatVelCurvi(float value);

  inline float getObjTtc();
  inline void setObjTtc(float value);

  inline  ::uint8_t getObjLength();
  inline void setObjLength( ::uint8_t value);

  inline float getObjWidth();
  inline void setObjWidth(float value);

  inline  ::uint8_t getObjStationary();
  inline void setObjStationary( ::uint8_t value);

  inline  ::uint8_t getZoneInd();
  inline void setZoneInd( ::uint8_t value);

  inline  ::uint8_t getObjStatus();
  inline void setObjStatus( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Rsds::Pipeline {
public:
  typedef Rsds Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class RsdsR1::Reader {
public:
  typedef RsdsR1 Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getBliStatus() const;

  inline  ::uint8_t getLcaCtaRcwErrorSts() const;

  inline  ::uint8_t getRiTarSts() const;

  inline  ::uint8_t getLeTarSts() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class RsdsR1::Builder {
public:
  typedef RsdsR1 Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getBliStatus();
  inline void setBliStatus( ::uint8_t value);

  inline  ::uint8_t getLcaCtaRcwErrorSts();
  inline void setLcaCtaRcwErrorSts( ::uint8_t value);

  inline  ::uint8_t getRiTarSts();
  inline void setRiTarSts( ::uint8_t value);

  inline  ::uint8_t getLeTarSts();
  inline void setLeTarSts( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class RsdsR1::Pipeline {
public:
  typedef RsdsR1 Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class VcanSRRSignal::Reader {
public:
  typedef VcanSRRSignal Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasRsdsL2() const;
  inline  ::senseAD::msg::tap::Rsds::Reader getRsdsL2() const;

  inline bool hasRsdsR2() const;
  inline  ::senseAD::msg::tap::Rsds::Reader getRsdsR2() const;

  inline bool hasRsdsR1() const;
  inline  ::senseAD::msg::tap::RsdsR1::Reader getRsdsR1() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class VcanSRRSignal::Builder {
public:
  typedef VcanSRRSignal Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasRsdsL2();
  inline  ::senseAD::msg::tap::Rsds::Builder getRsdsL2();
  inline void setRsdsL2( ::senseAD::msg::tap::Rsds::Reader value);
  inline  ::senseAD::msg::tap::Rsds::Builder initRsdsL2();
  inline void adoptRsdsL2(::capnp::Orphan< ::senseAD::msg::tap::Rsds>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::Rsds> disownRsdsL2();

  inline bool hasRsdsR2();
  inline  ::senseAD::msg::tap::Rsds::Builder getRsdsR2();
  inline void setRsdsR2( ::senseAD::msg::tap::Rsds::Reader value);
  inline  ::senseAD::msg::tap::Rsds::Builder initRsdsR2();
  inline void adoptRsdsR2(::capnp::Orphan< ::senseAD::msg::tap::Rsds>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::Rsds> disownRsdsR2();

  inline bool hasRsdsR1();
  inline  ::senseAD::msg::tap::RsdsR1::Builder getRsdsR1();
  inline void setRsdsR1( ::senseAD::msg::tap::RsdsR1::Reader value);
  inline  ::senseAD::msg::tap::RsdsR1::Builder initRsdsR1();
  inline void adoptRsdsR1(::capnp::Orphan< ::senseAD::msg::tap::RsdsR1>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::RsdsR1> disownRsdsR1();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class VcanSRRSignal::Pipeline {
public:
  typedef VcanSRRSignal Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::tap::Rsds::Pipeline getRsdsL2();
  inline  ::senseAD::msg::tap::Rsds::Pipeline getRsdsR2();
  inline  ::senseAD::msg::tap::RsdsR1::Pipeline getRsdsR1();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class NavSignal::Reader {
public:
  typedef NavSignal Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getNavTSRTrafSgn() const;

  inline  ::uint8_t getNavSpdLimSgnStat() const;

  inline  ::uint16_t getNavCtryTyp() const;

  inline  ::uint8_t getNavSpdLimtUnit() const;

  inline  ::uint8_t getNavSpdLimtValue() const;

  inline  ::uint8_t getNavSpdLimyTyp() const;

  inline  ::uint8_t getNavRoadTyp() const;

  inline  ::uint8_t getNavStat() const;

  inline float getNavTSRTrafSgnDist() const;

  inline float getNavISDRestOfdis() const;

  inline float getNavSLCAheadDis() const;

  inline  ::uint8_t getNavOffRampStat() const;

  inline float getNavOffRampDist() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class NavSignal::Builder {
public:
  typedef NavSignal Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getNavTSRTrafSgn();
  inline void setNavTSRTrafSgn( ::uint8_t value);

  inline  ::uint8_t getNavSpdLimSgnStat();
  inline void setNavSpdLimSgnStat( ::uint8_t value);

  inline  ::uint16_t getNavCtryTyp();
  inline void setNavCtryTyp( ::uint16_t value);

  inline  ::uint8_t getNavSpdLimtUnit();
  inline void setNavSpdLimtUnit( ::uint8_t value);

  inline  ::uint8_t getNavSpdLimtValue();
  inline void setNavSpdLimtValue( ::uint8_t value);

  inline  ::uint8_t getNavSpdLimyTyp();
  inline void setNavSpdLimyTyp( ::uint8_t value);

  inline  ::uint8_t getNavRoadTyp();
  inline void setNavRoadTyp( ::uint8_t value);

  inline  ::uint8_t getNavStat();
  inline void setNavStat( ::uint8_t value);

  inline float getNavTSRTrafSgnDist();
  inline void setNavTSRTrafSgnDist(float value);

  inline float getNavISDRestOfdis();
  inline void setNavISDRestOfdis(float value);

  inline float getNavSLCAheadDis();
  inline void setNavSLCAheadDis(float value);

  inline  ::uint8_t getNavOffRampStat();
  inline void setNavOffRampStat( ::uint8_t value);

  inline float getNavOffRampDist();
  inline void setNavOffRampDist(float value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class NavSignal::Pipeline {
public:
  typedef NavSignal Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class FromVehicle::Reader {
public:
  typedef FromVehicle Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasVcanSRRSignal() const;
  inline  ::senseAD::msg::tap::VcanSRRSignal::Reader getVcanSRRSignal() const;

  inline bool hasNavSignal() const;
  inline  ::senseAD::msg::tap::NavSignal::Reader getNavSignal() const;

  inline float getAccelPedPos() const;

  inline float getAudioTgtSpeed() const;

  inline float getVehicleSpeedDisplay() const;

  inline float getLongAccel() const;

  inline float getBrkPedalPos() const;

  inline float getEngSpd() const;

  inline float getEngTrqActual() const;

  inline float getEngTrqMax() const;

  inline float getEngTrqMin() const;

  inline float getEngTrqDrvrRqd() const;

  inline float getIpVehTotDist() const;

  inline float getLdWheelSpd() const;

  inline float getLndWheelSpd() const;

  inline float getMstrIMULatAcc() const;

  inline float getMstrIMULongAcc() const;

  inline float getMstrIMUYawRate() const;

  inline float getRdLdNomAxlTrq() const;

  inline float getVcuRecpTorq() const;

  inline float getRdWheelSpd() const;

  inline float getRndWheelSpd() const;

  inline float getStrWhlAng() const;

  inline float getStrWhlAngleComp() const;

  inline float getSubStrWhlAng() const;

  inline float getSubIMUYawRate() const;

  inline float getSubIMULatAcc() const;

  inline float getSubIMULongAcc() const;

  inline float getTorsionBarTrq() const;

  inline float getTsrDispDist() const;

  inline float getVehSpdDrvnAvg() const;

  inline float getVehSpdNDrvnAvg() const;

  inline float getBcsFLWheelSpdEdgesSum() const;

  inline float getBcsFRWheelSpdEdgesSum() const;

  inline float getBcsRLWheelSpdEdgesSum() const;

  inline float getBcsRRWheelSpdEdgesSum() const;

  inline float getFlWheelSpdMps() const;

  inline float getFrWheelSpdMps() const;

  inline float getRlWheelSpdMps() const;

  inline float getRrWheelSpdMps() const;

  inline float getMasterCylinderPrs() const;

  inline float getUnusedSingle1() const;

  inline float getUnusedSingle2() const;

  inline  ::int32_t getDrvrReqAxlTrq() const;

  inline  ::int32_t getDrvrReqAxlTrqMax() const;

  inline  ::int32_t getDrvrReqAxlTrqMin() const;

  inline  ::uint32_t getFunctionDIDConfig() const;

  inline  ::uint32_t getYawRateTimestampMs() const;

  inline  ::uint16_t getBrkPdlDrvrApldPrs() const;

  inline  ::int16_t getStrWhlAngSpd() const;

  inline  ::uint16_t getVehMassKg() const;

  inline  ::uint16_t getWhlDistPerRevDrvn() const;

  inline  ::uint16_t getLdWhlDistPlsCntr() const;

  inline  ::uint16_t getLndWhlDistPCntr() const;

  inline  ::uint16_t getRdWhlDistPlsCntr() const;

  inline  ::uint16_t getRndWhlDistPCntr() const;

  inline  ::uint16_t getSubRDWhlDistPlsCntr() const;

  inline  ::uint16_t getSubLDWhlDistPlsCntr() const;

  inline  ::uint16_t getSubRNDWhlDistPCntr() const;

  inline  ::uint16_t getSubLNDWhlDistPCntr() const;

  inline  ::uint8_t getEngSpdStat() const;

  inline  ::uint8_t getLgCtrlTrqLmtStat() const;

  inline  ::uint8_t getAccelPedPosV() const;

  inline  ::uint8_t getAbsActive() const;

  inline  ::uint8_t getLgCtrlPTAccReqSprcd() const;

  inline  ::uint8_t getLgCtrlTrqRqStat() const;

  inline  ::uint8_t getLgCtrlBrakeAct() const;

  inline  ::uint8_t getAccPdlOvrdAct() const;

  inline  ::uint8_t getLongAccelV() const;

  inline  ::uint8_t getLgCtrlTimeGapSw() const;

  inline  ::uint8_t getAirbagVirtDevAvl() const;

  inline  ::uint8_t getAutoBrakeAct() const;

  inline  ::uint8_t getAutoTransCmdGear() const;

  inline  ::uint8_t getBrksOvheat() const;

  inline  ::uint8_t getBrkSnsrCalbrd() const;

  inline  ::uint8_t getBrkPedDrvrApldPrsDetcd() const;

  inline  ::uint8_t getBrkPedDrvrApldPrsDetcdV() const;

  inline  ::uint8_t getBrkPedalPrsd() const;

  inline  ::uint8_t getBrkPedalPrsdV() const;

  inline  ::uint8_t getAutoBrkSysFail() const;

  inline  ::uint8_t getChimeVirtDevAvl() const;

  inline  ::uint8_t getLgSafeVehCusSet() const;

  inline  ::uint8_t getLgCtrlEnbld() const;

  inline  ::uint8_t getLgCtrlCancelSw() const;

  inline  ::uint8_t getLgCtrlMainSw() const;

  inline  ::uint8_t getLgCtrlResSw() const;

  inline  ::uint8_t getLgCtrlSetSw() const;

  inline  ::uint8_t getLgCtrlSpdDec() const;

  inline  ::uint8_t getLgCtrlSpdInc() const;

  inline  ::uint8_t getLgCtrlSwStat() const;

  inline  ::uint8_t getCrshWarnDrvrSlectTyp() const;

  inline  ::uint8_t getCrshWarnSeatAvl() const;

  inline  ::uint8_t getLgCtrlLmtrSwStat() const;

  inline  ::uint8_t getTrqIntvnTyp() const;

  inline  ::uint8_t getDrvrDoorOpenM() const;

  inline  ::uint8_t getDrvrDoorOpen() const;

  inline  ::uint8_t getIPVehSpdUnit() const;

  inline  ::uint8_t getDrvrSBFasten() const;

  inline  ::uint8_t getDrvrSBFastenV() const;

  inline  ::uint8_t getEPBStat() const;

  inline  ::uint8_t getEngRun() const;

  inline  ::uint8_t getEPBCancelLgCtrlRq() const;

  inline  ::uint8_t getLgCtrlSwActDet() const;

  inline  ::uint8_t getFCAClnWarnCustSet() const;

  inline  ::uint8_t getHaptcSeatVirtDevAvl() const;

  inline  ::uint8_t getHeadlampStat() const;

  inline  ::uint8_t getHudVirtDevAvl() const;

  inline  ::uint8_t getHdcStat() const;

  inline  ::uint8_t getHandsOffMode() const;

  inline  ::uint8_t getHandsOffStat() const;

  inline  ::uint8_t getHandsOffStatV() const;

  inline  ::uint8_t getHudAct() const;

  inline  ::uint8_t getIpcVirtDevAvl() const;

  inline  ::uint8_t getLkaTrqOvlDlvdStat() const;

  inline  ::uint8_t getPltFrmEngSpdCmdMdAct() const;

  inline  ::uint8_t getApaAct() const;

  inline  ::uint8_t getApaSwAct() const;

  inline  ::uint8_t getPtBrkPedApld() const;

  inline  ::uint8_t getPtBrkPedApldV() const;

  inline  ::uint8_t getSecAxlOperMode() const;

  inline  ::uint8_t getSecAxlStat() const;

  inline  ::uint8_t getVehCrashTrig() const;

  inline  ::uint8_t getStrWhAngVirtDevAvl() const;

  inline  ::uint8_t getStrWhlAngSpdV() const;

  inline  ::uint8_t getSasCalStat() const;

  inline  ::uint8_t getSysPwrModBkup() const;

  inline  ::uint8_t getSysPwrModBkupEn() const;

  inline  ::uint8_t getSysPwrMod() const;

  inline  ::uint8_t getTcsAct() const;

  inline  ::uint8_t getTcsMod() const;

  inline  ::uint8_t getTcsStat() const;

  inline  ::uint8_t getTransEstdGear() const;

  inline  ::uint8_t getTransTUDMdStat() const;

  inline  ::uint8_t getTransEngagedStat() const;

  inline  ::uint8_t getTurnLmpSwPos() const;

  inline  ::uint8_t getIpVehTotDistV() const;

  inline  ::uint8_t getVehSpdDrvnAvgV() const;

  inline  ::uint8_t getVehSpdNDrvnAvgV() const;

  inline  ::uint8_t getVseMod() const;

  inline  ::uint8_t getVseStat() const;

  inline  ::uint8_t getVehDynCntlStat() const;

  inline  ::uint8_t getVseAct() const;

  inline  ::uint8_t getLdWheelSpdV() const;

  inline  ::uint8_t getLndWheelSpdV() const;

  inline  ::uint8_t getRdWheelSpdV() const;

  inline  ::uint8_t getRndWheelSpdV() const;

  inline  ::uint8_t getLdWheelRotDir() const;

  inline  ::uint8_t getLndWheelRotDir() const;

  inline  ::uint8_t getRdWheelRotDir() const;

  inline  ::uint8_t getRndWheelRotDir() const;

  inline  ::uint8_t getLdWhlDistVal() const;

  inline  ::uint8_t getLndWhlDistVal() const;

  inline  ::uint8_t getRdWhlDistVal() const;

  inline  ::uint8_t getRndWhlDistVal() const;

  inline  ::uint8_t getWasherWprAct() const;

  inline  ::uint8_t getWasherWprSwAct() const;

  inline  ::uint8_t getAutoBrkSysStat() const;

  inline  ::uint8_t getBrkSysExtHoldFail() const;

  inline  ::uint8_t getAutoBrkSysInhLgCntl() const;

  inline  ::uint8_t getMstrIMULatAccV() const;

  inline  ::uint8_t getMstrIMULongAccV() const;

  inline  ::uint8_t getMstrIMULongAccAvl() const;

  inline  ::uint8_t getMstrIMUYawRateV() const;

  inline  ::uint8_t getVehMovementStat() const;

  inline  ::uint8_t getLgSafeVRUCusSet() const;

  inline  ::uint8_t getGearLeverPosn() const;

  inline  ::uint8_t getLdpMode() const;

  inline  ::uint8_t getTjaSelect() const;

  inline  ::uint8_t getWindShieldWprAct() const;

  inline  ::uint8_t getCollPrepSysInhbt() const;

  inline  ::uint8_t getTsrAlertSw() const;

  inline  ::uint8_t getTsrSw() const;

  inline  ::uint8_t getFrntFogLmpStat() const;

  inline  ::uint8_t getHlBeamSwStat() const;

  inline  ::uint8_t getAhbcSwStat() const;

  inline  ::uint8_t getPsngrDoorAjarSt() const;

  inline  ::uint8_t getRlDoorAjarSt() const;

  inline  ::uint8_t getRrDoorAjarSt() const;

  inline  ::uint8_t getDowSwitchReq() const;

  inline  ::uint8_t getLcaBSDSwitchReq() const;

  inline  ::uint8_t getRctaSwitchReq() const;

  inline  ::uint8_t getRecwSwitchReq() const;

  inline  ::uint8_t getFctaSwitchReq() const;

  inline  ::uint8_t getDriverDoorLockSt() const;

  inline  ::uint8_t getPsngrDoorLockSt() const;

  inline  ::uint8_t getTruckAjarSt() const;

  inline  ::uint8_t getInsideGeofence() const;

  inline  ::uint8_t getBrkPdlType() const;

  inline  ::uint8_t getTurnlgtSwSt() const;

  inline  ::uint8_t getDaytime() const;

  inline  ::uint8_t getLatSafeSnvtySet() const;

  inline  ::uint8_t getIsaSw() const;

  inline  ::uint8_t getSteerMod() const;

  inline  ::int8_t getTsrSnvtySet() const;

  inline  ::uint8_t getHazLightStat() const;

  inline  ::uint8_t getFcwSnvtySet() const;

  inline  ::uint8_t getLgSafeJACusSet() const;

  inline  ::uint8_t getVehAutoLightCtrlStat() const;

  inline  ::uint8_t getCcoAct() const;

  inline  ::uint8_t getLgCtrlDrvMod() const;

  inline  ::uint8_t getEcoPlusMod() const;

  inline  ::uint8_t getVehMaxSpdLimtKph() const;

  inline  ::uint8_t getDfwSw() const;

  inline  ::uint8_t getLTurnLmpFaultStat() const;

  inline  ::uint8_t getRTurnLmpFaultStat() const;

  inline  ::uint8_t getHodError() const;

  inline  ::uint8_t getHodStat() const;

  inline  ::uint8_t getTirePresrFault() const;

  inline  ::uint8_t getWheelDirForwrdFlg() const;

  inline  ::uint8_t getAbsESPActvInhbtLat() const;

  inline  ::uint8_t getRearFogLmpStat() const;

  inline  ::uint8_t getLgSafeJAPedCusSet() const;

  inline  ::uint8_t getFcaVRUWarnCustSet() const;

  inline  ::uint8_t getAlcSw() const;

  inline  ::uint8_t getLgCtrlTimeGapSetLst() const;

  inline  ::uint8_t getTlrSw() const;

  inline  ::uint8_t getDrvrID() const;

  inline  ::uint8_t getTsrSpdLimtValue() const;

  inline  ::uint8_t getLkaLstCtrlVal() const;

  inline  ::uint8_t getTjaSetSw() const;

  inline  ::uint8_t getGoNotifCustSet() const;

  inline  ::uint8_t getUssFollowSt() const;

  inline  ::uint8_t getTurnLightSt() const;

  inline  ::uint8_t getEmsAccButtInfo() const;

  inline  ::uint8_t getAutoBrkSysAvailMask() const;

  inline  ::uint8_t getAutoBrkSysAtvMask() const;

  inline  ::uint8_t getBcsPrimBrkActiveSt() const;

  inline  ::uint8_t getBcsVehicleStandStillSt() const;

  inline  ::uint8_t getBcsFLWheelRotatedDirection() const;

  inline  ::uint8_t getBcsFRWheelRotatedDirection() const;

  inline  ::uint8_t getBcsRLWheelRotatedDirection() const;

  inline  ::uint8_t getBcsRRWheelRotatedDirection() const;

  inline  ::uint8_t getUnusedUint81() const;

  inline  ::uint8_t getUnusedUint82() const;

  inline  ::uint8_t getUnusedUint83() const;

  inline  ::uint8_t getUnusedUint84() const;

  inline bool hasHeader() const;
  inline  ::senseAD::msg::std_msgs::Header::Reader getHeader() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class FromVehicle::Builder {
public:
  typedef FromVehicle Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasVcanSRRSignal();
  inline  ::senseAD::msg::tap::VcanSRRSignal::Builder getVcanSRRSignal();
  inline void setVcanSRRSignal( ::senseAD::msg::tap::VcanSRRSignal::Reader value);
  inline  ::senseAD::msg::tap::VcanSRRSignal::Builder initVcanSRRSignal();
  inline void adoptVcanSRRSignal(::capnp::Orphan< ::senseAD::msg::tap::VcanSRRSignal>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::VcanSRRSignal> disownVcanSRRSignal();

  inline bool hasNavSignal();
  inline  ::senseAD::msg::tap::NavSignal::Builder getNavSignal();
  inline void setNavSignal( ::senseAD::msg::tap::NavSignal::Reader value);
  inline  ::senseAD::msg::tap::NavSignal::Builder initNavSignal();
  inline void adoptNavSignal(::capnp::Orphan< ::senseAD::msg::tap::NavSignal>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::NavSignal> disownNavSignal();

  inline float getAccelPedPos();
  inline void setAccelPedPos(float value);

  inline float getAudioTgtSpeed();
  inline void setAudioTgtSpeed(float value);

  inline float getVehicleSpeedDisplay();
  inline void setVehicleSpeedDisplay(float value);

  inline float getLongAccel();
  inline void setLongAccel(float value);

  inline float getBrkPedalPos();
  inline void setBrkPedalPos(float value);

  inline float getEngSpd();
  inline void setEngSpd(float value);

  inline float getEngTrqActual();
  inline void setEngTrqActual(float value);

  inline float getEngTrqMax();
  inline void setEngTrqMax(float value);

  inline float getEngTrqMin();
  inline void setEngTrqMin(float value);

  inline float getEngTrqDrvrRqd();
  inline void setEngTrqDrvrRqd(float value);

  inline float getIpVehTotDist();
  inline void setIpVehTotDist(float value);

  inline float getLdWheelSpd();
  inline void setLdWheelSpd(float value);

  inline float getLndWheelSpd();
  inline void setLndWheelSpd(float value);

  inline float getMstrIMULatAcc();
  inline void setMstrIMULatAcc(float value);

  inline float getMstrIMULongAcc();
  inline void setMstrIMULongAcc(float value);

  inline float getMstrIMUYawRate();
  inline void setMstrIMUYawRate(float value);

  inline float getRdLdNomAxlTrq();
  inline void setRdLdNomAxlTrq(float value);

  inline float getVcuRecpTorq();
  inline void setVcuRecpTorq(float value);

  inline float getRdWheelSpd();
  inline void setRdWheelSpd(float value);

  inline float getRndWheelSpd();
  inline void setRndWheelSpd(float value);

  inline float getStrWhlAng();
  inline void setStrWhlAng(float value);

  inline float getStrWhlAngleComp();
  inline void setStrWhlAngleComp(float value);

  inline float getSubStrWhlAng();
  inline void setSubStrWhlAng(float value);

  inline float getSubIMUYawRate();
  inline void setSubIMUYawRate(float value);

  inline float getSubIMULatAcc();
  inline void setSubIMULatAcc(float value);

  inline float getSubIMULongAcc();
  inline void setSubIMULongAcc(float value);

  inline float getTorsionBarTrq();
  inline void setTorsionBarTrq(float value);

  inline float getTsrDispDist();
  inline void setTsrDispDist(float value);

  inline float getVehSpdDrvnAvg();
  inline void setVehSpdDrvnAvg(float value);

  inline float getVehSpdNDrvnAvg();
  inline void setVehSpdNDrvnAvg(float value);

  inline float getBcsFLWheelSpdEdgesSum();
  inline void setBcsFLWheelSpdEdgesSum(float value);

  inline float getBcsFRWheelSpdEdgesSum();
  inline void setBcsFRWheelSpdEdgesSum(float value);

  inline float getBcsRLWheelSpdEdgesSum();
  inline void setBcsRLWheelSpdEdgesSum(float value);

  inline float getBcsRRWheelSpdEdgesSum();
  inline void setBcsRRWheelSpdEdgesSum(float value);

  inline float getFlWheelSpdMps();
  inline void setFlWheelSpdMps(float value);

  inline float getFrWheelSpdMps();
  inline void setFrWheelSpdMps(float value);

  inline float getRlWheelSpdMps();
  inline void setRlWheelSpdMps(float value);

  inline float getRrWheelSpdMps();
  inline void setRrWheelSpdMps(float value);

  inline float getMasterCylinderPrs();
  inline void setMasterCylinderPrs(float value);

  inline float getUnusedSingle1();
  inline void setUnusedSingle1(float value);

  inline float getUnusedSingle2();
  inline void setUnusedSingle2(float value);

  inline  ::int32_t getDrvrReqAxlTrq();
  inline void setDrvrReqAxlTrq( ::int32_t value);

  inline  ::int32_t getDrvrReqAxlTrqMax();
  inline void setDrvrReqAxlTrqMax( ::int32_t value);

  inline  ::int32_t getDrvrReqAxlTrqMin();
  inline void setDrvrReqAxlTrqMin( ::int32_t value);

  inline  ::uint32_t getFunctionDIDConfig();
  inline void setFunctionDIDConfig( ::uint32_t value);

  inline  ::uint32_t getYawRateTimestampMs();
  inline void setYawRateTimestampMs( ::uint32_t value);

  inline  ::uint16_t getBrkPdlDrvrApldPrs();
  inline void setBrkPdlDrvrApldPrs( ::uint16_t value);

  inline  ::int16_t getStrWhlAngSpd();
  inline void setStrWhlAngSpd( ::int16_t value);

  inline  ::uint16_t getVehMassKg();
  inline void setVehMassKg( ::uint16_t value);

  inline  ::uint16_t getWhlDistPerRevDrvn();
  inline void setWhlDistPerRevDrvn( ::uint16_t value);

  inline  ::uint16_t getLdWhlDistPlsCntr();
  inline void setLdWhlDistPlsCntr( ::uint16_t value);

  inline  ::uint16_t getLndWhlDistPCntr();
  inline void setLndWhlDistPCntr( ::uint16_t value);

  inline  ::uint16_t getRdWhlDistPlsCntr();
  inline void setRdWhlDistPlsCntr( ::uint16_t value);

  inline  ::uint16_t getRndWhlDistPCntr();
  inline void setRndWhlDistPCntr( ::uint16_t value);

  inline  ::uint16_t getSubRDWhlDistPlsCntr();
  inline void setSubRDWhlDistPlsCntr( ::uint16_t value);

  inline  ::uint16_t getSubLDWhlDistPlsCntr();
  inline void setSubLDWhlDistPlsCntr( ::uint16_t value);

  inline  ::uint16_t getSubRNDWhlDistPCntr();
  inline void setSubRNDWhlDistPCntr( ::uint16_t value);

  inline  ::uint16_t getSubLNDWhlDistPCntr();
  inline void setSubLNDWhlDistPCntr( ::uint16_t value);

  inline  ::uint8_t getEngSpdStat();
  inline void setEngSpdStat( ::uint8_t value);

  inline  ::uint8_t getLgCtrlTrqLmtStat();
  inline void setLgCtrlTrqLmtStat( ::uint8_t value);

  inline  ::uint8_t getAccelPedPosV();
  inline void setAccelPedPosV( ::uint8_t value);

  inline  ::uint8_t getAbsActive();
  inline void setAbsActive( ::uint8_t value);

  inline  ::uint8_t getLgCtrlPTAccReqSprcd();
  inline void setLgCtrlPTAccReqSprcd( ::uint8_t value);

  inline  ::uint8_t getLgCtrlTrqRqStat();
  inline void setLgCtrlTrqRqStat( ::uint8_t value);

  inline  ::uint8_t getLgCtrlBrakeAct();
  inline void setLgCtrlBrakeAct( ::uint8_t value);

  inline  ::uint8_t getAccPdlOvrdAct();
  inline void setAccPdlOvrdAct( ::uint8_t value);

  inline  ::uint8_t getLongAccelV();
  inline void setLongAccelV( ::uint8_t value);

  inline  ::uint8_t getLgCtrlTimeGapSw();
  inline void setLgCtrlTimeGapSw( ::uint8_t value);

  inline  ::uint8_t getAirbagVirtDevAvl();
  inline void setAirbagVirtDevAvl( ::uint8_t value);

  inline  ::uint8_t getAutoBrakeAct();
  inline void setAutoBrakeAct( ::uint8_t value);

  inline  ::uint8_t getAutoTransCmdGear();
  inline void setAutoTransCmdGear( ::uint8_t value);

  inline  ::uint8_t getBrksOvheat();
  inline void setBrksOvheat( ::uint8_t value);

  inline  ::uint8_t getBrkSnsrCalbrd();
  inline void setBrkSnsrCalbrd( ::uint8_t value);

  inline  ::uint8_t getBrkPedDrvrApldPrsDetcd();
  inline void setBrkPedDrvrApldPrsDetcd( ::uint8_t value);

  inline  ::uint8_t getBrkPedDrvrApldPrsDetcdV();
  inline void setBrkPedDrvrApldPrsDetcdV( ::uint8_t value);

  inline  ::uint8_t getBrkPedalPrsd();
  inline void setBrkPedalPrsd( ::uint8_t value);

  inline  ::uint8_t getBrkPedalPrsdV();
  inline void setBrkPedalPrsdV( ::uint8_t value);

  inline  ::uint8_t getAutoBrkSysFail();
  inline void setAutoBrkSysFail( ::uint8_t value);

  inline  ::uint8_t getChimeVirtDevAvl();
  inline void setChimeVirtDevAvl( ::uint8_t value);

  inline  ::uint8_t getLgSafeVehCusSet();
  inline void setLgSafeVehCusSet( ::uint8_t value);

  inline  ::uint8_t getLgCtrlEnbld();
  inline void setLgCtrlEnbld( ::uint8_t value);

  inline  ::uint8_t getLgCtrlCancelSw();
  inline void setLgCtrlCancelSw( ::uint8_t value);

  inline  ::uint8_t getLgCtrlMainSw();
  inline void setLgCtrlMainSw( ::uint8_t value);

  inline  ::uint8_t getLgCtrlResSw();
  inline void setLgCtrlResSw( ::uint8_t value);

  inline  ::uint8_t getLgCtrlSetSw();
  inline void setLgCtrlSetSw( ::uint8_t value);

  inline  ::uint8_t getLgCtrlSpdDec();
  inline void setLgCtrlSpdDec( ::uint8_t value);

  inline  ::uint8_t getLgCtrlSpdInc();
  inline void setLgCtrlSpdInc( ::uint8_t value);

  inline  ::uint8_t getLgCtrlSwStat();
  inline void setLgCtrlSwStat( ::uint8_t value);

  inline  ::uint8_t getCrshWarnDrvrSlectTyp();
  inline void setCrshWarnDrvrSlectTyp( ::uint8_t value);

  inline  ::uint8_t getCrshWarnSeatAvl();
  inline void setCrshWarnSeatAvl( ::uint8_t value);

  inline  ::uint8_t getLgCtrlLmtrSwStat();
  inline void setLgCtrlLmtrSwStat( ::uint8_t value);

  inline  ::uint8_t getTrqIntvnTyp();
  inline void setTrqIntvnTyp( ::uint8_t value);

  inline  ::uint8_t getDrvrDoorOpenM();
  inline void setDrvrDoorOpenM( ::uint8_t value);

  inline  ::uint8_t getDrvrDoorOpen();
  inline void setDrvrDoorOpen( ::uint8_t value);

  inline  ::uint8_t getIPVehSpdUnit();
  inline void setIPVehSpdUnit( ::uint8_t value);

  inline  ::uint8_t getDrvrSBFasten();
  inline void setDrvrSBFasten( ::uint8_t value);

  inline  ::uint8_t getDrvrSBFastenV();
  inline void setDrvrSBFastenV( ::uint8_t value);

  inline  ::uint8_t getEPBStat();
  inline void setEPBStat( ::uint8_t value);

  inline  ::uint8_t getEngRun();
  inline void setEngRun( ::uint8_t value);

  inline  ::uint8_t getEPBCancelLgCtrlRq();
  inline void setEPBCancelLgCtrlRq( ::uint8_t value);

  inline  ::uint8_t getLgCtrlSwActDet();
  inline void setLgCtrlSwActDet( ::uint8_t value);

  inline  ::uint8_t getFCAClnWarnCustSet();
  inline void setFCAClnWarnCustSet( ::uint8_t value);

  inline  ::uint8_t getHaptcSeatVirtDevAvl();
  inline void setHaptcSeatVirtDevAvl( ::uint8_t value);

  inline  ::uint8_t getHeadlampStat();
  inline void setHeadlampStat( ::uint8_t value);

  inline  ::uint8_t getHudVirtDevAvl();
  inline void setHudVirtDevAvl( ::uint8_t value);

  inline  ::uint8_t getHdcStat();
  inline void setHdcStat( ::uint8_t value);

  inline  ::uint8_t getHandsOffMode();
  inline void setHandsOffMode( ::uint8_t value);

  inline  ::uint8_t getHandsOffStat();
  inline void setHandsOffStat( ::uint8_t value);

  inline  ::uint8_t getHandsOffStatV();
  inline void setHandsOffStatV( ::uint8_t value);

  inline  ::uint8_t getHudAct();
  inline void setHudAct( ::uint8_t value);

  inline  ::uint8_t getIpcVirtDevAvl();
  inline void setIpcVirtDevAvl( ::uint8_t value);

  inline  ::uint8_t getLkaTrqOvlDlvdStat();
  inline void setLkaTrqOvlDlvdStat( ::uint8_t value);

  inline  ::uint8_t getPltFrmEngSpdCmdMdAct();
  inline void setPltFrmEngSpdCmdMdAct( ::uint8_t value);

  inline  ::uint8_t getApaAct();
  inline void setApaAct( ::uint8_t value);

  inline  ::uint8_t getApaSwAct();
  inline void setApaSwAct( ::uint8_t value);

  inline  ::uint8_t getPtBrkPedApld();
  inline void setPtBrkPedApld( ::uint8_t value);

  inline  ::uint8_t getPtBrkPedApldV();
  inline void setPtBrkPedApldV( ::uint8_t value);

  inline  ::uint8_t getSecAxlOperMode();
  inline void setSecAxlOperMode( ::uint8_t value);

  inline  ::uint8_t getSecAxlStat();
  inline void setSecAxlStat( ::uint8_t value);

  inline  ::uint8_t getVehCrashTrig();
  inline void setVehCrashTrig( ::uint8_t value);

  inline  ::uint8_t getStrWhAngVirtDevAvl();
  inline void setStrWhAngVirtDevAvl( ::uint8_t value);

  inline  ::uint8_t getStrWhlAngSpdV();
  inline void setStrWhlAngSpdV( ::uint8_t value);

  inline  ::uint8_t getSasCalStat();
  inline void setSasCalStat( ::uint8_t value);

  inline  ::uint8_t getSysPwrModBkup();
  inline void setSysPwrModBkup( ::uint8_t value);

  inline  ::uint8_t getSysPwrModBkupEn();
  inline void setSysPwrModBkupEn( ::uint8_t value);

  inline  ::uint8_t getSysPwrMod();
  inline void setSysPwrMod( ::uint8_t value);

  inline  ::uint8_t getTcsAct();
  inline void setTcsAct( ::uint8_t value);

  inline  ::uint8_t getTcsMod();
  inline void setTcsMod( ::uint8_t value);

  inline  ::uint8_t getTcsStat();
  inline void setTcsStat( ::uint8_t value);

  inline  ::uint8_t getTransEstdGear();
  inline void setTransEstdGear( ::uint8_t value);

  inline  ::uint8_t getTransTUDMdStat();
  inline void setTransTUDMdStat( ::uint8_t value);

  inline  ::uint8_t getTransEngagedStat();
  inline void setTransEngagedStat( ::uint8_t value);

  inline  ::uint8_t getTurnLmpSwPos();
  inline void setTurnLmpSwPos( ::uint8_t value);

  inline  ::uint8_t getIpVehTotDistV();
  inline void setIpVehTotDistV( ::uint8_t value);

  inline  ::uint8_t getVehSpdDrvnAvgV();
  inline void setVehSpdDrvnAvgV( ::uint8_t value);

  inline  ::uint8_t getVehSpdNDrvnAvgV();
  inline void setVehSpdNDrvnAvgV( ::uint8_t value);

  inline  ::uint8_t getVseMod();
  inline void setVseMod( ::uint8_t value);

  inline  ::uint8_t getVseStat();
  inline void setVseStat( ::uint8_t value);

  inline  ::uint8_t getVehDynCntlStat();
  inline void setVehDynCntlStat( ::uint8_t value);

  inline  ::uint8_t getVseAct();
  inline void setVseAct( ::uint8_t value);

  inline  ::uint8_t getLdWheelSpdV();
  inline void setLdWheelSpdV( ::uint8_t value);

  inline  ::uint8_t getLndWheelSpdV();
  inline void setLndWheelSpdV( ::uint8_t value);

  inline  ::uint8_t getRdWheelSpdV();
  inline void setRdWheelSpdV( ::uint8_t value);

  inline  ::uint8_t getRndWheelSpdV();
  inline void setRndWheelSpdV( ::uint8_t value);

  inline  ::uint8_t getLdWheelRotDir();
  inline void setLdWheelRotDir( ::uint8_t value);

  inline  ::uint8_t getLndWheelRotDir();
  inline void setLndWheelRotDir( ::uint8_t value);

  inline  ::uint8_t getRdWheelRotDir();
  inline void setRdWheelRotDir( ::uint8_t value);

  inline  ::uint8_t getRndWheelRotDir();
  inline void setRndWheelRotDir( ::uint8_t value);

  inline  ::uint8_t getLdWhlDistVal();
  inline void setLdWhlDistVal( ::uint8_t value);

  inline  ::uint8_t getLndWhlDistVal();
  inline void setLndWhlDistVal( ::uint8_t value);

  inline  ::uint8_t getRdWhlDistVal();
  inline void setRdWhlDistVal( ::uint8_t value);

  inline  ::uint8_t getRndWhlDistVal();
  inline void setRndWhlDistVal( ::uint8_t value);

  inline  ::uint8_t getWasherWprAct();
  inline void setWasherWprAct( ::uint8_t value);

  inline  ::uint8_t getWasherWprSwAct();
  inline void setWasherWprSwAct( ::uint8_t value);

  inline  ::uint8_t getAutoBrkSysStat();
  inline void setAutoBrkSysStat( ::uint8_t value);

  inline  ::uint8_t getBrkSysExtHoldFail();
  inline void setBrkSysExtHoldFail( ::uint8_t value);

  inline  ::uint8_t getAutoBrkSysInhLgCntl();
  inline void setAutoBrkSysInhLgCntl( ::uint8_t value);

  inline  ::uint8_t getMstrIMULatAccV();
  inline void setMstrIMULatAccV( ::uint8_t value);

  inline  ::uint8_t getMstrIMULongAccV();
  inline void setMstrIMULongAccV( ::uint8_t value);

  inline  ::uint8_t getMstrIMULongAccAvl();
  inline void setMstrIMULongAccAvl( ::uint8_t value);

  inline  ::uint8_t getMstrIMUYawRateV();
  inline void setMstrIMUYawRateV( ::uint8_t value);

  inline  ::uint8_t getVehMovementStat();
  inline void setVehMovementStat( ::uint8_t value);

  inline  ::uint8_t getLgSafeVRUCusSet();
  inline void setLgSafeVRUCusSet( ::uint8_t value);

  inline  ::uint8_t getGearLeverPosn();
  inline void setGearLeverPosn( ::uint8_t value);

  inline  ::uint8_t getLdpMode();
  inline void setLdpMode( ::uint8_t value);

  inline  ::uint8_t getTjaSelect();
  inline void setTjaSelect( ::uint8_t value);

  inline  ::uint8_t getWindShieldWprAct();
  inline void setWindShieldWprAct( ::uint8_t value);

  inline  ::uint8_t getCollPrepSysInhbt();
  inline void setCollPrepSysInhbt( ::uint8_t value);

  inline  ::uint8_t getTsrAlertSw();
  inline void setTsrAlertSw( ::uint8_t value);

  inline  ::uint8_t getTsrSw();
  inline void setTsrSw( ::uint8_t value);

  inline  ::uint8_t getFrntFogLmpStat();
  inline void setFrntFogLmpStat( ::uint8_t value);

  inline  ::uint8_t getHlBeamSwStat();
  inline void setHlBeamSwStat( ::uint8_t value);

  inline  ::uint8_t getAhbcSwStat();
  inline void setAhbcSwStat( ::uint8_t value);

  inline  ::uint8_t getPsngrDoorAjarSt();
  inline void setPsngrDoorAjarSt( ::uint8_t value);

  inline  ::uint8_t getRlDoorAjarSt();
  inline void setRlDoorAjarSt( ::uint8_t value);

  inline  ::uint8_t getRrDoorAjarSt();
  inline void setRrDoorAjarSt( ::uint8_t value);

  inline  ::uint8_t getDowSwitchReq();
  inline void setDowSwitchReq( ::uint8_t value);

  inline  ::uint8_t getLcaBSDSwitchReq();
  inline void setLcaBSDSwitchReq( ::uint8_t value);

  inline  ::uint8_t getRctaSwitchReq();
  inline void setRctaSwitchReq( ::uint8_t value);

  inline  ::uint8_t getRecwSwitchReq();
  inline void setRecwSwitchReq( ::uint8_t value);

  inline  ::uint8_t getFctaSwitchReq();
  inline void setFctaSwitchReq( ::uint8_t value);

  inline  ::uint8_t getDriverDoorLockSt();
  inline void setDriverDoorLockSt( ::uint8_t value);

  inline  ::uint8_t getPsngrDoorLockSt();
  inline void setPsngrDoorLockSt( ::uint8_t value);

  inline  ::uint8_t getTruckAjarSt();
  inline void setTruckAjarSt( ::uint8_t value);

  inline  ::uint8_t getInsideGeofence();
  inline void setInsideGeofence( ::uint8_t value);

  inline  ::uint8_t getBrkPdlType();
  inline void setBrkPdlType( ::uint8_t value);

  inline  ::uint8_t getTurnlgtSwSt();
  inline void setTurnlgtSwSt( ::uint8_t value);

  inline  ::uint8_t getDaytime();
  inline void setDaytime( ::uint8_t value);

  inline  ::uint8_t getLatSafeSnvtySet();
  inline void setLatSafeSnvtySet( ::uint8_t value);

  inline  ::uint8_t getIsaSw();
  inline void setIsaSw( ::uint8_t value);

  inline  ::uint8_t getSteerMod();
  inline void setSteerMod( ::uint8_t value);

  inline  ::int8_t getTsrSnvtySet();
  inline void setTsrSnvtySet( ::int8_t value);

  inline  ::uint8_t getHazLightStat();
  inline void setHazLightStat( ::uint8_t value);

  inline  ::uint8_t getFcwSnvtySet();
  inline void setFcwSnvtySet( ::uint8_t value);

  inline  ::uint8_t getLgSafeJACusSet();
  inline void setLgSafeJACusSet( ::uint8_t value);

  inline  ::uint8_t getVehAutoLightCtrlStat();
  inline void setVehAutoLightCtrlStat( ::uint8_t value);

  inline  ::uint8_t getCcoAct();
  inline void setCcoAct( ::uint8_t value);

  inline  ::uint8_t getLgCtrlDrvMod();
  inline void setLgCtrlDrvMod( ::uint8_t value);

  inline  ::uint8_t getEcoPlusMod();
  inline void setEcoPlusMod( ::uint8_t value);

  inline  ::uint8_t getVehMaxSpdLimtKph();
  inline void setVehMaxSpdLimtKph( ::uint8_t value);

  inline  ::uint8_t getDfwSw();
  inline void setDfwSw( ::uint8_t value);

  inline  ::uint8_t getLTurnLmpFaultStat();
  inline void setLTurnLmpFaultStat( ::uint8_t value);

  inline  ::uint8_t getRTurnLmpFaultStat();
  inline void setRTurnLmpFaultStat( ::uint8_t value);

  inline  ::uint8_t getHodError();
  inline void setHodError( ::uint8_t value);

  inline  ::uint8_t getHodStat();
  inline void setHodStat( ::uint8_t value);

  inline  ::uint8_t getTirePresrFault();
  inline void setTirePresrFault( ::uint8_t value);

  inline  ::uint8_t getWheelDirForwrdFlg();
  inline void setWheelDirForwrdFlg( ::uint8_t value);

  inline  ::uint8_t getAbsESPActvInhbtLat();
  inline void setAbsESPActvInhbtLat( ::uint8_t value);

  inline  ::uint8_t getRearFogLmpStat();
  inline void setRearFogLmpStat( ::uint8_t value);

  inline  ::uint8_t getLgSafeJAPedCusSet();
  inline void setLgSafeJAPedCusSet( ::uint8_t value);

  inline  ::uint8_t getFcaVRUWarnCustSet();
  inline void setFcaVRUWarnCustSet( ::uint8_t value);

  inline  ::uint8_t getAlcSw();
  inline void setAlcSw( ::uint8_t value);

  inline  ::uint8_t getLgCtrlTimeGapSetLst();
  inline void setLgCtrlTimeGapSetLst( ::uint8_t value);

  inline  ::uint8_t getTlrSw();
  inline void setTlrSw( ::uint8_t value);

  inline  ::uint8_t getDrvrID();
  inline void setDrvrID( ::uint8_t value);

  inline  ::uint8_t getTsrSpdLimtValue();
  inline void setTsrSpdLimtValue( ::uint8_t value);

  inline  ::uint8_t getLkaLstCtrlVal();
  inline void setLkaLstCtrlVal( ::uint8_t value);

  inline  ::uint8_t getTjaSetSw();
  inline void setTjaSetSw( ::uint8_t value);

  inline  ::uint8_t getGoNotifCustSet();
  inline void setGoNotifCustSet( ::uint8_t value);

  inline  ::uint8_t getUssFollowSt();
  inline void setUssFollowSt( ::uint8_t value);

  inline  ::uint8_t getTurnLightSt();
  inline void setTurnLightSt( ::uint8_t value);

  inline  ::uint8_t getEmsAccButtInfo();
  inline void setEmsAccButtInfo( ::uint8_t value);

  inline  ::uint8_t getAutoBrkSysAvailMask();
  inline void setAutoBrkSysAvailMask( ::uint8_t value);

  inline  ::uint8_t getAutoBrkSysAtvMask();
  inline void setAutoBrkSysAtvMask( ::uint8_t value);

  inline  ::uint8_t getBcsPrimBrkActiveSt();
  inline void setBcsPrimBrkActiveSt( ::uint8_t value);

  inline  ::uint8_t getBcsVehicleStandStillSt();
  inline void setBcsVehicleStandStillSt( ::uint8_t value);

  inline  ::uint8_t getBcsFLWheelRotatedDirection();
  inline void setBcsFLWheelRotatedDirection( ::uint8_t value);

  inline  ::uint8_t getBcsFRWheelRotatedDirection();
  inline void setBcsFRWheelRotatedDirection( ::uint8_t value);

  inline  ::uint8_t getBcsRLWheelRotatedDirection();
  inline void setBcsRLWheelRotatedDirection( ::uint8_t value);

  inline  ::uint8_t getBcsRRWheelRotatedDirection();
  inline void setBcsRRWheelRotatedDirection( ::uint8_t value);

  inline  ::uint8_t getUnusedUint81();
  inline void setUnusedUint81( ::uint8_t value);

  inline  ::uint8_t getUnusedUint82();
  inline void setUnusedUint82( ::uint8_t value);

  inline  ::uint8_t getUnusedUint83();
  inline void setUnusedUint83( ::uint8_t value);

  inline  ::uint8_t getUnusedUint84();
  inline void setUnusedUint84( ::uint8_t value);

  inline bool hasHeader();
  inline  ::senseAD::msg::std_msgs::Header::Builder getHeader();
  inline void setHeader( ::senseAD::msg::std_msgs::Header::Reader value);
  inline  ::senseAD::msg::std_msgs::Header::Builder initHeader();
  inline void adoptHeader(::capnp::Orphan< ::senseAD::msg::std_msgs::Header>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Header> disownHeader();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class FromVehicle::Pipeline {
public:
  typedef FromVehicle Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::tap::VcanSRRSignal::Pipeline getVcanSRRSignal();
  inline  ::senseAD::msg::tap::NavSignal::Pipeline getNavSignal();
  inline  ::senseAD::msg::std_msgs::Header::Pipeline getHeader();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

inline  ::uint8_t Rsds::Reader::getObjId() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Rsds::Builder::getObjId() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void Rsds::Builder::setObjId( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline float Rsds::Reader::getObjLongPosCurvi() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline float Rsds::Builder::getObjLongPosCurvi() {
  return _builder.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void Rsds::Builder::setObjLongPosCurvi(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline float Rsds::Reader::getObjLatPosCurvi() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline float Rsds::Builder::getObjLatPosCurvi() {
  return _builder.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void Rsds::Builder::setObjLatPosCurvi(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline float Rsds::Reader::getObjLongVelCurvi() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline float Rsds::Builder::getObjLongVelCurvi() {
  return _builder.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void Rsds::Builder::setObjLongVelCurvi(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline float Rsds::Reader::getObjLatVelCurvi() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline float Rsds::Builder::getObjLatVelCurvi() {
  return _builder.getDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void Rsds::Builder::setObjLatVelCurvi(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline float Rsds::Reader::getObjTtc() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline float Rsds::Builder::getObjTtc() {
  return _builder.getDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void Rsds::Builder::setObjTtc(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Rsds::Reader::getObjLength() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Rsds::Builder::getObjLength() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void Rsds::Builder::setObjLength( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline float Rsds::Reader::getObjWidth() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline float Rsds::Builder::getObjWidth() {
  return _builder.getDataField<float>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void Rsds::Builder::setObjWidth(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Rsds::Reader::getObjStationary() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Rsds::Builder::getObjStationary() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void Rsds::Builder::setObjStationary( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Rsds::Reader::getZoneInd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Rsds::Builder::getZoneInd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void Rsds::Builder::setZoneInd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Rsds::Reader::getObjStatus() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<28>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Rsds::Builder::getObjStatus() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<28>() * ::capnp::ELEMENTS);
}
inline void Rsds::Builder::setObjStatus( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<28>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t RsdsR1::Reader::getBliStatus() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t RsdsR1::Builder::getBliStatus() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void RsdsR1::Builder::setBliStatus( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t RsdsR1::Reader::getLcaCtaRcwErrorSts() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t RsdsR1::Builder::getLcaCtaRcwErrorSts() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void RsdsR1::Builder::setLcaCtaRcwErrorSts( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t RsdsR1::Reader::getRiTarSts() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t RsdsR1::Builder::getRiTarSts() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void RsdsR1::Builder::setRiTarSts( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t RsdsR1::Reader::getLeTarSts() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t RsdsR1::Builder::getLeTarSts() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void RsdsR1::Builder::setLeTarSts( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline bool VcanSRRSignal::Reader::hasRsdsL2() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool VcanSRRSignal::Builder::hasRsdsL2() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::Rsds::Reader VcanSRRSignal::Reader::getRsdsL2() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Rsds>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::Rsds::Builder VcanSRRSignal::Builder::getRsdsL2() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Rsds>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::Rsds::Pipeline VcanSRRSignal::Pipeline::getRsdsL2() {
  return  ::senseAD::msg::tap::Rsds::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void VcanSRRSignal::Builder::setRsdsL2( ::senseAD::msg::tap::Rsds::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Rsds>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::Rsds::Builder VcanSRRSignal::Builder::initRsdsL2() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Rsds>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void VcanSRRSignal::Builder::adoptRsdsL2(
    ::capnp::Orphan< ::senseAD::msg::tap::Rsds>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Rsds>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::Rsds> VcanSRRSignal::Builder::disownRsdsL2() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Rsds>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool VcanSRRSignal::Reader::hasRsdsR2() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool VcanSRRSignal::Builder::hasRsdsR2() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::Rsds::Reader VcanSRRSignal::Reader::getRsdsR2() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Rsds>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::Rsds::Builder VcanSRRSignal::Builder::getRsdsR2() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Rsds>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::Rsds::Pipeline VcanSRRSignal::Pipeline::getRsdsR2() {
  return  ::senseAD::msg::tap::Rsds::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void VcanSRRSignal::Builder::setRsdsR2( ::senseAD::msg::tap::Rsds::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Rsds>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::Rsds::Builder VcanSRRSignal::Builder::initRsdsR2() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Rsds>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void VcanSRRSignal::Builder::adoptRsdsR2(
    ::capnp::Orphan< ::senseAD::msg::tap::Rsds>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Rsds>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::Rsds> VcanSRRSignal::Builder::disownRsdsR2() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Rsds>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool VcanSRRSignal::Reader::hasRsdsR1() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool VcanSRRSignal::Builder::hasRsdsR1() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::RsdsR1::Reader VcanSRRSignal::Reader::getRsdsR1() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::RsdsR1>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::RsdsR1::Builder VcanSRRSignal::Builder::getRsdsR1() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::RsdsR1>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::RsdsR1::Pipeline VcanSRRSignal::Pipeline::getRsdsR1() {
  return  ::senseAD::msg::tap::RsdsR1::Pipeline(_typeless.getPointerField(2));
}
#endif  // !CAPNP_LITE
inline void VcanSRRSignal::Builder::setRsdsR1( ::senseAD::msg::tap::RsdsR1::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::RsdsR1>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::RsdsR1::Builder VcanSRRSignal::Builder::initRsdsR1() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::RsdsR1>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void VcanSRRSignal::Builder::adoptRsdsR1(
    ::capnp::Orphan< ::senseAD::msg::tap::RsdsR1>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::RsdsR1>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::RsdsR1> VcanSRRSignal::Builder::disownRsdsR1() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::RsdsR1>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline  ::uint8_t NavSignal::Reader::getNavTSRTrafSgn() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t NavSignal::Builder::getNavTSRTrafSgn() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void NavSignal::Builder::setNavTSRTrafSgn( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t NavSignal::Reader::getNavSpdLimSgnStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t NavSignal::Builder::getNavSpdLimSgnStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void NavSignal::Builder::setNavSpdLimSgnStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t NavSignal::Reader::getNavCtryTyp() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t NavSignal::Builder::getNavCtryTyp() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void NavSignal::Builder::setNavCtryTyp( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t NavSignal::Reader::getNavSpdLimtUnit() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t NavSignal::Builder::getNavSpdLimtUnit() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void NavSignal::Builder::setNavSpdLimtUnit( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t NavSignal::Reader::getNavSpdLimtValue() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t NavSignal::Builder::getNavSpdLimtValue() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void NavSignal::Builder::setNavSpdLimtValue( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t NavSignal::Reader::getNavSpdLimyTyp() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t NavSignal::Builder::getNavSpdLimyTyp() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void NavSignal::Builder::setNavSpdLimyTyp( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t NavSignal::Reader::getNavRoadTyp() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t NavSignal::Builder::getNavRoadTyp() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void NavSignal::Builder::setNavRoadTyp( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t NavSignal::Reader::getNavStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t NavSignal::Builder::getNavStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void NavSignal::Builder::setNavStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline float NavSignal::Reader::getNavTSRTrafSgnDist() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline float NavSignal::Builder::getNavTSRTrafSgnDist() {
  return _builder.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void NavSignal::Builder::setNavTSRTrafSgnDist(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline float NavSignal::Reader::getNavISDRestOfdis() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline float NavSignal::Builder::getNavISDRestOfdis() {
  return _builder.getDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void NavSignal::Builder::setNavISDRestOfdis(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline float NavSignal::Reader::getNavSLCAheadDis() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline float NavSignal::Builder::getNavSLCAheadDis() {
  return _builder.getDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void NavSignal::Builder::setNavSLCAheadDis(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t NavSignal::Reader::getNavOffRampStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t NavSignal::Builder::getNavOffRampStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}
inline void NavSignal::Builder::setNavOffRampStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS, value);
}

inline float NavSignal::Reader::getNavOffRampDist() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline float NavSignal::Builder::getNavOffRampDist() {
  return _builder.getDataField<float>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void NavSignal::Builder::setNavOffRampDist(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline bool FromVehicle::Reader::hasVcanSRRSignal() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool FromVehicle::Builder::hasVcanSRRSignal() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::VcanSRRSignal::Reader FromVehicle::Reader::getVcanSRRSignal() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::VcanSRRSignal>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::VcanSRRSignal::Builder FromVehicle::Builder::getVcanSRRSignal() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::VcanSRRSignal>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::VcanSRRSignal::Pipeline FromVehicle::Pipeline::getVcanSRRSignal() {
  return  ::senseAD::msg::tap::VcanSRRSignal::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void FromVehicle::Builder::setVcanSRRSignal( ::senseAD::msg::tap::VcanSRRSignal::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::VcanSRRSignal>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::VcanSRRSignal::Builder FromVehicle::Builder::initVcanSRRSignal() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::VcanSRRSignal>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void FromVehicle::Builder::adoptVcanSRRSignal(
    ::capnp::Orphan< ::senseAD::msg::tap::VcanSRRSignal>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::VcanSRRSignal>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::VcanSRRSignal> FromVehicle::Builder::disownVcanSRRSignal() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::VcanSRRSignal>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool FromVehicle::Reader::hasNavSignal() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool FromVehicle::Builder::hasNavSignal() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::NavSignal::Reader FromVehicle::Reader::getNavSignal() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::NavSignal>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::NavSignal::Builder FromVehicle::Builder::getNavSignal() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::NavSignal>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::NavSignal::Pipeline FromVehicle::Pipeline::getNavSignal() {
  return  ::senseAD::msg::tap::NavSignal::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void FromVehicle::Builder::setNavSignal( ::senseAD::msg::tap::NavSignal::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::NavSignal>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::NavSignal::Builder FromVehicle::Builder::initNavSignal() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::NavSignal>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void FromVehicle::Builder::adoptNavSignal(
    ::capnp::Orphan< ::senseAD::msg::tap::NavSignal>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::NavSignal>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::NavSignal> FromVehicle::Builder::disownNavSignal() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::NavSignal>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline float FromVehicle::Reader::getAccelPedPos() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getAccelPedPos() {
  return _builder.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setAccelPedPos(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getAudioTgtSpeed() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getAudioTgtSpeed() {
  return _builder.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setAudioTgtSpeed(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getVehicleSpeedDisplay() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getVehicleSpeedDisplay() {
  return _builder.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setVehicleSpeedDisplay(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getLongAccel() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getLongAccel() {
  return _builder.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLongAccel(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getBrkPedalPos() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getBrkPedalPos() {
  return _builder.getDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setBrkPedalPos(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getEngSpd() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getEngSpd() {
  return _builder.getDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setEngSpd(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getEngTrqActual() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getEngTrqActual() {
  return _builder.getDataField<float>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setEngTrqActual(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getEngTrqMax() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getEngTrqMax() {
  return _builder.getDataField<float>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setEngTrqMax(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getEngTrqMin() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getEngTrqMin() {
  return _builder.getDataField<float>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setEngTrqMin(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getEngTrqDrvrRqd() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getEngTrqDrvrRqd() {
  return _builder.getDataField<float>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setEngTrqDrvrRqd(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getIpVehTotDist() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getIpVehTotDist() {
  return _builder.getDataField<float>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setIpVehTotDist(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getLdWheelSpd() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getLdWheelSpd() {
  return _builder.getDataField<float>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLdWheelSpd(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getLndWheelSpd() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getLndWheelSpd() {
  return _builder.getDataField<float>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLndWheelSpd(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getMstrIMULatAcc() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getMstrIMULatAcc() {
  return _builder.getDataField<float>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setMstrIMULatAcc(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getMstrIMULongAcc() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getMstrIMULongAcc() {
  return _builder.getDataField<float>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setMstrIMULongAcc(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getMstrIMUYawRate() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getMstrIMUYawRate() {
  return _builder.getDataField<float>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setMstrIMUYawRate(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getRdLdNomAxlTrq() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getRdLdNomAxlTrq() {
  return _builder.getDataField<float>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setRdLdNomAxlTrq(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getVcuRecpTorq() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getVcuRecpTorq() {
  return _builder.getDataField<float>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setVcuRecpTorq(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getRdWheelSpd() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getRdWheelSpd() {
  return _builder.getDataField<float>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setRdWheelSpd(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getRndWheelSpd() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getRndWheelSpd() {
  return _builder.getDataField<float>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setRndWheelSpd(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getStrWhlAng() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<20>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getStrWhlAng() {
  return _builder.getDataField<float>(
      ::capnp::bounded<20>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setStrWhlAng(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<20>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getStrWhlAngleComp() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<21>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getStrWhlAngleComp() {
  return _builder.getDataField<float>(
      ::capnp::bounded<21>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setStrWhlAngleComp(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<21>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getSubStrWhlAng() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<22>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getSubStrWhlAng() {
  return _builder.getDataField<float>(
      ::capnp::bounded<22>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setSubStrWhlAng(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<22>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getSubIMUYawRate() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<23>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getSubIMUYawRate() {
  return _builder.getDataField<float>(
      ::capnp::bounded<23>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setSubIMUYawRate(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<23>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getSubIMULatAcc() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getSubIMULatAcc() {
  return _builder.getDataField<float>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setSubIMULatAcc(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getSubIMULongAcc() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<25>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getSubIMULongAcc() {
  return _builder.getDataField<float>(
      ::capnp::bounded<25>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setSubIMULongAcc(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<25>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getTorsionBarTrq() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<26>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getTorsionBarTrq() {
  return _builder.getDataField<float>(
      ::capnp::bounded<26>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setTorsionBarTrq(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<26>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getTsrDispDist() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<27>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getTsrDispDist() {
  return _builder.getDataField<float>(
      ::capnp::bounded<27>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setTsrDispDist(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<27>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getVehSpdDrvnAvg() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<28>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getVehSpdDrvnAvg() {
  return _builder.getDataField<float>(
      ::capnp::bounded<28>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setVehSpdDrvnAvg(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<28>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getVehSpdNDrvnAvg() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<29>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getVehSpdNDrvnAvg() {
  return _builder.getDataField<float>(
      ::capnp::bounded<29>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setVehSpdNDrvnAvg(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<29>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getBcsFLWheelSpdEdgesSum() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<30>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getBcsFLWheelSpdEdgesSum() {
  return _builder.getDataField<float>(
      ::capnp::bounded<30>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setBcsFLWheelSpdEdgesSum(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<30>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getBcsFRWheelSpdEdgesSum() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<31>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getBcsFRWheelSpdEdgesSum() {
  return _builder.getDataField<float>(
      ::capnp::bounded<31>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setBcsFRWheelSpdEdgesSum(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<31>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getBcsRLWheelSpdEdgesSum() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<32>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getBcsRLWheelSpdEdgesSum() {
  return _builder.getDataField<float>(
      ::capnp::bounded<32>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setBcsRLWheelSpdEdgesSum(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<32>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getBcsRRWheelSpdEdgesSum() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<33>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getBcsRRWheelSpdEdgesSum() {
  return _builder.getDataField<float>(
      ::capnp::bounded<33>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setBcsRRWheelSpdEdgesSum(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<33>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getFlWheelSpdMps() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<34>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getFlWheelSpdMps() {
  return _builder.getDataField<float>(
      ::capnp::bounded<34>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setFlWheelSpdMps(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<34>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getFrWheelSpdMps() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<35>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getFrWheelSpdMps() {
  return _builder.getDataField<float>(
      ::capnp::bounded<35>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setFrWheelSpdMps(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<35>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getRlWheelSpdMps() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<36>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getRlWheelSpdMps() {
  return _builder.getDataField<float>(
      ::capnp::bounded<36>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setRlWheelSpdMps(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<36>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getRrWheelSpdMps() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<37>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getRrWheelSpdMps() {
  return _builder.getDataField<float>(
      ::capnp::bounded<37>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setRrWheelSpdMps(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<37>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getMasterCylinderPrs() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<38>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getMasterCylinderPrs() {
  return _builder.getDataField<float>(
      ::capnp::bounded<38>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setMasterCylinderPrs(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<38>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getUnusedSingle1() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<39>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getUnusedSingle1() {
  return _builder.getDataField<float>(
      ::capnp::bounded<39>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setUnusedSingle1(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<39>() * ::capnp::ELEMENTS, value);
}

inline float FromVehicle::Reader::getUnusedSingle2() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<40>() * ::capnp::ELEMENTS);
}

inline float FromVehicle::Builder::getUnusedSingle2() {
  return _builder.getDataField<float>(
      ::capnp::bounded<40>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setUnusedSingle2(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<40>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t FromVehicle::Reader::getDrvrReqAxlTrq() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<41>() * ::capnp::ELEMENTS);
}

inline  ::int32_t FromVehicle::Builder::getDrvrReqAxlTrq() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<41>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setDrvrReqAxlTrq( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<41>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t FromVehicle::Reader::getDrvrReqAxlTrqMax() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<42>() * ::capnp::ELEMENTS);
}

inline  ::int32_t FromVehicle::Builder::getDrvrReqAxlTrqMax() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<42>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setDrvrReqAxlTrqMax( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<42>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t FromVehicle::Reader::getDrvrReqAxlTrqMin() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<43>() * ::capnp::ELEMENTS);
}

inline  ::int32_t FromVehicle::Builder::getDrvrReqAxlTrqMin() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<43>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setDrvrReqAxlTrqMin( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<43>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t FromVehicle::Reader::getFunctionDIDConfig() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<44>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t FromVehicle::Builder::getFunctionDIDConfig() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<44>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setFunctionDIDConfig( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<44>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t FromVehicle::Reader::getYawRateTimestampMs() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<45>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t FromVehicle::Builder::getYawRateTimestampMs() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<45>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setYawRateTimestampMs( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<45>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t FromVehicle::Reader::getBrkPdlDrvrApldPrs() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<92>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t FromVehicle::Builder::getBrkPdlDrvrApldPrs() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<92>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setBrkPdlDrvrApldPrs( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<92>() * ::capnp::ELEMENTS, value);
}

inline  ::int16_t FromVehicle::Reader::getStrWhlAngSpd() const {
  return _reader.getDataField< ::int16_t>(
      ::capnp::bounded<93>() * ::capnp::ELEMENTS);
}

inline  ::int16_t FromVehicle::Builder::getStrWhlAngSpd() {
  return _builder.getDataField< ::int16_t>(
      ::capnp::bounded<93>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setStrWhlAngSpd( ::int16_t value) {
  _builder.setDataField< ::int16_t>(
      ::capnp::bounded<93>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t FromVehicle::Reader::getVehMassKg() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<94>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t FromVehicle::Builder::getVehMassKg() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<94>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setVehMassKg( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<94>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t FromVehicle::Reader::getWhlDistPerRevDrvn() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<95>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t FromVehicle::Builder::getWhlDistPerRevDrvn() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<95>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setWhlDistPerRevDrvn( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<95>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t FromVehicle::Reader::getLdWhlDistPlsCntr() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<96>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t FromVehicle::Builder::getLdWhlDistPlsCntr() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<96>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLdWhlDistPlsCntr( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<96>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t FromVehicle::Reader::getLndWhlDistPCntr() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<97>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t FromVehicle::Builder::getLndWhlDistPCntr() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<97>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLndWhlDistPCntr( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<97>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t FromVehicle::Reader::getRdWhlDistPlsCntr() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<98>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t FromVehicle::Builder::getRdWhlDistPlsCntr() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<98>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setRdWhlDistPlsCntr( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<98>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t FromVehicle::Reader::getRndWhlDistPCntr() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<99>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t FromVehicle::Builder::getRndWhlDistPCntr() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<99>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setRndWhlDistPCntr( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<99>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t FromVehicle::Reader::getSubRDWhlDistPlsCntr() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<100>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t FromVehicle::Builder::getSubRDWhlDistPlsCntr() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<100>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setSubRDWhlDistPlsCntr( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<100>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t FromVehicle::Reader::getSubLDWhlDistPlsCntr() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<101>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t FromVehicle::Builder::getSubLDWhlDistPlsCntr() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<101>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setSubLDWhlDistPlsCntr( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<101>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t FromVehicle::Reader::getSubRNDWhlDistPCntr() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<102>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t FromVehicle::Builder::getSubRNDWhlDistPCntr() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<102>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setSubRNDWhlDistPCntr( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<102>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t FromVehicle::Reader::getSubLNDWhlDistPCntr() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<103>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t FromVehicle::Builder::getSubLNDWhlDistPCntr() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<103>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setSubLNDWhlDistPCntr( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<103>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getEngSpdStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<208>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getEngSpdStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<208>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setEngSpdStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<208>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLgCtrlTrqLmtStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<209>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLgCtrlTrqLmtStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<209>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLgCtrlTrqLmtStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<209>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getAccelPedPosV() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<210>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getAccelPedPosV() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<210>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setAccelPedPosV( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<210>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getAbsActive() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<211>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getAbsActive() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<211>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setAbsActive( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<211>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLgCtrlPTAccReqSprcd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<212>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLgCtrlPTAccReqSprcd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<212>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLgCtrlPTAccReqSprcd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<212>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLgCtrlTrqRqStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<213>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLgCtrlTrqRqStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<213>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLgCtrlTrqRqStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<213>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLgCtrlBrakeAct() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<214>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLgCtrlBrakeAct() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<214>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLgCtrlBrakeAct( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<214>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getAccPdlOvrdAct() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<215>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getAccPdlOvrdAct() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<215>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setAccPdlOvrdAct( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<215>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLongAccelV() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<216>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLongAccelV() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<216>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLongAccelV( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<216>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLgCtrlTimeGapSw() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<217>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLgCtrlTimeGapSw() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<217>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLgCtrlTimeGapSw( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<217>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getAirbagVirtDevAvl() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<218>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getAirbagVirtDevAvl() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<218>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setAirbagVirtDevAvl( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<218>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getAutoBrakeAct() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<219>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getAutoBrakeAct() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<219>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setAutoBrakeAct( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<219>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getAutoTransCmdGear() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<220>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getAutoTransCmdGear() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<220>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setAutoTransCmdGear( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<220>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getBrksOvheat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<221>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getBrksOvheat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<221>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setBrksOvheat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<221>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getBrkSnsrCalbrd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<222>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getBrkSnsrCalbrd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<222>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setBrkSnsrCalbrd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<222>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getBrkPedDrvrApldPrsDetcd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<223>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getBrkPedDrvrApldPrsDetcd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<223>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setBrkPedDrvrApldPrsDetcd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<223>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getBrkPedDrvrApldPrsDetcdV() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<224>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getBrkPedDrvrApldPrsDetcdV() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<224>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setBrkPedDrvrApldPrsDetcdV( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<224>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getBrkPedalPrsd() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<225>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getBrkPedalPrsd() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<225>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setBrkPedalPrsd( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<225>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getBrkPedalPrsdV() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<226>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getBrkPedalPrsdV() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<226>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setBrkPedalPrsdV( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<226>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getAutoBrkSysFail() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<227>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getAutoBrkSysFail() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<227>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setAutoBrkSysFail( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<227>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getChimeVirtDevAvl() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<228>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getChimeVirtDevAvl() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<228>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setChimeVirtDevAvl( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<228>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLgSafeVehCusSet() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<229>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLgSafeVehCusSet() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<229>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLgSafeVehCusSet( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<229>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLgCtrlEnbld() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<230>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLgCtrlEnbld() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<230>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLgCtrlEnbld( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<230>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLgCtrlCancelSw() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<231>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLgCtrlCancelSw() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<231>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLgCtrlCancelSw( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<231>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLgCtrlMainSw() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<232>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLgCtrlMainSw() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<232>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLgCtrlMainSw( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<232>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLgCtrlResSw() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<233>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLgCtrlResSw() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<233>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLgCtrlResSw( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<233>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLgCtrlSetSw() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<234>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLgCtrlSetSw() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<234>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLgCtrlSetSw( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<234>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLgCtrlSpdDec() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<235>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLgCtrlSpdDec() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<235>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLgCtrlSpdDec( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<235>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLgCtrlSpdInc() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<236>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLgCtrlSpdInc() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<236>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLgCtrlSpdInc( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<236>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLgCtrlSwStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<237>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLgCtrlSwStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<237>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLgCtrlSwStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<237>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getCrshWarnDrvrSlectTyp() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<238>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getCrshWarnDrvrSlectTyp() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<238>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setCrshWarnDrvrSlectTyp( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<238>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getCrshWarnSeatAvl() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<239>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getCrshWarnSeatAvl() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<239>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setCrshWarnSeatAvl( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<239>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLgCtrlLmtrSwStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<240>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLgCtrlLmtrSwStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<240>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLgCtrlLmtrSwStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<240>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getTrqIntvnTyp() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<241>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getTrqIntvnTyp() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<241>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setTrqIntvnTyp( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<241>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getDrvrDoorOpenM() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<242>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getDrvrDoorOpenM() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<242>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setDrvrDoorOpenM( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<242>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getDrvrDoorOpen() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<243>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getDrvrDoorOpen() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<243>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setDrvrDoorOpen( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<243>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getIPVehSpdUnit() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<244>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getIPVehSpdUnit() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<244>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setIPVehSpdUnit( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<244>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getDrvrSBFasten() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<245>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getDrvrSBFasten() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<245>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setDrvrSBFasten( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<245>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getDrvrSBFastenV() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<246>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getDrvrSBFastenV() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<246>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setDrvrSBFastenV( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<246>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getEPBStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<247>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getEPBStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<247>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setEPBStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<247>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getEngRun() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<248>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getEngRun() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<248>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setEngRun( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<248>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getEPBCancelLgCtrlRq() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<249>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getEPBCancelLgCtrlRq() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<249>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setEPBCancelLgCtrlRq( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<249>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLgCtrlSwActDet() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<250>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLgCtrlSwActDet() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<250>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLgCtrlSwActDet( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<250>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getFCAClnWarnCustSet() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<251>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getFCAClnWarnCustSet() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<251>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setFCAClnWarnCustSet( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<251>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getHaptcSeatVirtDevAvl() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<252>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getHaptcSeatVirtDevAvl() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<252>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setHaptcSeatVirtDevAvl( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<252>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getHeadlampStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<253>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getHeadlampStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<253>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setHeadlampStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<253>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getHudVirtDevAvl() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<254>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getHudVirtDevAvl() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<254>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setHudVirtDevAvl( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<254>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getHdcStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<255>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getHdcStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<255>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setHdcStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<255>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getHandsOffMode() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<256>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getHandsOffMode() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<256>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setHandsOffMode( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<256>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getHandsOffStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<257>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getHandsOffStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<257>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setHandsOffStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<257>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getHandsOffStatV() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<258>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getHandsOffStatV() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<258>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setHandsOffStatV( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<258>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getHudAct() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<259>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getHudAct() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<259>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setHudAct( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<259>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getIpcVirtDevAvl() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<260>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getIpcVirtDevAvl() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<260>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setIpcVirtDevAvl( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<260>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLkaTrqOvlDlvdStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<261>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLkaTrqOvlDlvdStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<261>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLkaTrqOvlDlvdStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<261>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getPltFrmEngSpdCmdMdAct() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<262>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getPltFrmEngSpdCmdMdAct() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<262>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setPltFrmEngSpdCmdMdAct( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<262>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getApaAct() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<263>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getApaAct() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<263>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setApaAct( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<263>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getApaSwAct() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<264>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getApaSwAct() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<264>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setApaSwAct( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<264>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getPtBrkPedApld() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<265>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getPtBrkPedApld() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<265>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setPtBrkPedApld( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<265>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getPtBrkPedApldV() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<266>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getPtBrkPedApldV() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<266>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setPtBrkPedApldV( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<266>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getSecAxlOperMode() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<267>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getSecAxlOperMode() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<267>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setSecAxlOperMode( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<267>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getSecAxlStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<268>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getSecAxlStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<268>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setSecAxlStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<268>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getVehCrashTrig() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<269>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getVehCrashTrig() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<269>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setVehCrashTrig( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<269>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getStrWhAngVirtDevAvl() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<270>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getStrWhAngVirtDevAvl() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<270>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setStrWhAngVirtDevAvl( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<270>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getStrWhlAngSpdV() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<271>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getStrWhlAngSpdV() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<271>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setStrWhlAngSpdV( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<271>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getSasCalStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<272>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getSasCalStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<272>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setSasCalStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<272>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getSysPwrModBkup() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<273>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getSysPwrModBkup() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<273>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setSysPwrModBkup( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<273>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getSysPwrModBkupEn() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<274>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getSysPwrModBkupEn() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<274>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setSysPwrModBkupEn( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<274>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getSysPwrMod() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<275>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getSysPwrMod() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<275>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setSysPwrMod( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<275>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getTcsAct() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<276>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getTcsAct() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<276>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setTcsAct( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<276>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getTcsMod() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<277>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getTcsMod() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<277>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setTcsMod( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<277>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getTcsStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<278>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getTcsStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<278>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setTcsStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<278>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getTransEstdGear() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<279>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getTransEstdGear() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<279>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setTransEstdGear( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<279>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getTransTUDMdStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<280>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getTransTUDMdStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<280>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setTransTUDMdStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<280>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getTransEngagedStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<281>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getTransEngagedStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<281>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setTransEngagedStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<281>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getTurnLmpSwPos() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<282>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getTurnLmpSwPos() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<282>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setTurnLmpSwPos( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<282>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getIpVehTotDistV() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<283>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getIpVehTotDistV() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<283>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setIpVehTotDistV( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<283>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getVehSpdDrvnAvgV() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<284>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getVehSpdDrvnAvgV() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<284>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setVehSpdDrvnAvgV( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<284>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getVehSpdNDrvnAvgV() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<285>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getVehSpdNDrvnAvgV() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<285>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setVehSpdNDrvnAvgV( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<285>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getVseMod() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<286>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getVseMod() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<286>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setVseMod( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<286>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getVseStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<287>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getVseStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<287>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setVseStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<287>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getVehDynCntlStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<288>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getVehDynCntlStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<288>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setVehDynCntlStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<288>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getVseAct() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<289>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getVseAct() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<289>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setVseAct( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<289>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLdWheelSpdV() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<290>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLdWheelSpdV() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<290>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLdWheelSpdV( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<290>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLndWheelSpdV() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<291>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLndWheelSpdV() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<291>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLndWheelSpdV( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<291>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getRdWheelSpdV() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<292>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getRdWheelSpdV() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<292>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setRdWheelSpdV( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<292>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getRndWheelSpdV() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<293>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getRndWheelSpdV() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<293>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setRndWheelSpdV( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<293>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLdWheelRotDir() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<294>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLdWheelRotDir() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<294>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLdWheelRotDir( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<294>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLndWheelRotDir() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<295>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLndWheelRotDir() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<295>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLndWheelRotDir( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<295>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getRdWheelRotDir() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<296>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getRdWheelRotDir() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<296>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setRdWheelRotDir( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<296>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getRndWheelRotDir() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<297>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getRndWheelRotDir() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<297>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setRndWheelRotDir( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<297>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLdWhlDistVal() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<298>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLdWhlDistVal() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<298>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLdWhlDistVal( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<298>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLndWhlDistVal() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<299>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLndWhlDistVal() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<299>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLndWhlDistVal( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<299>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getRdWhlDistVal() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<300>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getRdWhlDistVal() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<300>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setRdWhlDistVal( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<300>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getRndWhlDistVal() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<301>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getRndWhlDistVal() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<301>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setRndWhlDistVal( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<301>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getWasherWprAct() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<302>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getWasherWprAct() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<302>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setWasherWprAct( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<302>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getWasherWprSwAct() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<303>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getWasherWprSwAct() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<303>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setWasherWprSwAct( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<303>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getAutoBrkSysStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<304>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getAutoBrkSysStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<304>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setAutoBrkSysStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<304>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getBrkSysExtHoldFail() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<305>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getBrkSysExtHoldFail() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<305>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setBrkSysExtHoldFail( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<305>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getAutoBrkSysInhLgCntl() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<306>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getAutoBrkSysInhLgCntl() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<306>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setAutoBrkSysInhLgCntl( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<306>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getMstrIMULatAccV() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<307>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getMstrIMULatAccV() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<307>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setMstrIMULatAccV( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<307>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getMstrIMULongAccV() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<308>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getMstrIMULongAccV() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<308>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setMstrIMULongAccV( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<308>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getMstrIMULongAccAvl() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<309>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getMstrIMULongAccAvl() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<309>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setMstrIMULongAccAvl( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<309>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getMstrIMUYawRateV() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<310>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getMstrIMUYawRateV() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<310>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setMstrIMUYawRateV( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<310>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getVehMovementStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<311>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getVehMovementStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<311>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setVehMovementStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<311>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLgSafeVRUCusSet() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<312>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLgSafeVRUCusSet() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<312>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLgSafeVRUCusSet( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<312>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getGearLeverPosn() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<313>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getGearLeverPosn() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<313>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setGearLeverPosn( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<313>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLdpMode() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<314>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLdpMode() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<314>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLdpMode( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<314>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getTjaSelect() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<315>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getTjaSelect() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<315>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setTjaSelect( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<315>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getWindShieldWprAct() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<316>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getWindShieldWprAct() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<316>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setWindShieldWprAct( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<316>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getCollPrepSysInhbt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<317>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getCollPrepSysInhbt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<317>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setCollPrepSysInhbt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<317>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getTsrAlertSw() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<318>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getTsrAlertSw() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<318>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setTsrAlertSw( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<318>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getTsrSw() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<319>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getTsrSw() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<319>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setTsrSw( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<319>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getFrntFogLmpStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<320>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getFrntFogLmpStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<320>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setFrntFogLmpStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<320>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getHlBeamSwStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<321>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getHlBeamSwStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<321>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setHlBeamSwStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<321>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getAhbcSwStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<322>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getAhbcSwStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<322>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setAhbcSwStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<322>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getPsngrDoorAjarSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<323>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getPsngrDoorAjarSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<323>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setPsngrDoorAjarSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<323>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getRlDoorAjarSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<324>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getRlDoorAjarSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<324>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setRlDoorAjarSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<324>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getRrDoorAjarSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<325>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getRrDoorAjarSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<325>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setRrDoorAjarSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<325>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getDowSwitchReq() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<326>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getDowSwitchReq() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<326>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setDowSwitchReq( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<326>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLcaBSDSwitchReq() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<327>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLcaBSDSwitchReq() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<327>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLcaBSDSwitchReq( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<327>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getRctaSwitchReq() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<328>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getRctaSwitchReq() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<328>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setRctaSwitchReq( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<328>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getRecwSwitchReq() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<329>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getRecwSwitchReq() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<329>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setRecwSwitchReq( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<329>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getFctaSwitchReq() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<330>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getFctaSwitchReq() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<330>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setFctaSwitchReq( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<330>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getDriverDoorLockSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<331>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getDriverDoorLockSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<331>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setDriverDoorLockSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<331>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getPsngrDoorLockSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<332>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getPsngrDoorLockSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<332>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setPsngrDoorLockSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<332>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getTruckAjarSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<333>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getTruckAjarSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<333>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setTruckAjarSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<333>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getInsideGeofence() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<334>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getInsideGeofence() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<334>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setInsideGeofence( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<334>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getBrkPdlType() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<335>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getBrkPdlType() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<335>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setBrkPdlType( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<335>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getTurnlgtSwSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<336>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getTurnlgtSwSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<336>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setTurnlgtSwSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<336>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getDaytime() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<337>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getDaytime() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<337>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setDaytime( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<337>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLatSafeSnvtySet() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<338>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLatSafeSnvtySet() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<338>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLatSafeSnvtySet( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<338>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getIsaSw() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<339>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getIsaSw() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<339>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setIsaSw( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<339>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getSteerMod() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<340>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getSteerMod() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<340>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setSteerMod( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<340>() * ::capnp::ELEMENTS, value);
}

inline  ::int8_t FromVehicle::Reader::getTsrSnvtySet() const {
  return _reader.getDataField< ::int8_t>(
      ::capnp::bounded<341>() * ::capnp::ELEMENTS);
}

inline  ::int8_t FromVehicle::Builder::getTsrSnvtySet() {
  return _builder.getDataField< ::int8_t>(
      ::capnp::bounded<341>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setTsrSnvtySet( ::int8_t value) {
  _builder.setDataField< ::int8_t>(
      ::capnp::bounded<341>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getHazLightStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<342>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getHazLightStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<342>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setHazLightStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<342>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getFcwSnvtySet() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<343>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getFcwSnvtySet() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<343>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setFcwSnvtySet( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<343>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLgSafeJACusSet() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<344>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLgSafeJACusSet() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<344>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLgSafeJACusSet( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<344>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getVehAutoLightCtrlStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<345>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getVehAutoLightCtrlStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<345>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setVehAutoLightCtrlStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<345>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getCcoAct() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<346>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getCcoAct() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<346>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setCcoAct( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<346>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLgCtrlDrvMod() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<347>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLgCtrlDrvMod() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<347>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLgCtrlDrvMod( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<347>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getEcoPlusMod() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<348>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getEcoPlusMod() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<348>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setEcoPlusMod( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<348>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getVehMaxSpdLimtKph() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<349>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getVehMaxSpdLimtKph() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<349>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setVehMaxSpdLimtKph( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<349>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getDfwSw() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<350>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getDfwSw() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<350>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setDfwSw( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<350>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLTurnLmpFaultStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<351>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLTurnLmpFaultStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<351>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLTurnLmpFaultStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<351>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getRTurnLmpFaultStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<352>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getRTurnLmpFaultStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<352>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setRTurnLmpFaultStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<352>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getHodError() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<353>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getHodError() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<353>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setHodError( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<353>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getHodStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<354>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getHodStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<354>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setHodStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<354>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getTirePresrFault() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<355>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getTirePresrFault() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<355>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setTirePresrFault( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<355>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getWheelDirForwrdFlg() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<356>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getWheelDirForwrdFlg() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<356>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setWheelDirForwrdFlg( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<356>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getAbsESPActvInhbtLat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<357>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getAbsESPActvInhbtLat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<357>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setAbsESPActvInhbtLat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<357>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getRearFogLmpStat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<358>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getRearFogLmpStat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<358>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setRearFogLmpStat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<358>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLgSafeJAPedCusSet() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<359>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLgSafeJAPedCusSet() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<359>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLgSafeJAPedCusSet( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<359>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getFcaVRUWarnCustSet() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<360>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getFcaVRUWarnCustSet() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<360>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setFcaVRUWarnCustSet( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<360>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getAlcSw() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<361>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getAlcSw() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<361>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setAlcSw( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<361>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLgCtrlTimeGapSetLst() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<362>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLgCtrlTimeGapSetLst() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<362>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLgCtrlTimeGapSetLst( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<362>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getTlrSw() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<363>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getTlrSw() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<363>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setTlrSw( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<363>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getDrvrID() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<364>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getDrvrID() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<364>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setDrvrID( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<364>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getTsrSpdLimtValue() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<365>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getTsrSpdLimtValue() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<365>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setTsrSpdLimtValue( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<365>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getLkaLstCtrlVal() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<366>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getLkaLstCtrlVal() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<366>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setLkaLstCtrlVal( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<366>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getTjaSetSw() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<367>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getTjaSetSw() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<367>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setTjaSetSw( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<367>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getGoNotifCustSet() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<368>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getGoNotifCustSet() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<368>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setGoNotifCustSet( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<368>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getUssFollowSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<369>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getUssFollowSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<369>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setUssFollowSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<369>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getTurnLightSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<370>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getTurnLightSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<370>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setTurnLightSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<370>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getEmsAccButtInfo() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<371>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getEmsAccButtInfo() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<371>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setEmsAccButtInfo( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<371>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getAutoBrkSysAvailMask() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<372>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getAutoBrkSysAvailMask() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<372>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setAutoBrkSysAvailMask( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<372>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getAutoBrkSysAtvMask() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<373>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getAutoBrkSysAtvMask() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<373>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setAutoBrkSysAtvMask( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<373>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getBcsPrimBrkActiveSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<374>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getBcsPrimBrkActiveSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<374>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setBcsPrimBrkActiveSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<374>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getBcsVehicleStandStillSt() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<375>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getBcsVehicleStandStillSt() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<375>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setBcsVehicleStandStillSt( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<375>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getBcsFLWheelRotatedDirection() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<376>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getBcsFLWheelRotatedDirection() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<376>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setBcsFLWheelRotatedDirection( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<376>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getBcsFRWheelRotatedDirection() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<377>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getBcsFRWheelRotatedDirection() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<377>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setBcsFRWheelRotatedDirection( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<377>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getBcsRLWheelRotatedDirection() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<378>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getBcsRLWheelRotatedDirection() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<378>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setBcsRLWheelRotatedDirection( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<378>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getBcsRRWheelRotatedDirection() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<379>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getBcsRRWheelRotatedDirection() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<379>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setBcsRRWheelRotatedDirection( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<379>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getUnusedUint81() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<380>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getUnusedUint81() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<380>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setUnusedUint81( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<380>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getUnusedUint82() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<381>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getUnusedUint82() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<381>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setUnusedUint82( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<381>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getUnusedUint83() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<382>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getUnusedUint83() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<382>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setUnusedUint83( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<382>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FromVehicle::Reader::getUnusedUint84() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<383>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FromVehicle::Builder::getUnusedUint84() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<383>() * ::capnp::ELEMENTS);
}
inline void FromVehicle::Builder::setUnusedUint84( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<383>() * ::capnp::ELEMENTS, value);
}

inline bool FromVehicle::Reader::hasHeader() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool FromVehicle::Builder::hasHeader() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::std_msgs::Header::Reader FromVehicle::Reader::getHeader() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::std_msgs::Header::Builder FromVehicle::Builder::getHeader() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::std_msgs::Header::Pipeline FromVehicle::Pipeline::getHeader() {
  return  ::senseAD::msg::std_msgs::Header::Pipeline(_typeless.getPointerField(2));
}
#endif  // !CAPNP_LITE
inline void FromVehicle::Builder::setHeader( ::senseAD::msg::std_msgs::Header::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::std_msgs::Header::Builder FromVehicle::Builder::initHeader() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void FromVehicle::Builder::adoptHeader(
    ::capnp::Orphan< ::senseAD::msg::std_msgs::Header>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::std_msgs::Header> FromVehicle::Builder::disownHeader() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::std_msgs::Header>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

}  // namespace
}  // namespace
}  // namespace

CAPNP_END_HEADER

