// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: as_control.capnp

#pragma once

#include <capnp/generated-header-support.h>
#include <kj/windows-sanity.h>

#if CAPNP_VERSION != 10002
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif


CAPNP_BEGIN_HEADER

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(fe8aa499716bb928);
CAPNP_DECLARE_SCHEMA(948679d0ad3de2ed);
CAPNP_DECLARE_SCHEMA(a07fb0bf4d2739c8);
enum class AebState_a07fb0bf4d2739c8: uint16_t {
  AEB_OFF,
  AEB_FAULT,
  AEB_PASSIVE,
  AEB_STANDBY,
  PREFILL_ACTIVE,
  AEB_ACTIVE,
  EBA_ACTIVE,
};
CAPNP_DECLARE_ENUM(AebState, a07fb0bf4d2739c8);
CAPNP_DECLARE_SCHEMA(922b71f9b8b9dc97);
enum class FcwState_922b71f9b8b9dc97: uint16_t {
  FCW_OFF,
  FCW_FAULT,
  FCW_PASSIVE,
  FCW_STANDBY,
  FCW_FIRST_LEVEL,
  FCW_SECOND_LEVEL,
  FCW_THIRD_LEVEL,
};
CAPNP_DECLARE_ENUM(FcwState, 922b71f9b8b9dc97);
CAPNP_DECLARE_SCHEMA(83f4a8658a529b1a);
enum class AwbState_83f4a8658a529b1a: uint16_t {
  AWB_OFF,
  AWB_FAULT,
  AWB_PASSIVE,
  AWB_STANDBY,
  AWB_ACTIVE,
};
CAPNP_DECLARE_ENUM(AwbState, 83f4a8658a529b1a);
CAPNP_DECLARE_SCHEMA(efe238e33a47f408);
CAPNP_DECLARE_SCHEMA(d2b572d0a36cf908);
CAPNP_DECLARE_SCHEMA(8642cd82b4df9d00);
CAPNP_DECLARE_SCHEMA(810a50a88ebb96d4);
CAPNP_DECLARE_SCHEMA(feb95e287943e9b1);
CAPNP_DECLARE_SCHEMA(e38d388b4019c770);
CAPNP_DECLARE_SCHEMA(950aea4ccbf6cb97);
CAPNP_DECLARE_SCHEMA(bfb79e262e95e2f0);
CAPNP_DECLARE_SCHEMA(c3967a1a2ee706e9);
CAPNP_DECLARE_SCHEMA(897ccc207a50972e);
CAPNP_DECLARE_SCHEMA(c6b57039242d68ab);
CAPNP_DECLARE_SCHEMA(d449841bcbf67345);
CAPNP_DECLARE_SCHEMA(cb63e49092c45243);
CAPNP_DECLARE_SCHEMA(d8b4521c14ec0c5a);
CAPNP_DECLARE_SCHEMA(bdf75683e7b125a5);
CAPNP_DECLARE_SCHEMA(9c44a3b11db91b7d);
CAPNP_DECLARE_SCHEMA(d442cb9c10796b82);
CAPNP_DECLARE_SCHEMA(bad784bdcee4d546);
CAPNP_DECLARE_SCHEMA(be655f64cd200c85);
CAPNP_DECLARE_SCHEMA(d84195971bac9be1);
CAPNP_DECLARE_SCHEMA(e322eff5e6c85e18);
CAPNP_DECLARE_SCHEMA(b60499487f0d1b33);
CAPNP_DECLARE_SCHEMA(81b31cc2e5085a2e);
CAPNP_DECLARE_SCHEMA(88929326d4df287e);

}  // namespace schemas
}  // namespace capnp

namespace senseAD {
namespace msg {
namespace tap {

struct LgSfCibdebug {
  LgSfCibdebug() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(fe8aa499716bb928, 16, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct LgSfFcwdebug {
  LgSfFcwdebug() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(948679d0ad3de2ed, 3, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

typedef ::capnp::schemas::AebState_a07fb0bf4d2739c8 AebState;

typedef ::capnp::schemas::FcwState_922b71f9b8b9dc97 FcwState;

typedef ::capnp::schemas::AwbState_83f4a8658a529b1a AwbState;

struct LgSfLongScene {
  LgSfLongScene() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(efe238e33a47f408, 8, 2)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct Machinests {
  Machinests() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(d2b572d0a36cf908, 1, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct Mtnrqrdintv {
  Mtnrqrdintv() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(8642cd82b4df9d00, 5, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct Mtnrqrdwarn {
  Mtnrqrdwarn() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(810a50a88ebb96d4, 2, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct MtnrqrdDiag {
  MtnrqrdDiag() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(feb95e287943e9b1, 1, 2)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct DiagAccelrequest {
  DiagAccelrequest() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(e38d388b4019c770, 1, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct DiagDeactivate {
  DiagDeactivate() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(950aea4ccbf6cb97, 1, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct DiagOncominginhibit {
  DiagOncominginhibit() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(bfb79e262e95e2f0, 2, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct DiagCommoninhibit {
  DiagCommoninhibit() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(c3967a1a2ee706e9, 1, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct DiagFullbraking {
  DiagFullbraking() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(897ccc207a50972e, 1, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct DiagPrebraking {
  DiagPrebraking() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(c6b57039242d68ab, 1, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct DiagCritlgteval {
  DiagCritlgteval() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(d449841bcbf67345, 0, 4)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct CmbbDiag {
  CmbbDiag() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(cb63e49092c45243, 1, 2)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct DiagStartConditions {
  DiagStartConditions() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(d8b4521c14ec0c5a, 3, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct DiagInhibitCdnSts {
  DiagInhibitCdnSts() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(bdf75683e7b125a5, 1, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct CllsnFwdWarnCtrlDebug {
  CllsnFwdWarnCtrlDebug() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(9c44a3b11db91b7d, 3, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct FcwDiag {
  FcwDiag() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(d442cb9c10796b82, 1, 3)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct BrkarbDiag {
  BrkarbDiag() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(bad784bdcee4d546, 1, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct SceniaroDiag {
  SceniaroDiag() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(be655f64cd200c85, 1, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct DiagAebfunc {
  DiagAebfunc() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(d84195971bac9be1, 0, 5)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct LgSfLtap {
  LgSfLtap() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(e322eff5e6c85e18, 0, 2)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct LgSfDiagInfo {
  LgSfDiagInfo() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(b60499487f0d1b33, 1, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct LgSafeOut {
  LgSafeOut() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(81b31cc2e5085a2e, 1, 3)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct AsControl {
  AsControl() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(88929326d4df287e, 0, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

class LgSfCibdebug::Reader {
public:
  typedef LgSfCibdebug Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getLgsfObjtoi() const;

  inline  ::uint8_t getLgsfObjinpathage() const;

  inline  ::uint8_t getLgsfObjinpathagethres() const;

  inline  ::uint8_t getLgSfDriveEngage() const;

  inline  ::uint16_t getLgsfObju16Resv1() const;

  inline  ::uint16_t getLgsfObjtoiflag() const;

  inline float getLgsfObjleadvel() const;

  inline float getLgsfObjttc() const;

  inline float getLgsfObjdesiredhitspd() const;

  inline float getLgsfBaserange() const;

  inline float getLgsfDistnear() const;

  inline float getLgsfObjXolc() const;

  inline float getLgsfHitdist() const;

  inline float getLgsfYawdist() const;

  inline float getLgsfHboffset() const;

  inline float getLgsfLboffset() const;

  inline float getLgsfPfoffset() const;

  inline float getLgsfIbaoffset() const;

  inline float getLgsfAbaoffset() const;

  inline float getLgsfOverallrdcfac() const;

  inline float getLgsfEbaoverallrdcfac() const;

  inline float getLgsfNeartgtrdcfac() const;

  inline float getLgsfVehbehvrdcfac() const;

  inline float getLgsfXolcrdcfac() const;

  inline float getLgsfHbrangethres() const;

  inline float getLgsfLbrangethres() const;

  inline float getLgsfPfrangethres() const;

  inline float getLgsfIbarangethres() const;

  inline float getLgsfAbarangethres() const;

  inline float getLgsfReqdecelcloseloop() const;

  inline float getLgsfReqdecel() const;

  inline  ::uint8_t getLgsfDecelrelease() const;

  inline  ::uint8_t getLgsfAbareq() const;

  inline  ::uint8_t getLgsfHoldreq() const;

  inline  ::uint8_t getLgsfBrklevel() const;

  inline  ::uint16_t getLgsfEbareqflag() const;

  inline  ::uint16_t getLgsfHbreqflag() const;

  inline  ::uint16_t getLgsfLbreqflag() const;

  inline  ::uint16_t getLgsfPfreqflag() const;

  inline  ::uint16_t getLgsfAbareqflag() const;

  inline  ::uint16_t getLgsfU16Resv1() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class LgSfCibdebug::Builder {
public:
  typedef LgSfCibdebug Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getLgsfObjtoi();
  inline void setLgsfObjtoi( ::uint8_t value);

  inline  ::uint8_t getLgsfObjinpathage();
  inline void setLgsfObjinpathage( ::uint8_t value);

  inline  ::uint8_t getLgsfObjinpathagethres();
  inline void setLgsfObjinpathagethres( ::uint8_t value);

  inline  ::uint8_t getLgSfDriveEngage();
  inline void setLgSfDriveEngage( ::uint8_t value);

  inline  ::uint16_t getLgsfObju16Resv1();
  inline void setLgsfObju16Resv1( ::uint16_t value);

  inline  ::uint16_t getLgsfObjtoiflag();
  inline void setLgsfObjtoiflag( ::uint16_t value);

  inline float getLgsfObjleadvel();
  inline void setLgsfObjleadvel(float value);

  inline float getLgsfObjttc();
  inline void setLgsfObjttc(float value);

  inline float getLgsfObjdesiredhitspd();
  inline void setLgsfObjdesiredhitspd(float value);

  inline float getLgsfBaserange();
  inline void setLgsfBaserange(float value);

  inline float getLgsfDistnear();
  inline void setLgsfDistnear(float value);

  inline float getLgsfObjXolc();
  inline void setLgsfObjXolc(float value);

  inline float getLgsfHitdist();
  inline void setLgsfHitdist(float value);

  inline float getLgsfYawdist();
  inline void setLgsfYawdist(float value);

  inline float getLgsfHboffset();
  inline void setLgsfHboffset(float value);

  inline float getLgsfLboffset();
  inline void setLgsfLboffset(float value);

  inline float getLgsfPfoffset();
  inline void setLgsfPfoffset(float value);

  inline float getLgsfIbaoffset();
  inline void setLgsfIbaoffset(float value);

  inline float getLgsfAbaoffset();
  inline void setLgsfAbaoffset(float value);

  inline float getLgsfOverallrdcfac();
  inline void setLgsfOverallrdcfac(float value);

  inline float getLgsfEbaoverallrdcfac();
  inline void setLgsfEbaoverallrdcfac(float value);

  inline float getLgsfNeartgtrdcfac();
  inline void setLgsfNeartgtrdcfac(float value);

  inline float getLgsfVehbehvrdcfac();
  inline void setLgsfVehbehvrdcfac(float value);

  inline float getLgsfXolcrdcfac();
  inline void setLgsfXolcrdcfac(float value);

  inline float getLgsfHbrangethres();
  inline void setLgsfHbrangethres(float value);

  inline float getLgsfLbrangethres();
  inline void setLgsfLbrangethres(float value);

  inline float getLgsfPfrangethres();
  inline void setLgsfPfrangethres(float value);

  inline float getLgsfIbarangethres();
  inline void setLgsfIbarangethres(float value);

  inline float getLgsfAbarangethres();
  inline void setLgsfAbarangethres(float value);

  inline float getLgsfReqdecelcloseloop();
  inline void setLgsfReqdecelcloseloop(float value);

  inline float getLgsfReqdecel();
  inline void setLgsfReqdecel(float value);

  inline  ::uint8_t getLgsfDecelrelease();
  inline void setLgsfDecelrelease( ::uint8_t value);

  inline  ::uint8_t getLgsfAbareq();
  inline void setLgsfAbareq( ::uint8_t value);

  inline  ::uint8_t getLgsfHoldreq();
  inline void setLgsfHoldreq( ::uint8_t value);

  inline  ::uint8_t getLgsfBrklevel();
  inline void setLgsfBrklevel( ::uint8_t value);

  inline  ::uint16_t getLgsfEbareqflag();
  inline void setLgsfEbareqflag( ::uint16_t value);

  inline  ::uint16_t getLgsfHbreqflag();
  inline void setLgsfHbreqflag( ::uint16_t value);

  inline  ::uint16_t getLgsfLbreqflag();
  inline void setLgsfLbreqflag( ::uint16_t value);

  inline  ::uint16_t getLgsfPfreqflag();
  inline void setLgsfPfreqflag( ::uint16_t value);

  inline  ::uint16_t getLgsfAbareqflag();
  inline void setLgsfAbareqflag( ::uint16_t value);

  inline  ::uint16_t getLgsfU16Resv1();
  inline void setLgsfU16Resv1( ::uint16_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class LgSfCibdebug::Pipeline {
public:
  typedef LgSfCibdebug Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class LgSfFcwdebug::Reader {
public:
  typedef LgSfFcwdebug Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline float getLgsfFcwTTCThres() const;

  inline float getLgsfObjTTC() const;

  inline  ::uint8_t getLgsfChimesuppress() const;

  inline  ::uint8_t getLgsfLatwarningreq() const;

  inline  ::uint8_t getLgsfPrewarningreq() const;

  inline  ::uint8_t getLgsfAwbreq() const;

  inline  ::uint8_t getLgsfAwblevel() const;

  inline  ::uint8_t getLgsfU8Resv1() const;

  inline  ::uint8_t getLgsfU8Resv2() const;

  inline  ::uint8_t getLgsfU8Resv3() const;

  inline  ::uint16_t getLgsfChimesuppressflag() const;

  inline  ::uint16_t getLgsfLatwarningflag() const;

  inline  ::uint16_t getLgsfPrewarningflag() const;

  inline  ::uint16_t getLgsfAwbflag() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class LgSfFcwdebug::Builder {
public:
  typedef LgSfFcwdebug Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline float getLgsfFcwTTCThres();
  inline void setLgsfFcwTTCThres(float value);

  inline float getLgsfObjTTC();
  inline void setLgsfObjTTC(float value);

  inline  ::uint8_t getLgsfChimesuppress();
  inline void setLgsfChimesuppress( ::uint8_t value);

  inline  ::uint8_t getLgsfLatwarningreq();
  inline void setLgsfLatwarningreq( ::uint8_t value);

  inline  ::uint8_t getLgsfPrewarningreq();
  inline void setLgsfPrewarningreq( ::uint8_t value);

  inline  ::uint8_t getLgsfAwbreq();
  inline void setLgsfAwbreq( ::uint8_t value);

  inline  ::uint8_t getLgsfAwblevel();
  inline void setLgsfAwblevel( ::uint8_t value);

  inline  ::uint8_t getLgsfU8Resv1();
  inline void setLgsfU8Resv1( ::uint8_t value);

  inline  ::uint8_t getLgsfU8Resv2();
  inline void setLgsfU8Resv2( ::uint8_t value);

  inline  ::uint8_t getLgsfU8Resv3();
  inline void setLgsfU8Resv3( ::uint8_t value);

  inline  ::uint16_t getLgsfChimesuppressflag();
  inline void setLgsfChimesuppressflag( ::uint16_t value);

  inline  ::uint16_t getLgsfLatwarningflag();
  inline void setLgsfLatwarningflag( ::uint16_t value);

  inline  ::uint16_t getLgsfPrewarningflag();
  inline void setLgsfPrewarningflag( ::uint16_t value);

  inline  ::uint16_t getLgsfAwbflag();
  inline void setLgsfAwbflag( ::uint16_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class LgSfFcwdebug::Pipeline {
public:
  typedef LgSfFcwdebug Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class LgSfLongScene::Reader {
public:
  typedef LgSfLongScene Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline float getLgsfTarreqdecel() const;

  inline  ::uint8_t getLgsfAebreq() const;

  inline  ::uint8_t getLgsfAebtardecvld() const;

  inline  ::uint8_t getLgsfAwbreqlvl() const;

  inline  ::uint8_t getLgsfAbareq() const;

  inline  ::uint8_t getLgsfAbalvl() const;

  inline  ::uint8_t getLgsfHwreq() const;

  inline  ::uint8_t getLgsfHalightreq() const;

  inline  ::uint8_t getLgsfBeltreq() const;

  inline  ::senseAD::msg::tap::AebState getLgsfAebstate() const;

  inline  ::senseAD::msg::tap::FcwState getLgsfFcwstate() const;

  inline  ::senseAD::msg::tap::AwbState getLgsfAwbstate() const;

  inline  ::uint16_t getLgsgShadowmode() const;

  inline  ::int32_t getLgsfObjid() const;

  inline  ::int32_t getLgsfObjvisid() const;

  inline  ::int32_t getLgsfObjclass() const;

  inline float getLgsfObjposx() const;

  inline float getLgsfObjposy() const;

  inline float getLgsfObjvelx() const;

  inline float getLgsfObjvely() const;

  inline float getLgsfObjaccx() const;

  inline float getLgsfObjaccy() const;

  inline float getLgsfObjttc() const;

  inline bool hasCib() const;
  inline  ::senseAD::msg::tap::LgSfCibdebug::Reader getCib() const;

  inline bool hasFcw() const;
  inline  ::senseAD::msg::tap::LgSfFcwdebug::Reader getFcw() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class LgSfLongScene::Builder {
public:
  typedef LgSfLongScene Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline float getLgsfTarreqdecel();
  inline void setLgsfTarreqdecel(float value);

  inline  ::uint8_t getLgsfAebreq();
  inline void setLgsfAebreq( ::uint8_t value);

  inline  ::uint8_t getLgsfAebtardecvld();
  inline void setLgsfAebtardecvld( ::uint8_t value);

  inline  ::uint8_t getLgsfAwbreqlvl();
  inline void setLgsfAwbreqlvl( ::uint8_t value);

  inline  ::uint8_t getLgsfAbareq();
  inline void setLgsfAbareq( ::uint8_t value);

  inline  ::uint8_t getLgsfAbalvl();
  inline void setLgsfAbalvl( ::uint8_t value);

  inline  ::uint8_t getLgsfHwreq();
  inline void setLgsfHwreq( ::uint8_t value);

  inline  ::uint8_t getLgsfHalightreq();
  inline void setLgsfHalightreq( ::uint8_t value);

  inline  ::uint8_t getLgsfBeltreq();
  inline void setLgsfBeltreq( ::uint8_t value);

  inline  ::senseAD::msg::tap::AebState getLgsfAebstate();
  inline void setLgsfAebstate( ::senseAD::msg::tap::AebState value);

  inline  ::senseAD::msg::tap::FcwState getLgsfFcwstate();
  inline void setLgsfFcwstate( ::senseAD::msg::tap::FcwState value);

  inline  ::senseAD::msg::tap::AwbState getLgsfAwbstate();
  inline void setLgsfAwbstate( ::senseAD::msg::tap::AwbState value);

  inline  ::uint16_t getLgsgShadowmode();
  inline void setLgsgShadowmode( ::uint16_t value);

  inline  ::int32_t getLgsfObjid();
  inline void setLgsfObjid( ::int32_t value);

  inline  ::int32_t getLgsfObjvisid();
  inline void setLgsfObjvisid( ::int32_t value);

  inline  ::int32_t getLgsfObjclass();
  inline void setLgsfObjclass( ::int32_t value);

  inline float getLgsfObjposx();
  inline void setLgsfObjposx(float value);

  inline float getLgsfObjposy();
  inline void setLgsfObjposy(float value);

  inline float getLgsfObjvelx();
  inline void setLgsfObjvelx(float value);

  inline float getLgsfObjvely();
  inline void setLgsfObjvely(float value);

  inline float getLgsfObjaccx();
  inline void setLgsfObjaccx(float value);

  inline float getLgsfObjaccy();
  inline void setLgsfObjaccy(float value);

  inline float getLgsfObjttc();
  inline void setLgsfObjttc(float value);

  inline bool hasCib();
  inline  ::senseAD::msg::tap::LgSfCibdebug::Builder getCib();
  inline void setCib( ::senseAD::msg::tap::LgSfCibdebug::Reader value);
  inline  ::senseAD::msg::tap::LgSfCibdebug::Builder initCib();
  inline void adoptCib(::capnp::Orphan< ::senseAD::msg::tap::LgSfCibdebug>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::LgSfCibdebug> disownCib();

  inline bool hasFcw();
  inline  ::senseAD::msg::tap::LgSfFcwdebug::Builder getFcw();
  inline void setFcw( ::senseAD::msg::tap::LgSfFcwdebug::Reader value);
  inline  ::senseAD::msg::tap::LgSfFcwdebug::Builder initFcw();
  inline void adoptFcw(::capnp::Orphan< ::senseAD::msg::tap::LgSfFcwdebug>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::LgSfFcwdebug> disownFcw();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class LgSfLongScene::Pipeline {
public:
  typedef LgSfLongScene Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::tap::LgSfCibdebug::Pipeline getCib();
  inline  ::senseAD::msg::tap::LgSfFcwdebug::Pipeline getFcw();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class Machinests::Reader {
public:
  typedef Machinests Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getAebstate() const;

  inline  ::uint8_t getFcwstate() const;

  inline  ::uint8_t getAwbstate() const;

  inline  ::uint8_t getAwbLevel() const;

  inline  ::uint8_t getHbastate() const;

  inline  ::uint8_t getHbaLevel() const;

  inline  ::uint8_t getPrefillstate() const;

  inline  ::uint8_t getDwstate() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Machinests::Builder {
public:
  typedef Machinests Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getAebstate();
  inline void setAebstate( ::uint8_t value);

  inline  ::uint8_t getFcwstate();
  inline void setFcwstate( ::uint8_t value);

  inline  ::uint8_t getAwbstate();
  inline void setAwbstate( ::uint8_t value);

  inline  ::uint8_t getAwbLevel();
  inline void setAwbLevel( ::uint8_t value);

  inline  ::uint8_t getHbastate();
  inline void setHbastate( ::uint8_t value);

  inline  ::uint8_t getHbaLevel();
  inline void setHbaLevel( ::uint8_t value);

  inline  ::uint8_t getPrefillstate();
  inline void setPrefillstate( ::uint8_t value);

  inline  ::uint8_t getDwstate();
  inline void setDwstate( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Machinests::Pipeline {
public:
  typedef Machinests Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class Mtnrqrdintv::Reader {
public:
  typedef Mtnrqrdintv Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline float getAlatrqrd() const;

  inline  ::int32_t getAlatrqrdqly() const;

  inline float getAposlgtrqrd() const;

  inline float getAneglgtrqrd() const;

  inline float getJerkneglgtrqrd() const;

  inline float getCrvtraterqrdle() const;

  inline float getCrvtraterqrdri() const;

  inline float getCrvtrqrdle() const;

  inline float getCrvtrqrdri() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Mtnrqrdintv::Builder {
public:
  typedef Mtnrqrdintv Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline float getAlatrqrd();
  inline void setAlatrqrd(float value);

  inline  ::int32_t getAlatrqrdqly();
  inline void setAlatrqrdqly( ::int32_t value);

  inline float getAposlgtrqrd();
  inline void setAposlgtrqrd(float value);

  inline float getAneglgtrqrd();
  inline void setAneglgtrqrd(float value);

  inline float getJerkneglgtrqrd();
  inline void setJerkneglgtrqrd(float value);

  inline float getCrvtraterqrdle();
  inline void setCrvtraterqrdle(float value);

  inline float getCrvtraterqrdri();
  inline void setCrvtraterqrdri(float value);

  inline float getCrvtrqrdle();
  inline void setCrvtrqrdle(float value);

  inline float getCrvtrqrdri();
  inline void setCrvtrqrdri(float value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Mtnrqrdintv::Pipeline {
public:
  typedef Mtnrqrdintv Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class Mtnrqrdwarn::Reader {
public:
  typedef Mtnrqrdwarn Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline float getAlatrqrd() const;

  inline  ::int32_t getAlatrqrdqly() const;

  inline float getAneglgtrqrdforwarn() const;

  inline float getAneglgtrqrdforintv() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Mtnrqrdwarn::Builder {
public:
  typedef Mtnrqrdwarn Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline float getAlatrqrd();
  inline void setAlatrqrd(float value);

  inline  ::int32_t getAlatrqrdqly();
  inline void setAlatrqrdqly( ::int32_t value);

  inline float getAneglgtrqrdforwarn();
  inline void setAneglgtrqrdforwarn(float value);

  inline float getAneglgtrqrdforintv();
  inline void setAneglgtrqrdforintv(float value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Mtnrqrdwarn::Pipeline {
public:
  typedef Mtnrqrdwarn Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class MtnrqrdDiag::Reader {
public:
  typedef MtnrqrdDiag Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasMtnrqrdintv() const;
  inline  ::senseAD::msg::tap::Mtnrqrdintv::Reader getMtnrqrdintv() const;

  inline bool hasMtnrqrdwarn() const;
  inline  ::senseAD::msg::tap::Mtnrqrdwarn::Reader getMtnrqrdwarn() const;

  inline float getAneglgtrqrdforprimtarwarn() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class MtnrqrdDiag::Builder {
public:
  typedef MtnrqrdDiag Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasMtnrqrdintv();
  inline  ::senseAD::msg::tap::Mtnrqrdintv::Builder getMtnrqrdintv();
  inline void setMtnrqrdintv( ::senseAD::msg::tap::Mtnrqrdintv::Reader value);
  inline  ::senseAD::msg::tap::Mtnrqrdintv::Builder initMtnrqrdintv();
  inline void adoptMtnrqrdintv(::capnp::Orphan< ::senseAD::msg::tap::Mtnrqrdintv>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::Mtnrqrdintv> disownMtnrqrdintv();

  inline bool hasMtnrqrdwarn();
  inline  ::senseAD::msg::tap::Mtnrqrdwarn::Builder getMtnrqrdwarn();
  inline void setMtnrqrdwarn( ::senseAD::msg::tap::Mtnrqrdwarn::Reader value);
  inline  ::senseAD::msg::tap::Mtnrqrdwarn::Builder initMtnrqrdwarn();
  inline void adoptMtnrqrdwarn(::capnp::Orphan< ::senseAD::msg::tap::Mtnrqrdwarn>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::Mtnrqrdwarn> disownMtnrqrdwarn();

  inline float getAneglgtrqrdforprimtarwarn();
  inline void setAneglgtrqrdforprimtarwarn(float value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class MtnrqrdDiag::Pipeline {
public:
  typedef MtnrqrdDiag Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::tap::Mtnrqrdintv::Pipeline getMtnrqrdintv();
  inline  ::senseAD::msg::tap::Mtnrqrdwarn::Pipeline getMtnrqrdwarn();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class DiagAccelrequest::Reader {
public:
  typedef DiagAccelrequest Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline float getPrebrakeaccreqlimit() const;

  inline float getFullbrakeaccelerationrequest() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class DiagAccelrequest::Builder {
public:
  typedef DiagAccelrequest Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline float getPrebrakeaccreqlimit();
  inline void setPrebrakeaccreqlimit(float value);

  inline float getFullbrakeaccelerationrequest();
  inline void setFullbrakeaccelerationrequest(float value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class DiagAccelrequest::Pipeline {
public:
  typedef DiagAccelrequest Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class DiagDeactivate::Reader {
public:
  typedef DiagDeactivate Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getDeactivate() const;

  inline  ::uint8_t getVehiclestationarylongerthanxseconds() const;

  inline  ::uint8_t getCollisionavoidedbybraking() const;

  inline  ::uint8_t getObjconfnotok() const;

  inline  ::uint8_t getObjidchanged() const;

  inline  ::uint8_t getDelaydeactivation() const;

  inline  ::uint8_t getObjstatedeactivation() const;

  inline  ::uint8_t getReserved() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class DiagDeactivate::Builder {
public:
  typedef DiagDeactivate Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getDeactivate();
  inline void setDeactivate( ::uint8_t value);

  inline  ::uint8_t getVehiclestationarylongerthanxseconds();
  inline void setVehiclestationarylongerthanxseconds( ::uint8_t value);

  inline  ::uint8_t getCollisionavoidedbybraking();
  inline void setCollisionavoidedbybraking( ::uint8_t value);

  inline  ::uint8_t getObjconfnotok();
  inline void setObjconfnotok( ::uint8_t value);

  inline  ::uint8_t getObjidchanged();
  inline void setObjidchanged( ::uint8_t value);

  inline  ::uint8_t getDelaydeactivation();
  inline void setDelaydeactivation( ::uint8_t value);

  inline  ::uint8_t getObjstatedeactivation();
  inline void setObjstatedeactivation( ::uint8_t value);

  inline  ::uint8_t getReserved();
  inline void setReserved( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class DiagDeactivate::Pipeline {
public:
  typedef DiagDeactivate Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class DiagOncominginhibit::Reader {
public:
  typedef DiagOncominginhibit Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getTargethighcurvature() const;

  inline  ::uint8_t getTargetanglenotvalid() const;

  inline  ::uint8_t getReserved1() const;

  inline  ::uint8_t getReserved2() const;

  inline float getHostcrvt() const;

  inline  ::uint8_t getRecentscurve() const;

  inline  ::uint8_t getNotturningnow() const;

  inline  ::uint8_t getNorecentanglespeed() const;

  inline  ::uint8_t getNorecentstart() const;

  inline  ::uint8_t getMoreheadon() const;

  inline  ::uint8_t getIsvehicleofunknownclass() const;

  inline  ::uint8_t getReserved3() const;

  inline  ::uint8_t getReserved4() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class DiagOncominginhibit::Builder {
public:
  typedef DiagOncominginhibit Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getTargethighcurvature();
  inline void setTargethighcurvature( ::uint8_t value);

  inline  ::uint8_t getTargetanglenotvalid();
  inline void setTargetanglenotvalid( ::uint8_t value);

  inline  ::uint8_t getReserved1();
  inline void setReserved1( ::uint8_t value);

  inline  ::uint8_t getReserved2();
  inline void setReserved2( ::uint8_t value);

  inline float getHostcrvt();
  inline void setHostcrvt(float value);

  inline  ::uint8_t getRecentscurve();
  inline void setRecentscurve( ::uint8_t value);

  inline  ::uint8_t getNotturningnow();
  inline void setNotturningnow( ::uint8_t value);

  inline  ::uint8_t getNorecentanglespeed();
  inline void setNorecentanglespeed( ::uint8_t value);

  inline  ::uint8_t getNorecentstart();
  inline void setNorecentstart( ::uint8_t value);

  inline  ::uint8_t getMoreheadon();
  inline void setMoreheadon( ::uint8_t value);

  inline  ::uint8_t getIsvehicleofunknownclass();
  inline void setIsvehicleofunknownclass( ::uint8_t value);

  inline  ::uint8_t getReserved3();
  inline void setReserved3( ::uint8_t value);

  inline  ::uint8_t getReserved4();
  inline void setReserved4( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class DiagOncominginhibit::Pipeline {
public:
  typedef DiagOncominginhibit Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class DiagCommoninhibit::Reader {
public:
  typedef DiagCommoninhibit Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getSpdinhibit() const;

  inline  ::uint8_t getReserved1() const;

  inline  ::uint8_t getHostavoidinhibit() const;

  inline  ::uint8_t getHostdrivingstraightandtargetisoncoming() const;

  inline bool hasOncominginhibit() const;
  inline  ::senseAD::msg::tap::DiagOncominginhibit::Reader getOncominginhibit() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class DiagCommoninhibit::Builder {
public:
  typedef DiagCommoninhibit Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getSpdinhibit();
  inline void setSpdinhibit( ::uint8_t value);

  inline  ::uint8_t getReserved1();
  inline void setReserved1( ::uint8_t value);

  inline  ::uint8_t getHostavoidinhibit();
  inline void setHostavoidinhibit( ::uint8_t value);

  inline  ::uint8_t getHostdrivingstraightandtargetisoncoming();
  inline void setHostdrivingstraightandtargetisoncoming( ::uint8_t value);

  inline bool hasOncominginhibit();
  inline  ::senseAD::msg::tap::DiagOncominginhibit::Builder getOncominginhibit();
  inline void setOncominginhibit( ::senseAD::msg::tap::DiagOncominginhibit::Reader value);
  inline  ::senseAD::msg::tap::DiagOncominginhibit::Builder initOncominginhibit();
  inline void adoptOncominginhibit(::capnp::Orphan< ::senseAD::msg::tap::DiagOncominginhibit>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::DiagOncominginhibit> disownOncominginhibit();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class DiagCommoninhibit::Pipeline {
public:
  typedef DiagCommoninhibit Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::tap::DiagOncominginhibit::Pipeline getOncominginhibit();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class DiagFullbraking::Reader {
public:
  typedef DiagFullbraking Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getFullbrakingthreat() const;

  inline  ::uint8_t getSteeringthreat() const;

  inline  ::uint8_t getBrakingthreat() const;

  inline  ::uint8_t getAccelerationthreat() const;

  inline  ::uint8_t getObjectconfok() const;

  inline  ::uint8_t getReserved1() const;

  inline  ::uint8_t getReserved2() const;

  inline  ::uint8_t getReserved3() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class DiagFullbraking::Builder {
public:
  typedef DiagFullbraking Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getFullbrakingthreat();
  inline void setFullbrakingthreat( ::uint8_t value);

  inline  ::uint8_t getSteeringthreat();
  inline void setSteeringthreat( ::uint8_t value);

  inline  ::uint8_t getBrakingthreat();
  inline void setBrakingthreat( ::uint8_t value);

  inline  ::uint8_t getAccelerationthreat();
  inline void setAccelerationthreat( ::uint8_t value);

  inline  ::uint8_t getObjectconfok();
  inline void setObjectconfok( ::uint8_t value);

  inline  ::uint8_t getReserved1();
  inline void setReserved1( ::uint8_t value);

  inline  ::uint8_t getReserved2();
  inline void setReserved2( ::uint8_t value);

  inline  ::uint8_t getReserved3();
  inline void setReserved3( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class DiagFullbraking::Pipeline {
public:
  typedef DiagFullbraking Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class DiagPrebraking::Reader {
public:
  typedef DiagPrebraking Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getPrebrakingthreat() const;

  inline  ::uint8_t getSteeringthreat() const;

  inline  ::uint8_t getBrakingthreat() const;

  inline  ::uint8_t getAccelerationthreat() const;

  inline  ::uint8_t getObjconfok() const;

  inline  ::uint8_t getReserved1() const;

  inline  ::uint8_t getReserved2() const;

  inline  ::uint8_t getReserved3() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class DiagPrebraking::Builder {
public:
  typedef DiagPrebraking Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getPrebrakingthreat();
  inline void setPrebrakingthreat( ::uint8_t value);

  inline  ::uint8_t getSteeringthreat();
  inline void setSteeringthreat( ::uint8_t value);

  inline  ::uint8_t getBrakingthreat();
  inline void setBrakingthreat( ::uint8_t value);

  inline  ::uint8_t getAccelerationthreat();
  inline void setAccelerationthreat( ::uint8_t value);

  inline  ::uint8_t getObjconfok();
  inline void setObjconfok( ::uint8_t value);

  inline  ::uint8_t getReserved1();
  inline void setReserved1( ::uint8_t value);

  inline  ::uint8_t getReserved2();
  inline void setReserved2( ::uint8_t value);

  inline  ::uint8_t getReserved3();
  inline void setReserved3( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class DiagPrebraking::Pipeline {
public:
  typedef DiagPrebraking Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class DiagCritlgteval::Reader {
public:
  typedef DiagCritlgteval Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasDeactivate() const;
  inline  ::senseAD::msg::tap::DiagDeactivate::Reader getDeactivate() const;

  inline bool hasCommoninhibit() const;
  inline  ::senseAD::msg::tap::DiagCommoninhibit::Reader getCommoninhibit() const;

  inline bool hasFullbraking() const;
  inline  ::senseAD::msg::tap::DiagFullbraking::Reader getFullbraking() const;

  inline bool hasPrebraking() const;
  inline  ::senseAD::msg::tap::DiagPrebraking::Reader getPrebraking() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class DiagCritlgteval::Builder {
public:
  typedef DiagCritlgteval Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasDeactivate();
  inline  ::senseAD::msg::tap::DiagDeactivate::Builder getDeactivate();
  inline void setDeactivate( ::senseAD::msg::tap::DiagDeactivate::Reader value);
  inline  ::senseAD::msg::tap::DiagDeactivate::Builder initDeactivate();
  inline void adoptDeactivate(::capnp::Orphan< ::senseAD::msg::tap::DiagDeactivate>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::DiagDeactivate> disownDeactivate();

  inline bool hasCommoninhibit();
  inline  ::senseAD::msg::tap::DiagCommoninhibit::Builder getCommoninhibit();
  inline void setCommoninhibit( ::senseAD::msg::tap::DiagCommoninhibit::Reader value);
  inline  ::senseAD::msg::tap::DiagCommoninhibit::Builder initCommoninhibit();
  inline void adoptCommoninhibit(::capnp::Orphan< ::senseAD::msg::tap::DiagCommoninhibit>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::DiagCommoninhibit> disownCommoninhibit();

  inline bool hasFullbraking();
  inline  ::senseAD::msg::tap::DiagFullbraking::Builder getFullbraking();
  inline void setFullbraking( ::senseAD::msg::tap::DiagFullbraking::Reader value);
  inline  ::senseAD::msg::tap::DiagFullbraking::Builder initFullbraking();
  inline void adoptFullbraking(::capnp::Orphan< ::senseAD::msg::tap::DiagFullbraking>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::DiagFullbraking> disownFullbraking();

  inline bool hasPrebraking();
  inline  ::senseAD::msg::tap::DiagPrebraking::Builder getPrebraking();
  inline void setPrebraking( ::senseAD::msg::tap::DiagPrebraking::Reader value);
  inline  ::senseAD::msg::tap::DiagPrebraking::Builder initPrebraking();
  inline void adoptPrebraking(::capnp::Orphan< ::senseAD::msg::tap::DiagPrebraking>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::DiagPrebraking> disownPrebraking();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class DiagCritlgteval::Pipeline {
public:
  typedef DiagCritlgteval Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::tap::DiagDeactivate::Pipeline getDeactivate();
  inline  ::senseAD::msg::tap::DiagCommoninhibit::Pipeline getCommoninhibit();
  inline  ::senseAD::msg::tap::DiagFullbraking::Pipeline getFullbraking();
  inline  ::senseAD::msg::tap::DiagPrebraking::Pipeline getPrebraking();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class CmbbDiag::Reader {
public:
  typedef CmbbDiag Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasAccelrequest() const;
  inline  ::senseAD::msg::tap::DiagAccelrequest::Reader getAccelrequest() const;

  inline bool hasCritlgteval() const;
  inline  ::senseAD::msg::tap::DiagCritlgteval::Reader getCritlgteval() const;

  inline  ::uint8_t getCmbbstatus() const;

  inline  ::uint8_t getReserved1() const;

  inline  ::uint8_t getReserved2() const;

  inline  ::uint8_t getReserved3() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class CmbbDiag::Builder {
public:
  typedef CmbbDiag Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasAccelrequest();
  inline  ::senseAD::msg::tap::DiagAccelrequest::Builder getAccelrequest();
  inline void setAccelrequest( ::senseAD::msg::tap::DiagAccelrequest::Reader value);
  inline  ::senseAD::msg::tap::DiagAccelrequest::Builder initAccelrequest();
  inline void adoptAccelrequest(::capnp::Orphan< ::senseAD::msg::tap::DiagAccelrequest>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::DiagAccelrequest> disownAccelrequest();

  inline bool hasCritlgteval();
  inline  ::senseAD::msg::tap::DiagCritlgteval::Builder getCritlgteval();
  inline void setCritlgteval( ::senseAD::msg::tap::DiagCritlgteval::Reader value);
  inline  ::senseAD::msg::tap::DiagCritlgteval::Builder initCritlgteval();
  inline void adoptCritlgteval(::capnp::Orphan< ::senseAD::msg::tap::DiagCritlgteval>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::DiagCritlgteval> disownCritlgteval();

  inline  ::uint8_t getCmbbstatus();
  inline void setCmbbstatus( ::uint8_t value);

  inline  ::uint8_t getReserved1();
  inline void setReserved1( ::uint8_t value);

  inline  ::uint8_t getReserved2();
  inline void setReserved2( ::uint8_t value);

  inline  ::uint8_t getReserved3();
  inline void setReserved3( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class CmbbDiag::Pipeline {
public:
  typedef CmbbDiag Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::tap::DiagAccelrequest::Pipeline getAccelrequest();
  inline  ::senseAD::msg::tap::DiagCritlgteval::Pipeline getCritlgteval();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class DiagStartConditions::Reader {
public:
  typedef DiagStartConditions Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getBtnAboveLimit() const;

  inline float getBrakeThreatNumber() const;

  inline  ::uint8_t getObjectIsValid() const;

  inline  ::uint8_t getDriverCanNotEasilySteerAway() const;

  inline  ::uint8_t getBtnTrigger() const;

  inline  ::uint8_t getCmbbTrigger() const;

  inline  ::uint8_t getVisionOnlyTrigger() const;

  inline  ::uint8_t getStartConditionsMet() const;

  inline  ::uint8_t getWarningType() const;

  inline  ::uint8_t getBrakeGainConditionsMet() const;

  inline  ::uint8_t getComfortDistanceTrigger() const;

  inline  ::uint8_t getBrakeGainConditionsBit() const;

  inline  ::uint8_t getWarningState() const;

  inline  ::uint8_t getResv1() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class DiagStartConditions::Builder {
public:
  typedef DiagStartConditions Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getBtnAboveLimit();
  inline void setBtnAboveLimit( ::uint8_t value);

  inline float getBrakeThreatNumber();
  inline void setBrakeThreatNumber(float value);

  inline  ::uint8_t getObjectIsValid();
  inline void setObjectIsValid( ::uint8_t value);

  inline  ::uint8_t getDriverCanNotEasilySteerAway();
  inline void setDriverCanNotEasilySteerAway( ::uint8_t value);

  inline  ::uint8_t getBtnTrigger();
  inline void setBtnTrigger( ::uint8_t value);

  inline  ::uint8_t getCmbbTrigger();
  inline void setCmbbTrigger( ::uint8_t value);

  inline  ::uint8_t getVisionOnlyTrigger();
  inline void setVisionOnlyTrigger( ::uint8_t value);

  inline  ::uint8_t getStartConditionsMet();
  inline void setStartConditionsMet( ::uint8_t value);

  inline  ::uint8_t getWarningType();
  inline void setWarningType( ::uint8_t value);

  inline  ::uint8_t getBrakeGainConditionsMet();
  inline void setBrakeGainConditionsMet( ::uint8_t value);

  inline  ::uint8_t getComfortDistanceTrigger();
  inline void setComfortDistanceTrigger( ::uint8_t value);

  inline  ::uint8_t getBrakeGainConditionsBit();
  inline void setBrakeGainConditionsBit( ::uint8_t value);

  inline  ::uint8_t getWarningState();
  inline void setWarningState( ::uint8_t value);

  inline  ::uint8_t getResv1();
  inline void setResv1( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class DiagStartConditions::Pipeline {
public:
  typedef DiagStartConditions Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class DiagInhibitCdnSts::Reader {
public:
  typedef DiagInhibitCdnSts Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getInhibitFcw() const;

  inline  ::uint8_t getBelowLowSpeedLimit() const;

  inline  ::uint8_t getVehicleNotRollingForward() const;

  inline  ::uint8_t getFcwDisabledByFaultManager() const;

  inline  ::uint8_t getSceniaroCheckNotOk() const;

  inline  ::uint8_t getResv1() const;

  inline  ::uint8_t getResv2() const;

  inline  ::uint8_t getResv3() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class DiagInhibitCdnSts::Builder {
public:
  typedef DiagInhibitCdnSts Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getInhibitFcw();
  inline void setInhibitFcw( ::uint8_t value);

  inline  ::uint8_t getBelowLowSpeedLimit();
  inline void setBelowLowSpeedLimit( ::uint8_t value);

  inline  ::uint8_t getVehicleNotRollingForward();
  inline void setVehicleNotRollingForward( ::uint8_t value);

  inline  ::uint8_t getFcwDisabledByFaultManager();
  inline void setFcwDisabledByFaultManager( ::uint8_t value);

  inline  ::uint8_t getSceniaroCheckNotOk();
  inline void setSceniaroCheckNotOk( ::uint8_t value);

  inline  ::uint8_t getResv1();
  inline void setResv1( ::uint8_t value);

  inline  ::uint8_t getResv2();
  inline void setResv2( ::uint8_t value);

  inline  ::uint8_t getResv3();
  inline void setResv3( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class DiagInhibitCdnSts::Pipeline {
public:
  typedef DiagInhibitCdnSts Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class CllsnFwdWarnCtrlDebug::Reader {
public:
  typedef CllsnFwdWarnCtrlDebug Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline float getDecelReq() const;

  inline  ::uint8_t getDecelEna() const;

  inline float getBrkGainReq() const;

  inline float getBrkGainMaxDecel() const;

  inline  ::uint8_t getBrkGainEna() const;

  inline  ::uint8_t getCllsnThreat() const;

  inline  ::uint8_t getBltLvl() const;

  inline  ::uint8_t getDwActive() const;

  inline  ::uint8_t getWarnReq() const;

  inline  ::uint8_t getWarnObjType() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class CllsnFwdWarnCtrlDebug::Builder {
public:
  typedef CllsnFwdWarnCtrlDebug Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline float getDecelReq();
  inline void setDecelReq(float value);

  inline  ::uint8_t getDecelEna();
  inline void setDecelEna( ::uint8_t value);

  inline float getBrkGainReq();
  inline void setBrkGainReq(float value);

  inline float getBrkGainMaxDecel();
  inline void setBrkGainMaxDecel(float value);

  inline  ::uint8_t getBrkGainEna();
  inline void setBrkGainEna( ::uint8_t value);

  inline  ::uint8_t getCllsnThreat();
  inline void setCllsnThreat( ::uint8_t value);

  inline  ::uint8_t getBltLvl();
  inline void setBltLvl( ::uint8_t value);

  inline  ::uint8_t getDwActive();
  inline void setDwActive( ::uint8_t value);

  inline  ::uint8_t getWarnReq();
  inline void setWarnReq( ::uint8_t value);

  inline  ::uint8_t getWarnObjType();
  inline void setWarnObjType( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class CllsnFwdWarnCtrlDebug::Pipeline {
public:
  typedef CllsnFwdWarnCtrlDebug Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class FcwDiag::Reader {
public:
  typedef FcwDiag Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasStartConditions() const;
  inline  ::senseAD::msg::tap::DiagStartConditions::Reader getStartConditions() const;

  inline bool hasInhibitCdnSts() const;
  inline  ::senseAD::msg::tap::DiagInhibitCdnSts::Reader getInhibitCdnSts() const;

  inline bool hasActtnDataFromCllsnFwdWarnCtrl() const;
  inline  ::senseAD::msg::tap::CllsnFwdWarnCtrlDebug::Reader getActtnDataFromCllsnFwdWarnCtrl() const;

  inline  ::uint8_t getResv1() const;

  inline  ::uint8_t getResv2() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class FcwDiag::Builder {
public:
  typedef FcwDiag Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasStartConditions();
  inline  ::senseAD::msg::tap::DiagStartConditions::Builder getStartConditions();
  inline void setStartConditions( ::senseAD::msg::tap::DiagStartConditions::Reader value);
  inline  ::senseAD::msg::tap::DiagStartConditions::Builder initStartConditions();
  inline void adoptStartConditions(::capnp::Orphan< ::senseAD::msg::tap::DiagStartConditions>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::DiagStartConditions> disownStartConditions();

  inline bool hasInhibitCdnSts();
  inline  ::senseAD::msg::tap::DiagInhibitCdnSts::Builder getInhibitCdnSts();
  inline void setInhibitCdnSts( ::senseAD::msg::tap::DiagInhibitCdnSts::Reader value);
  inline  ::senseAD::msg::tap::DiagInhibitCdnSts::Builder initInhibitCdnSts();
  inline void adoptInhibitCdnSts(::capnp::Orphan< ::senseAD::msg::tap::DiagInhibitCdnSts>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::DiagInhibitCdnSts> disownInhibitCdnSts();

  inline bool hasActtnDataFromCllsnFwdWarnCtrl();
  inline  ::senseAD::msg::tap::CllsnFwdWarnCtrlDebug::Builder getActtnDataFromCllsnFwdWarnCtrl();
  inline void setActtnDataFromCllsnFwdWarnCtrl( ::senseAD::msg::tap::CllsnFwdWarnCtrlDebug::Reader value);
  inline  ::senseAD::msg::tap::CllsnFwdWarnCtrlDebug::Builder initActtnDataFromCllsnFwdWarnCtrl();
  inline void adoptActtnDataFromCllsnFwdWarnCtrl(::capnp::Orphan< ::senseAD::msg::tap::CllsnFwdWarnCtrlDebug>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::CllsnFwdWarnCtrlDebug> disownActtnDataFromCllsnFwdWarnCtrl();

  inline  ::uint8_t getResv1();
  inline void setResv1( ::uint8_t value);

  inline  ::uint8_t getResv2();
  inline void setResv2( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class FcwDiag::Pipeline {
public:
  typedef FcwDiag Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::tap::DiagStartConditions::Pipeline getStartConditions();
  inline  ::senseAD::msg::tap::DiagInhibitCdnSts::Pipeline getInhibitCdnSts();
  inline  ::senseAD::msg::tap::CllsnFwdWarnCtrlDebug::Pipeline getActtnDataFromCllsnFwdWarnCtrl();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class BrkarbDiag::Reader {
public:
  typedef BrkarbDiag Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getCllsnthreat() const;

  inline  ::uint8_t getBrkarbresult() const;

  inline  ::uint8_t getAsysftydecelreqdendbyspdredn() const;

  inline  ::uint8_t getReserved() const;

  inline float getDecelrequestbrkarb() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class BrkarbDiag::Builder {
public:
  typedef BrkarbDiag Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getCllsnthreat();
  inline void setCllsnthreat( ::uint8_t value);

  inline  ::uint8_t getBrkarbresult();
  inline void setBrkarbresult( ::uint8_t value);

  inline  ::uint8_t getAsysftydecelreqdendbyspdredn();
  inline void setAsysftydecelreqdendbyspdredn( ::uint8_t value);

  inline  ::uint8_t getReserved();
  inline void setReserved( ::uint8_t value);

  inline float getDecelrequestbrkarb();
  inline void setDecelrequestbrkarb(float value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class BrkarbDiag::Pipeline {
public:
  typedef BrkarbDiag Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class SceniaroDiag::Reader {
public:
  typedef SceniaroDiag Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getEgoMotionType() const;

  inline  ::uint8_t getSceniaroClass() const;

  inline  ::uint8_t getAebSceniaroResult() const;

  inline  ::uint8_t getFcwSceniaroResult() const;

  inline  ::uint8_t getConfDelay() const;

  inline  ::uint8_t getSceniaroFailReason() const;

  inline  ::uint8_t getReserved1() const;

  inline  ::uint8_t getReserved2() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class SceniaroDiag::Builder {
public:
  typedef SceniaroDiag Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint8_t getEgoMotionType();
  inline void setEgoMotionType( ::uint8_t value);

  inline  ::uint8_t getSceniaroClass();
  inline void setSceniaroClass( ::uint8_t value);

  inline  ::uint8_t getAebSceniaroResult();
  inline void setAebSceniaroResult( ::uint8_t value);

  inline  ::uint8_t getFcwSceniaroResult();
  inline void setFcwSceniaroResult( ::uint8_t value);

  inline  ::uint8_t getConfDelay();
  inline void setConfDelay( ::uint8_t value);

  inline  ::uint8_t getSceniaroFailReason();
  inline void setSceniaroFailReason( ::uint8_t value);

  inline  ::uint8_t getReserved1();
  inline void setReserved1( ::uint8_t value);

  inline  ::uint8_t getReserved2();
  inline void setReserved2( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class SceniaroDiag::Pipeline {
public:
  typedef SceniaroDiag Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class DiagAebfunc::Reader {
public:
  typedef DiagAebfunc Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasMtnrqrd() const;
  inline  ::senseAD::msg::tap::MtnrqrdDiag::Reader getMtnrqrd() const;

  inline bool hasCmbb() const;
  inline  ::senseAD::msg::tap::CmbbDiag::Reader getCmbb() const;

  inline bool hasFcw() const;
  inline  ::senseAD::msg::tap::FcwDiag::Reader getFcw() const;

  inline bool hasBrkarb() const;
  inline  ::senseAD::msg::tap::BrkarbDiag::Reader getBrkarb() const;

  inline bool hasSceniaro() const;
  inline  ::senseAD::msg::tap::SceniaroDiag::Reader getSceniaro() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class DiagAebfunc::Builder {
public:
  typedef DiagAebfunc Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasMtnrqrd();
  inline  ::senseAD::msg::tap::MtnrqrdDiag::Builder getMtnrqrd();
  inline void setMtnrqrd( ::senseAD::msg::tap::MtnrqrdDiag::Reader value);
  inline  ::senseAD::msg::tap::MtnrqrdDiag::Builder initMtnrqrd();
  inline void adoptMtnrqrd(::capnp::Orphan< ::senseAD::msg::tap::MtnrqrdDiag>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::MtnrqrdDiag> disownMtnrqrd();

  inline bool hasCmbb();
  inline  ::senseAD::msg::tap::CmbbDiag::Builder getCmbb();
  inline void setCmbb( ::senseAD::msg::tap::CmbbDiag::Reader value);
  inline  ::senseAD::msg::tap::CmbbDiag::Builder initCmbb();
  inline void adoptCmbb(::capnp::Orphan< ::senseAD::msg::tap::CmbbDiag>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::CmbbDiag> disownCmbb();

  inline bool hasFcw();
  inline  ::senseAD::msg::tap::FcwDiag::Builder getFcw();
  inline void setFcw( ::senseAD::msg::tap::FcwDiag::Reader value);
  inline  ::senseAD::msg::tap::FcwDiag::Builder initFcw();
  inline void adoptFcw(::capnp::Orphan< ::senseAD::msg::tap::FcwDiag>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::FcwDiag> disownFcw();

  inline bool hasBrkarb();
  inline  ::senseAD::msg::tap::BrkarbDiag::Builder getBrkarb();
  inline void setBrkarb( ::senseAD::msg::tap::BrkarbDiag::Reader value);
  inline  ::senseAD::msg::tap::BrkarbDiag::Builder initBrkarb();
  inline void adoptBrkarb(::capnp::Orphan< ::senseAD::msg::tap::BrkarbDiag>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::BrkarbDiag> disownBrkarb();

  inline bool hasSceniaro();
  inline  ::senseAD::msg::tap::SceniaroDiag::Builder getSceniaro();
  inline void setSceniaro( ::senseAD::msg::tap::SceniaroDiag::Reader value);
  inline  ::senseAD::msg::tap::SceniaroDiag::Builder initSceniaro();
  inline void adoptSceniaro(::capnp::Orphan< ::senseAD::msg::tap::SceniaroDiag>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::SceniaroDiag> disownSceniaro();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class DiagAebfunc::Pipeline {
public:
  typedef DiagAebfunc Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::tap::MtnrqrdDiag::Pipeline getMtnrqrd();
  inline  ::senseAD::msg::tap::CmbbDiag::Pipeline getCmbb();
  inline  ::senseAD::msg::tap::FcwDiag::Pipeline getFcw();
  inline  ::senseAD::msg::tap::BrkarbDiag::Pipeline getBrkarb();
  inline  ::senseAD::msg::tap::SceniaroDiag::Pipeline getSceniaro();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class LgSfLtap::Reader {
public:
  typedef LgSfLtap Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasStatemachine() const;
  inline  ::senseAD::msg::tap::Machinests::Reader getStatemachine() const;

  inline bool hasAebfunc() const;
  inline  ::senseAD::msg::tap::DiagAebfunc::Reader getAebfunc() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class LgSfLtap::Builder {
public:
  typedef LgSfLtap Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasStatemachine();
  inline  ::senseAD::msg::tap::Machinests::Builder getStatemachine();
  inline void setStatemachine( ::senseAD::msg::tap::Machinests::Reader value);
  inline  ::senseAD::msg::tap::Machinests::Builder initStatemachine();
  inline void adoptStatemachine(::capnp::Orphan< ::senseAD::msg::tap::Machinests>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::Machinests> disownStatemachine();

  inline bool hasAebfunc();
  inline  ::senseAD::msg::tap::DiagAebfunc::Builder getAebfunc();
  inline void setAebfunc( ::senseAD::msg::tap::DiagAebfunc::Reader value);
  inline  ::senseAD::msg::tap::DiagAebfunc::Builder initAebfunc();
  inline void adoptAebfunc(::capnp::Orphan< ::senseAD::msg::tap::DiagAebfunc>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::DiagAebfunc> disownAebfunc();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class LgSfLtap::Pipeline {
public:
  typedef LgSfLtap Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::tap::Machinests::Pipeline getStatemachine();
  inline  ::senseAD::msg::tap::DiagAebfunc::Pipeline getAebfunc();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class LgSfDiagInfo::Reader {
public:
  typedef LgSfDiagInfo Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint32_t getLgsfInhibitmask() const;

  inline  ::uint32_t getLgsfDiagflag() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class LgSfDiagInfo::Builder {
public:
  typedef LgSfDiagInfo Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint32_t getLgsfInhibitmask();
  inline void setLgsfInhibitmask( ::uint32_t value);

  inline  ::uint32_t getLgsfDiagflag();
  inline void setLgsfDiagflag( ::uint32_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class LgSfDiagInfo::Pipeline {
public:
  typedef LgSfDiagInfo Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class LgSafeOut::Reader {
public:
  typedef LgSafeOut Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasLgsfLongscene() const;
  inline  ::senseAD::msg::tap::LgSfLongScene::Reader getLgsfLongscene() const;

  inline bool hasLgsfLtap() const;
  inline  ::senseAD::msg::tap::LgSfLtap::Reader getLgsfLtap() const;

  inline bool hasLgsfDiag() const;
  inline  ::senseAD::msg::tap::LgSfDiagInfo::Reader getLgsfDiag() const;

  inline  ::uint8_t getLgsfUseLtap() const;

  inline  ::uint8_t getLgsfMajorversion() const;

  inline  ::uint8_t getLgsfMinorversion() const;

  inline  ::uint8_t getLgsfRlc() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class LgSafeOut::Builder {
public:
  typedef LgSafeOut Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasLgsfLongscene();
  inline  ::senseAD::msg::tap::LgSfLongScene::Builder getLgsfLongscene();
  inline void setLgsfLongscene( ::senseAD::msg::tap::LgSfLongScene::Reader value);
  inline  ::senseAD::msg::tap::LgSfLongScene::Builder initLgsfLongscene();
  inline void adoptLgsfLongscene(::capnp::Orphan< ::senseAD::msg::tap::LgSfLongScene>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::LgSfLongScene> disownLgsfLongscene();

  inline bool hasLgsfLtap();
  inline  ::senseAD::msg::tap::LgSfLtap::Builder getLgsfLtap();
  inline void setLgsfLtap( ::senseAD::msg::tap::LgSfLtap::Reader value);
  inline  ::senseAD::msg::tap::LgSfLtap::Builder initLgsfLtap();
  inline void adoptLgsfLtap(::capnp::Orphan< ::senseAD::msg::tap::LgSfLtap>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::LgSfLtap> disownLgsfLtap();

  inline bool hasLgsfDiag();
  inline  ::senseAD::msg::tap::LgSfDiagInfo::Builder getLgsfDiag();
  inline void setLgsfDiag( ::senseAD::msg::tap::LgSfDiagInfo::Reader value);
  inline  ::senseAD::msg::tap::LgSfDiagInfo::Builder initLgsfDiag();
  inline void adoptLgsfDiag(::capnp::Orphan< ::senseAD::msg::tap::LgSfDiagInfo>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::LgSfDiagInfo> disownLgsfDiag();

  inline  ::uint8_t getLgsfUseLtap();
  inline void setLgsfUseLtap( ::uint8_t value);

  inline  ::uint8_t getLgsfMajorversion();
  inline void setLgsfMajorversion( ::uint8_t value);

  inline  ::uint8_t getLgsfMinorversion();
  inline void setLgsfMinorversion( ::uint8_t value);

  inline  ::uint8_t getLgsfRlc();
  inline void setLgsfRlc( ::uint8_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class LgSafeOut::Pipeline {
public:
  typedef LgSafeOut Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::tap::LgSfLongScene::Pipeline getLgsfLongscene();
  inline  ::senseAD::msg::tap::LgSfLtap::Pipeline getLgsfLtap();
  inline  ::senseAD::msg::tap::LgSfDiagInfo::Pipeline getLgsfDiag();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class AsControl::Reader {
public:
  typedef AsControl Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasLgsf() const;
  inline  ::senseAD::msg::tap::LgSafeOut::Reader getLgsf() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class AsControl::Builder {
public:
  typedef AsControl Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasLgsf();
  inline  ::senseAD::msg::tap::LgSafeOut::Builder getLgsf();
  inline void setLgsf( ::senseAD::msg::tap::LgSafeOut::Reader value);
  inline  ::senseAD::msg::tap::LgSafeOut::Builder initLgsf();
  inline void adoptLgsf(::capnp::Orphan< ::senseAD::msg::tap::LgSafeOut>&& value);
  inline ::capnp::Orphan< ::senseAD::msg::tap::LgSafeOut> disownLgsf();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class AsControl::Pipeline {
public:
  typedef AsControl Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::senseAD::msg::tap::LgSafeOut::Pipeline getLgsf();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

inline  ::uint8_t LgSfCibdebug::Reader::getLgsfObjtoi() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfCibdebug::Builder::getLgsfObjtoi() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfObjtoi( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfCibdebug::Reader::getLgsfObjinpathage() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfCibdebug::Builder::getLgsfObjinpathage() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfObjinpathage( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfCibdebug::Reader::getLgsfObjinpathagethres() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfCibdebug::Builder::getLgsfObjinpathagethres() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfObjinpathagethres( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfCibdebug::Reader::getLgSfDriveEngage() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfCibdebug::Builder::getLgSfDriveEngage() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgSfDriveEngage( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t LgSfCibdebug::Reader::getLgsfObju16Resv1() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t LgSfCibdebug::Builder::getLgsfObju16Resv1() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfObju16Resv1( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t LgSfCibdebug::Reader::getLgsfObjtoiflag() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t LgSfCibdebug::Builder::getLgsfObjtoiflag() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfObjtoiflag( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfObjleadvel() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfObjleadvel() {
  return _builder.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfObjleadvel(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfObjttc() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfObjttc() {
  return _builder.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfObjttc(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfObjdesiredhitspd() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfObjdesiredhitspd() {
  return _builder.getDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfObjdesiredhitspd(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfBaserange() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfBaserange() {
  return _builder.getDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfBaserange(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfDistnear() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfDistnear() {
  return _builder.getDataField<float>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfDistnear(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfObjXolc() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfObjXolc() {
  return _builder.getDataField<float>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfObjXolc(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfHitdist() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfHitdist() {
  return _builder.getDataField<float>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfHitdist(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfYawdist() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfYawdist() {
  return _builder.getDataField<float>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfYawdist(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfHboffset() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfHboffset() {
  return _builder.getDataField<float>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfHboffset(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfLboffset() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfLboffset() {
  return _builder.getDataField<float>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfLboffset(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfPfoffset() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfPfoffset() {
  return _builder.getDataField<float>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfPfoffset(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfIbaoffset() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfIbaoffset() {
  return _builder.getDataField<float>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfIbaoffset(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfAbaoffset() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfAbaoffset() {
  return _builder.getDataField<float>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfAbaoffset(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfOverallrdcfac() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfOverallrdcfac() {
  return _builder.getDataField<float>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfOverallrdcfac(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfEbaoverallrdcfac() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfEbaoverallrdcfac() {
  return _builder.getDataField<float>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfEbaoverallrdcfac(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfNeartgtrdcfac() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfNeartgtrdcfac() {
  return _builder.getDataField<float>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfNeartgtrdcfac(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfVehbehvrdcfac() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfVehbehvrdcfac() {
  return _builder.getDataField<float>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfVehbehvrdcfac(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfXolcrdcfac() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfXolcrdcfac() {
  return _builder.getDataField<float>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfXolcrdcfac(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<19>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfHbrangethres() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<20>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfHbrangethres() {
  return _builder.getDataField<float>(
      ::capnp::bounded<20>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfHbrangethres(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<20>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfLbrangethres() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<21>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfLbrangethres() {
  return _builder.getDataField<float>(
      ::capnp::bounded<21>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfLbrangethres(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<21>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfPfrangethres() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<22>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfPfrangethres() {
  return _builder.getDataField<float>(
      ::capnp::bounded<22>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfPfrangethres(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<22>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfIbarangethres() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<23>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfIbarangethres() {
  return _builder.getDataField<float>(
      ::capnp::bounded<23>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfIbarangethres(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<23>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfAbarangethres() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfAbarangethres() {
  return _builder.getDataField<float>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfAbarangethres(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<24>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfReqdecelcloseloop() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<25>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfReqdecelcloseloop() {
  return _builder.getDataField<float>(
      ::capnp::bounded<25>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfReqdecelcloseloop(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<25>() * ::capnp::ELEMENTS, value);
}

inline float LgSfCibdebug::Reader::getLgsfReqdecel() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<26>() * ::capnp::ELEMENTS);
}

inline float LgSfCibdebug::Builder::getLgsfReqdecel() {
  return _builder.getDataField<float>(
      ::capnp::bounded<26>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfReqdecel(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<26>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfCibdebug::Reader::getLgsfDecelrelease() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<108>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfCibdebug::Builder::getLgsfDecelrelease() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<108>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfDecelrelease( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<108>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfCibdebug::Reader::getLgsfAbareq() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<109>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfCibdebug::Builder::getLgsfAbareq() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<109>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfAbareq( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<109>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfCibdebug::Reader::getLgsfHoldreq() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<110>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfCibdebug::Builder::getLgsfHoldreq() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<110>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfHoldreq( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<110>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfCibdebug::Reader::getLgsfBrklevel() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<111>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfCibdebug::Builder::getLgsfBrklevel() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<111>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfBrklevel( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<111>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t LgSfCibdebug::Reader::getLgsfEbareqflag() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<56>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t LgSfCibdebug::Builder::getLgsfEbareqflag() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<56>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfEbareqflag( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<56>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t LgSfCibdebug::Reader::getLgsfHbreqflag() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<57>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t LgSfCibdebug::Builder::getLgsfHbreqflag() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<57>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfHbreqflag( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<57>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t LgSfCibdebug::Reader::getLgsfLbreqflag() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<58>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t LgSfCibdebug::Builder::getLgsfLbreqflag() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<58>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfLbreqflag( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<58>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t LgSfCibdebug::Reader::getLgsfPfreqflag() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<59>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t LgSfCibdebug::Builder::getLgsfPfreqflag() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<59>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfPfreqflag( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<59>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t LgSfCibdebug::Reader::getLgsfAbareqflag() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<60>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t LgSfCibdebug::Builder::getLgsfAbareqflag() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<60>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfAbareqflag( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<60>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t LgSfCibdebug::Reader::getLgsfU16Resv1() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<61>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t LgSfCibdebug::Builder::getLgsfU16Resv1() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<61>() * ::capnp::ELEMENTS);
}
inline void LgSfCibdebug::Builder::setLgsfU16Resv1( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<61>() * ::capnp::ELEMENTS, value);
}

inline float LgSfFcwdebug::Reader::getLgsfFcwTTCThres() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline float LgSfFcwdebug::Builder::getLgsfFcwTTCThres() {
  return _builder.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void LgSfFcwdebug::Builder::setLgsfFcwTTCThres(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline float LgSfFcwdebug::Reader::getLgsfObjTTC() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline float LgSfFcwdebug::Builder::getLgsfObjTTC() {
  return _builder.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void LgSfFcwdebug::Builder::setLgsfObjTTC(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfFcwdebug::Reader::getLgsfChimesuppress() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfFcwdebug::Builder::getLgsfChimesuppress() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void LgSfFcwdebug::Builder::setLgsfChimesuppress( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfFcwdebug::Reader::getLgsfLatwarningreq() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfFcwdebug::Builder::getLgsfLatwarningreq() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}
inline void LgSfFcwdebug::Builder::setLgsfLatwarningreq( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfFcwdebug::Reader::getLgsfPrewarningreq() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfFcwdebug::Builder::getLgsfPrewarningreq() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}
inline void LgSfFcwdebug::Builder::setLgsfPrewarningreq( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfFcwdebug::Reader::getLgsfAwbreq() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfFcwdebug::Builder::getLgsfAwbreq() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}
inline void LgSfFcwdebug::Builder::setLgsfAwbreq( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfFcwdebug::Reader::getLgsfAwblevel() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfFcwdebug::Builder::getLgsfAwblevel() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}
inline void LgSfFcwdebug::Builder::setLgsfAwblevel( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfFcwdebug::Reader::getLgsfU8Resv1() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfFcwdebug::Builder::getLgsfU8Resv1() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}
inline void LgSfFcwdebug::Builder::setLgsfU8Resv1( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfFcwdebug::Reader::getLgsfU8Resv2() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfFcwdebug::Builder::getLgsfU8Resv2() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}
inline void LgSfFcwdebug::Builder::setLgsfU8Resv2( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfFcwdebug::Reader::getLgsfU8Resv3() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfFcwdebug::Builder::getLgsfU8Resv3() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}
inline void LgSfFcwdebug::Builder::setLgsfU8Resv3( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t LgSfFcwdebug::Reader::getLgsfChimesuppressflag() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t LgSfFcwdebug::Builder::getLgsfChimesuppressflag() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void LgSfFcwdebug::Builder::setLgsfChimesuppressflag( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t LgSfFcwdebug::Reader::getLgsfLatwarningflag() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t LgSfFcwdebug::Builder::getLgsfLatwarningflag() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}
inline void LgSfFcwdebug::Builder::setLgsfLatwarningflag( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t LgSfFcwdebug::Reader::getLgsfPrewarningflag() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t LgSfFcwdebug::Builder::getLgsfPrewarningflag() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}
inline void LgSfFcwdebug::Builder::setLgsfPrewarningflag( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t LgSfFcwdebug::Reader::getLgsfAwbflag() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t LgSfFcwdebug::Builder::getLgsfAwbflag() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}
inline void LgSfFcwdebug::Builder::setLgsfAwbflag( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS, value);
}

inline float LgSfLongScene::Reader::getLgsfTarreqdecel() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline float LgSfLongScene::Builder::getLgsfTarreqdecel() {
  return _builder.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsfTarreqdecel(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfLongScene::Reader::getLgsfAebreq() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfLongScene::Builder::getLgsfAebreq() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsfAebreq( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfLongScene::Reader::getLgsfAebtardecvld() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfLongScene::Builder::getLgsfAebtardecvld() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsfAebtardecvld( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfLongScene::Reader::getLgsfAwbreqlvl() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfLongScene::Builder::getLgsfAwbreqlvl() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsfAwbreqlvl( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfLongScene::Reader::getLgsfAbareq() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfLongScene::Builder::getLgsfAbareq() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsfAbareq( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfLongScene::Reader::getLgsfAbalvl() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfLongScene::Builder::getLgsfAbalvl() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsfAbalvl( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfLongScene::Reader::getLgsfHwreq() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfLongScene::Builder::getLgsfHwreq() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsfHwreq( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfLongScene::Reader::getLgsfHalightreq() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfLongScene::Builder::getLgsfHalightreq() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsfHalightreq( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSfLongScene::Reader::getLgsfBeltreq() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSfLongScene::Builder::getLgsfBeltreq() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsfBeltreq( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS, value);
}

inline  ::senseAD::msg::tap::AebState LgSfLongScene::Reader::getLgsfAebstate() const {
  return _reader.getDataField< ::senseAD::msg::tap::AebState>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::senseAD::msg::tap::AebState LgSfLongScene::Builder::getLgsfAebstate() {
  return _builder.getDataField< ::senseAD::msg::tap::AebState>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsfAebstate( ::senseAD::msg::tap::AebState value) {
  _builder.setDataField< ::senseAD::msg::tap::AebState>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::senseAD::msg::tap::FcwState LgSfLongScene::Reader::getLgsfFcwstate() const {
  return _reader.getDataField< ::senseAD::msg::tap::FcwState>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline  ::senseAD::msg::tap::FcwState LgSfLongScene::Builder::getLgsfFcwstate() {
  return _builder.getDataField< ::senseAD::msg::tap::FcwState>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsfFcwstate( ::senseAD::msg::tap::FcwState value) {
  _builder.setDataField< ::senseAD::msg::tap::FcwState>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline  ::senseAD::msg::tap::AwbState LgSfLongScene::Reader::getLgsfAwbstate() const {
  return _reader.getDataField< ::senseAD::msg::tap::AwbState>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::senseAD::msg::tap::AwbState LgSfLongScene::Builder::getLgsfAwbstate() {
  return _builder.getDataField< ::senseAD::msg::tap::AwbState>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsfAwbstate( ::senseAD::msg::tap::AwbState value) {
  _builder.setDataField< ::senseAD::msg::tap::AwbState>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline  ::uint16_t LgSfLongScene::Reader::getLgsgShadowmode() const {
  return _reader.getDataField< ::uint16_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}

inline  ::uint16_t LgSfLongScene::Builder::getLgsgShadowmode() {
  return _builder.getDataField< ::uint16_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsgShadowmode( ::uint16_t value) {
  _builder.setDataField< ::uint16_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t LgSfLongScene::Reader::getLgsfObjid() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::int32_t LgSfLongScene::Builder::getLgsfObjid() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsfObjid( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t LgSfLongScene::Reader::getLgsfObjvisid() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::int32_t LgSfLongScene::Builder::getLgsfObjvisid() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsfObjvisid( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t LgSfLongScene::Reader::getLgsfObjclass() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline  ::int32_t LgSfLongScene::Builder::getLgsfObjclass() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsfObjclass( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline float LgSfLongScene::Reader::getLgsfObjposx() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline float LgSfLongScene::Builder::getLgsfObjposx() {
  return _builder.getDataField<float>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsfObjposx(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline float LgSfLongScene::Reader::getLgsfObjposy() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}

inline float LgSfLongScene::Builder::getLgsfObjposy() {
  return _builder.getDataField<float>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsfObjposy(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS, value);
}

inline float LgSfLongScene::Reader::getLgsfObjvelx() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}

inline float LgSfLongScene::Builder::getLgsfObjvelx() {
  return _builder.getDataField<float>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsfObjvelx(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS, value);
}

inline float LgSfLongScene::Reader::getLgsfObjvely() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}

inline float LgSfLongScene::Builder::getLgsfObjvely() {
  return _builder.getDataField<float>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsfObjvely(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS, value);
}

inline float LgSfLongScene::Reader::getLgsfObjaccx() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}

inline float LgSfLongScene::Builder::getLgsfObjaccx() {
  return _builder.getDataField<float>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsfObjaccx(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS, value);
}

inline float LgSfLongScene::Reader::getLgsfObjaccy() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}

inline float LgSfLongScene::Builder::getLgsfObjaccy() {
  return _builder.getDataField<float>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsfObjaccy(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS, value);
}

inline float LgSfLongScene::Reader::getLgsfObjttc() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}

inline float LgSfLongScene::Builder::getLgsfObjttc() {
  return _builder.getDataField<float>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}
inline void LgSfLongScene::Builder::setLgsfObjttc(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS, value);
}

inline bool LgSfLongScene::Reader::hasCib() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool LgSfLongScene::Builder::hasCib() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::LgSfCibdebug::Reader LgSfLongScene::Reader::getCib() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfCibdebug>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::LgSfCibdebug::Builder LgSfLongScene::Builder::getCib() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfCibdebug>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::LgSfCibdebug::Pipeline LgSfLongScene::Pipeline::getCib() {
  return  ::senseAD::msg::tap::LgSfCibdebug::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void LgSfLongScene::Builder::setCib( ::senseAD::msg::tap::LgSfCibdebug::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfCibdebug>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::LgSfCibdebug::Builder LgSfLongScene::Builder::initCib() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfCibdebug>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void LgSfLongScene::Builder::adoptCib(
    ::capnp::Orphan< ::senseAD::msg::tap::LgSfCibdebug>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfCibdebug>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::LgSfCibdebug> LgSfLongScene::Builder::disownCib() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfCibdebug>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool LgSfLongScene::Reader::hasFcw() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool LgSfLongScene::Builder::hasFcw() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::LgSfFcwdebug::Reader LgSfLongScene::Reader::getFcw() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfFcwdebug>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::LgSfFcwdebug::Builder LgSfLongScene::Builder::getFcw() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfFcwdebug>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::LgSfFcwdebug::Pipeline LgSfLongScene::Pipeline::getFcw() {
  return  ::senseAD::msg::tap::LgSfFcwdebug::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void LgSfLongScene::Builder::setFcw( ::senseAD::msg::tap::LgSfFcwdebug::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfFcwdebug>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::LgSfFcwdebug::Builder LgSfLongScene::Builder::initFcw() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfFcwdebug>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void LgSfLongScene::Builder::adoptFcw(
    ::capnp::Orphan< ::senseAD::msg::tap::LgSfFcwdebug>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfFcwdebug>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::LgSfFcwdebug> LgSfLongScene::Builder::disownFcw() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfFcwdebug>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline  ::uint8_t Machinests::Reader::getAebstate() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Machinests::Builder::getAebstate() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void Machinests::Builder::setAebstate( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Machinests::Reader::getFcwstate() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Machinests::Builder::getFcwstate() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void Machinests::Builder::setFcwstate( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Machinests::Reader::getAwbstate() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Machinests::Builder::getAwbstate() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void Machinests::Builder::setAwbstate( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Machinests::Reader::getAwbLevel() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Machinests::Builder::getAwbLevel() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void Machinests::Builder::setAwbLevel( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Machinests::Reader::getHbastate() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Machinests::Builder::getHbastate() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void Machinests::Builder::setHbastate( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Machinests::Reader::getHbaLevel() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Machinests::Builder::getHbaLevel() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void Machinests::Builder::setHbaLevel( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Machinests::Reader::getPrefillstate() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Machinests::Builder::getPrefillstate() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void Machinests::Builder::setPrefillstate( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t Machinests::Reader::getDwstate() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t Machinests::Builder::getDwstate() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void Machinests::Builder::setDwstate( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline float Mtnrqrdintv::Reader::getAlatrqrd() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline float Mtnrqrdintv::Builder::getAlatrqrd() {
  return _builder.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void Mtnrqrdintv::Builder::setAlatrqrd(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t Mtnrqrdintv::Reader::getAlatrqrdqly() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::int32_t Mtnrqrdintv::Builder::getAlatrqrdqly() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void Mtnrqrdintv::Builder::setAlatrqrdqly( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline float Mtnrqrdintv::Reader::getAposlgtrqrd() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline float Mtnrqrdintv::Builder::getAposlgtrqrd() {
  return _builder.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void Mtnrqrdintv::Builder::setAposlgtrqrd(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline float Mtnrqrdintv::Reader::getAneglgtrqrd() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline float Mtnrqrdintv::Builder::getAneglgtrqrd() {
  return _builder.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void Mtnrqrdintv::Builder::setAneglgtrqrd(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline float Mtnrqrdintv::Reader::getJerkneglgtrqrd() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline float Mtnrqrdintv::Builder::getJerkneglgtrqrd() {
  return _builder.getDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void Mtnrqrdintv::Builder::setJerkneglgtrqrd(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline float Mtnrqrdintv::Reader::getCrvtraterqrdle() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline float Mtnrqrdintv::Builder::getCrvtraterqrdle() {
  return _builder.getDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void Mtnrqrdintv::Builder::setCrvtraterqrdle(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline float Mtnrqrdintv::Reader::getCrvtraterqrdri() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline float Mtnrqrdintv::Builder::getCrvtraterqrdri() {
  return _builder.getDataField<float>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void Mtnrqrdintv::Builder::setCrvtraterqrdri(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline float Mtnrqrdintv::Reader::getCrvtrqrdle() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline float Mtnrqrdintv::Builder::getCrvtrqrdle() {
  return _builder.getDataField<float>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void Mtnrqrdintv::Builder::setCrvtrqrdle(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline float Mtnrqrdintv::Reader::getCrvtrqrdri() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline float Mtnrqrdintv::Builder::getCrvtrqrdri() {
  return _builder.getDataField<float>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void Mtnrqrdintv::Builder::setCrvtrqrdri(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline float Mtnrqrdwarn::Reader::getAlatrqrd() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline float Mtnrqrdwarn::Builder::getAlatrqrd() {
  return _builder.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void Mtnrqrdwarn::Builder::setAlatrqrd(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t Mtnrqrdwarn::Reader::getAlatrqrdqly() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::int32_t Mtnrqrdwarn::Builder::getAlatrqrdqly() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void Mtnrqrdwarn::Builder::setAlatrqrdqly( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline float Mtnrqrdwarn::Reader::getAneglgtrqrdforwarn() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline float Mtnrqrdwarn::Builder::getAneglgtrqrdforwarn() {
  return _builder.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void Mtnrqrdwarn::Builder::setAneglgtrqrdforwarn(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline float Mtnrqrdwarn::Reader::getAneglgtrqrdforintv() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline float Mtnrqrdwarn::Builder::getAneglgtrqrdforintv() {
  return _builder.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void Mtnrqrdwarn::Builder::setAneglgtrqrdforintv(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline bool MtnrqrdDiag::Reader::hasMtnrqrdintv() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool MtnrqrdDiag::Builder::hasMtnrqrdintv() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::Mtnrqrdintv::Reader MtnrqrdDiag::Reader::getMtnrqrdintv() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Mtnrqrdintv>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::Mtnrqrdintv::Builder MtnrqrdDiag::Builder::getMtnrqrdintv() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Mtnrqrdintv>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::Mtnrqrdintv::Pipeline MtnrqrdDiag::Pipeline::getMtnrqrdintv() {
  return  ::senseAD::msg::tap::Mtnrqrdintv::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void MtnrqrdDiag::Builder::setMtnrqrdintv( ::senseAD::msg::tap::Mtnrqrdintv::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Mtnrqrdintv>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::Mtnrqrdintv::Builder MtnrqrdDiag::Builder::initMtnrqrdintv() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Mtnrqrdintv>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void MtnrqrdDiag::Builder::adoptMtnrqrdintv(
    ::capnp::Orphan< ::senseAD::msg::tap::Mtnrqrdintv>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Mtnrqrdintv>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::Mtnrqrdintv> MtnrqrdDiag::Builder::disownMtnrqrdintv() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Mtnrqrdintv>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool MtnrqrdDiag::Reader::hasMtnrqrdwarn() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool MtnrqrdDiag::Builder::hasMtnrqrdwarn() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::Mtnrqrdwarn::Reader MtnrqrdDiag::Reader::getMtnrqrdwarn() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Mtnrqrdwarn>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::Mtnrqrdwarn::Builder MtnrqrdDiag::Builder::getMtnrqrdwarn() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Mtnrqrdwarn>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::Mtnrqrdwarn::Pipeline MtnrqrdDiag::Pipeline::getMtnrqrdwarn() {
  return  ::senseAD::msg::tap::Mtnrqrdwarn::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void MtnrqrdDiag::Builder::setMtnrqrdwarn( ::senseAD::msg::tap::Mtnrqrdwarn::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Mtnrqrdwarn>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::Mtnrqrdwarn::Builder MtnrqrdDiag::Builder::initMtnrqrdwarn() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Mtnrqrdwarn>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void MtnrqrdDiag::Builder::adoptMtnrqrdwarn(
    ::capnp::Orphan< ::senseAD::msg::tap::Mtnrqrdwarn>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Mtnrqrdwarn>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::Mtnrqrdwarn> MtnrqrdDiag::Builder::disownMtnrqrdwarn() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Mtnrqrdwarn>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline float MtnrqrdDiag::Reader::getAneglgtrqrdforprimtarwarn() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline float MtnrqrdDiag::Builder::getAneglgtrqrdforprimtarwarn() {
  return _builder.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void MtnrqrdDiag::Builder::setAneglgtrqrdforprimtarwarn(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline float DiagAccelrequest::Reader::getPrebrakeaccreqlimit() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline float DiagAccelrequest::Builder::getPrebrakeaccreqlimit() {
  return _builder.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void DiagAccelrequest::Builder::setPrebrakeaccreqlimit(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline float DiagAccelrequest::Reader::getFullbrakeaccelerationrequest() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline float DiagAccelrequest::Builder::getFullbrakeaccelerationrequest() {
  return _builder.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void DiagAccelrequest::Builder::setFullbrakeaccelerationrequest(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagDeactivate::Reader::getDeactivate() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagDeactivate::Builder::getDeactivate() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void DiagDeactivate::Builder::setDeactivate( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagDeactivate::Reader::getVehiclestationarylongerthanxseconds() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagDeactivate::Builder::getVehiclestationarylongerthanxseconds() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void DiagDeactivate::Builder::setVehiclestationarylongerthanxseconds( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagDeactivate::Reader::getCollisionavoidedbybraking() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagDeactivate::Builder::getCollisionavoidedbybraking() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void DiagDeactivate::Builder::setCollisionavoidedbybraking( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagDeactivate::Reader::getObjconfnotok() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagDeactivate::Builder::getObjconfnotok() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void DiagDeactivate::Builder::setObjconfnotok( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagDeactivate::Reader::getObjidchanged() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagDeactivate::Builder::getObjidchanged() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void DiagDeactivate::Builder::setObjidchanged( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagDeactivate::Reader::getDelaydeactivation() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagDeactivate::Builder::getDelaydeactivation() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void DiagDeactivate::Builder::setDelaydeactivation( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagDeactivate::Reader::getObjstatedeactivation() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagDeactivate::Builder::getObjstatedeactivation() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void DiagDeactivate::Builder::setObjstatedeactivation( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagDeactivate::Reader::getReserved() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagDeactivate::Builder::getReserved() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void DiagDeactivate::Builder::setReserved( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagOncominginhibit::Reader::getTargethighcurvature() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagOncominginhibit::Builder::getTargethighcurvature() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void DiagOncominginhibit::Builder::setTargethighcurvature( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagOncominginhibit::Reader::getTargetanglenotvalid() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagOncominginhibit::Builder::getTargetanglenotvalid() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void DiagOncominginhibit::Builder::setTargetanglenotvalid( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagOncominginhibit::Reader::getReserved1() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagOncominginhibit::Builder::getReserved1() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void DiagOncominginhibit::Builder::setReserved1( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagOncominginhibit::Reader::getReserved2() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagOncominginhibit::Builder::getReserved2() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void DiagOncominginhibit::Builder::setReserved2( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline float DiagOncominginhibit::Reader::getHostcrvt() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline float DiagOncominginhibit::Builder::getHostcrvt() {
  return _builder.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void DiagOncominginhibit::Builder::setHostcrvt(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagOncominginhibit::Reader::getRecentscurve() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagOncominginhibit::Builder::getRecentscurve() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void DiagOncominginhibit::Builder::setRecentscurve( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagOncominginhibit::Reader::getNotturningnow() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagOncominginhibit::Builder::getNotturningnow() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}
inline void DiagOncominginhibit::Builder::setNotturningnow( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagOncominginhibit::Reader::getNorecentanglespeed() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagOncominginhibit::Builder::getNorecentanglespeed() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}
inline void DiagOncominginhibit::Builder::setNorecentanglespeed( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagOncominginhibit::Reader::getNorecentstart() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagOncominginhibit::Builder::getNorecentstart() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}
inline void DiagOncominginhibit::Builder::setNorecentstart( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagOncominginhibit::Reader::getMoreheadon() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagOncominginhibit::Builder::getMoreheadon() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}
inline void DiagOncominginhibit::Builder::setMoreheadon( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagOncominginhibit::Reader::getIsvehicleofunknownclass() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagOncominginhibit::Builder::getIsvehicleofunknownclass() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}
inline void DiagOncominginhibit::Builder::setIsvehicleofunknownclass( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagOncominginhibit::Reader::getReserved3() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagOncominginhibit::Builder::getReserved3() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}
inline void DiagOncominginhibit::Builder::setReserved3( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagOncominginhibit::Reader::getReserved4() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagOncominginhibit::Builder::getReserved4() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}
inline void DiagOncominginhibit::Builder::setReserved4( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagCommoninhibit::Reader::getSpdinhibit() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagCommoninhibit::Builder::getSpdinhibit() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void DiagCommoninhibit::Builder::setSpdinhibit( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagCommoninhibit::Reader::getReserved1() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagCommoninhibit::Builder::getReserved1() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void DiagCommoninhibit::Builder::setReserved1( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagCommoninhibit::Reader::getHostavoidinhibit() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagCommoninhibit::Builder::getHostavoidinhibit() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void DiagCommoninhibit::Builder::setHostavoidinhibit( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagCommoninhibit::Reader::getHostdrivingstraightandtargetisoncoming() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagCommoninhibit::Builder::getHostdrivingstraightandtargetisoncoming() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void DiagCommoninhibit::Builder::setHostdrivingstraightandtargetisoncoming( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline bool DiagCommoninhibit::Reader::hasOncominginhibit() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool DiagCommoninhibit::Builder::hasOncominginhibit() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::DiagOncominginhibit::Reader DiagCommoninhibit::Reader::getOncominginhibit() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagOncominginhibit>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::DiagOncominginhibit::Builder DiagCommoninhibit::Builder::getOncominginhibit() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagOncominginhibit>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::DiagOncominginhibit::Pipeline DiagCommoninhibit::Pipeline::getOncominginhibit() {
  return  ::senseAD::msg::tap::DiagOncominginhibit::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void DiagCommoninhibit::Builder::setOncominginhibit( ::senseAD::msg::tap::DiagOncominginhibit::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagOncominginhibit>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::DiagOncominginhibit::Builder DiagCommoninhibit::Builder::initOncominginhibit() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagOncominginhibit>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void DiagCommoninhibit::Builder::adoptOncominginhibit(
    ::capnp::Orphan< ::senseAD::msg::tap::DiagOncominginhibit>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagOncominginhibit>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::DiagOncominginhibit> DiagCommoninhibit::Builder::disownOncominginhibit() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagOncominginhibit>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline  ::uint8_t DiagFullbraking::Reader::getFullbrakingthreat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagFullbraking::Builder::getFullbrakingthreat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void DiagFullbraking::Builder::setFullbrakingthreat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagFullbraking::Reader::getSteeringthreat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagFullbraking::Builder::getSteeringthreat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void DiagFullbraking::Builder::setSteeringthreat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagFullbraking::Reader::getBrakingthreat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagFullbraking::Builder::getBrakingthreat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void DiagFullbraking::Builder::setBrakingthreat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagFullbraking::Reader::getAccelerationthreat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagFullbraking::Builder::getAccelerationthreat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void DiagFullbraking::Builder::setAccelerationthreat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagFullbraking::Reader::getObjectconfok() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagFullbraking::Builder::getObjectconfok() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void DiagFullbraking::Builder::setObjectconfok( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagFullbraking::Reader::getReserved1() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagFullbraking::Builder::getReserved1() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void DiagFullbraking::Builder::setReserved1( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagFullbraking::Reader::getReserved2() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagFullbraking::Builder::getReserved2() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void DiagFullbraking::Builder::setReserved2( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagFullbraking::Reader::getReserved3() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagFullbraking::Builder::getReserved3() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void DiagFullbraking::Builder::setReserved3( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagPrebraking::Reader::getPrebrakingthreat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagPrebraking::Builder::getPrebrakingthreat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void DiagPrebraking::Builder::setPrebrakingthreat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagPrebraking::Reader::getSteeringthreat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagPrebraking::Builder::getSteeringthreat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void DiagPrebraking::Builder::setSteeringthreat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagPrebraking::Reader::getBrakingthreat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagPrebraking::Builder::getBrakingthreat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void DiagPrebraking::Builder::setBrakingthreat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagPrebraking::Reader::getAccelerationthreat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagPrebraking::Builder::getAccelerationthreat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void DiagPrebraking::Builder::setAccelerationthreat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagPrebraking::Reader::getObjconfok() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagPrebraking::Builder::getObjconfok() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void DiagPrebraking::Builder::setObjconfok( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagPrebraking::Reader::getReserved1() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagPrebraking::Builder::getReserved1() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void DiagPrebraking::Builder::setReserved1( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagPrebraking::Reader::getReserved2() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagPrebraking::Builder::getReserved2() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void DiagPrebraking::Builder::setReserved2( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagPrebraking::Reader::getReserved3() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagPrebraking::Builder::getReserved3() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void DiagPrebraking::Builder::setReserved3( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline bool DiagCritlgteval::Reader::hasDeactivate() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool DiagCritlgteval::Builder::hasDeactivate() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::DiagDeactivate::Reader DiagCritlgteval::Reader::getDeactivate() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagDeactivate>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::DiagDeactivate::Builder DiagCritlgteval::Builder::getDeactivate() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagDeactivate>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::DiagDeactivate::Pipeline DiagCritlgteval::Pipeline::getDeactivate() {
  return  ::senseAD::msg::tap::DiagDeactivate::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void DiagCritlgteval::Builder::setDeactivate( ::senseAD::msg::tap::DiagDeactivate::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagDeactivate>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::DiagDeactivate::Builder DiagCritlgteval::Builder::initDeactivate() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagDeactivate>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void DiagCritlgteval::Builder::adoptDeactivate(
    ::capnp::Orphan< ::senseAD::msg::tap::DiagDeactivate>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagDeactivate>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::DiagDeactivate> DiagCritlgteval::Builder::disownDeactivate() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagDeactivate>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool DiagCritlgteval::Reader::hasCommoninhibit() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool DiagCritlgteval::Builder::hasCommoninhibit() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::DiagCommoninhibit::Reader DiagCritlgteval::Reader::getCommoninhibit() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagCommoninhibit>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::DiagCommoninhibit::Builder DiagCritlgteval::Builder::getCommoninhibit() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagCommoninhibit>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::DiagCommoninhibit::Pipeline DiagCritlgteval::Pipeline::getCommoninhibit() {
  return  ::senseAD::msg::tap::DiagCommoninhibit::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void DiagCritlgteval::Builder::setCommoninhibit( ::senseAD::msg::tap::DiagCommoninhibit::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagCommoninhibit>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::DiagCommoninhibit::Builder DiagCritlgteval::Builder::initCommoninhibit() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagCommoninhibit>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void DiagCritlgteval::Builder::adoptCommoninhibit(
    ::capnp::Orphan< ::senseAD::msg::tap::DiagCommoninhibit>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagCommoninhibit>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::DiagCommoninhibit> DiagCritlgteval::Builder::disownCommoninhibit() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagCommoninhibit>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool DiagCritlgteval::Reader::hasFullbraking() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool DiagCritlgteval::Builder::hasFullbraking() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::DiagFullbraking::Reader DiagCritlgteval::Reader::getFullbraking() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagFullbraking>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::DiagFullbraking::Builder DiagCritlgteval::Builder::getFullbraking() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagFullbraking>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::DiagFullbraking::Pipeline DiagCritlgteval::Pipeline::getFullbraking() {
  return  ::senseAD::msg::tap::DiagFullbraking::Pipeline(_typeless.getPointerField(2));
}
#endif  // !CAPNP_LITE
inline void DiagCritlgteval::Builder::setFullbraking( ::senseAD::msg::tap::DiagFullbraking::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagFullbraking>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::DiagFullbraking::Builder DiagCritlgteval::Builder::initFullbraking() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagFullbraking>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void DiagCritlgteval::Builder::adoptFullbraking(
    ::capnp::Orphan< ::senseAD::msg::tap::DiagFullbraking>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagFullbraking>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::DiagFullbraking> DiagCritlgteval::Builder::disownFullbraking() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagFullbraking>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool DiagCritlgteval::Reader::hasPrebraking() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool DiagCritlgteval::Builder::hasPrebraking() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::DiagPrebraking::Reader DiagCritlgteval::Reader::getPrebraking() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagPrebraking>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::DiagPrebraking::Builder DiagCritlgteval::Builder::getPrebraking() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagPrebraking>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::DiagPrebraking::Pipeline DiagCritlgteval::Pipeline::getPrebraking() {
  return  ::senseAD::msg::tap::DiagPrebraking::Pipeline(_typeless.getPointerField(3));
}
#endif  // !CAPNP_LITE
inline void DiagCritlgteval::Builder::setPrebraking( ::senseAD::msg::tap::DiagPrebraking::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagPrebraking>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::DiagPrebraking::Builder DiagCritlgteval::Builder::initPrebraking() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagPrebraking>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void DiagCritlgteval::Builder::adoptPrebraking(
    ::capnp::Orphan< ::senseAD::msg::tap::DiagPrebraking>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagPrebraking>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::DiagPrebraking> DiagCritlgteval::Builder::disownPrebraking() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagPrebraking>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline bool CmbbDiag::Reader::hasAccelrequest() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool CmbbDiag::Builder::hasAccelrequest() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::DiagAccelrequest::Reader CmbbDiag::Reader::getAccelrequest() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagAccelrequest>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::DiagAccelrequest::Builder CmbbDiag::Builder::getAccelrequest() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagAccelrequest>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::DiagAccelrequest::Pipeline CmbbDiag::Pipeline::getAccelrequest() {
  return  ::senseAD::msg::tap::DiagAccelrequest::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void CmbbDiag::Builder::setAccelrequest( ::senseAD::msg::tap::DiagAccelrequest::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagAccelrequest>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::DiagAccelrequest::Builder CmbbDiag::Builder::initAccelrequest() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagAccelrequest>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void CmbbDiag::Builder::adoptAccelrequest(
    ::capnp::Orphan< ::senseAD::msg::tap::DiagAccelrequest>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagAccelrequest>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::DiagAccelrequest> CmbbDiag::Builder::disownAccelrequest() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagAccelrequest>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool CmbbDiag::Reader::hasCritlgteval() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool CmbbDiag::Builder::hasCritlgteval() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::DiagCritlgteval::Reader CmbbDiag::Reader::getCritlgteval() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagCritlgteval>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::DiagCritlgteval::Builder CmbbDiag::Builder::getCritlgteval() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagCritlgteval>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::DiagCritlgteval::Pipeline CmbbDiag::Pipeline::getCritlgteval() {
  return  ::senseAD::msg::tap::DiagCritlgteval::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void CmbbDiag::Builder::setCritlgteval( ::senseAD::msg::tap::DiagCritlgteval::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagCritlgteval>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::DiagCritlgteval::Builder CmbbDiag::Builder::initCritlgteval() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagCritlgteval>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void CmbbDiag::Builder::adoptCritlgteval(
    ::capnp::Orphan< ::senseAD::msg::tap::DiagCritlgteval>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagCritlgteval>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::DiagCritlgteval> CmbbDiag::Builder::disownCritlgteval() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagCritlgteval>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline  ::uint8_t CmbbDiag::Reader::getCmbbstatus() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t CmbbDiag::Builder::getCmbbstatus() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void CmbbDiag::Builder::setCmbbstatus( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t CmbbDiag::Reader::getReserved1() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t CmbbDiag::Builder::getReserved1() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void CmbbDiag::Builder::setReserved1( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t CmbbDiag::Reader::getReserved2() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t CmbbDiag::Builder::getReserved2() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void CmbbDiag::Builder::setReserved2( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t CmbbDiag::Reader::getReserved3() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t CmbbDiag::Builder::getReserved3() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void CmbbDiag::Builder::setReserved3( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagStartConditions::Reader::getBtnAboveLimit() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagStartConditions::Builder::getBtnAboveLimit() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void DiagStartConditions::Builder::setBtnAboveLimit( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline float DiagStartConditions::Reader::getBrakeThreatNumber() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline float DiagStartConditions::Builder::getBrakeThreatNumber() {
  return _builder.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void DiagStartConditions::Builder::setBrakeThreatNumber(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagStartConditions::Reader::getObjectIsValid() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagStartConditions::Builder::getObjectIsValid() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void DiagStartConditions::Builder::setObjectIsValid( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagStartConditions::Reader::getDriverCanNotEasilySteerAway() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagStartConditions::Builder::getDriverCanNotEasilySteerAway() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void DiagStartConditions::Builder::setDriverCanNotEasilySteerAway( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagStartConditions::Reader::getBtnTrigger() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagStartConditions::Builder::getBtnTrigger() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void DiagStartConditions::Builder::setBtnTrigger( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagStartConditions::Reader::getCmbbTrigger() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagStartConditions::Builder::getCmbbTrigger() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void DiagStartConditions::Builder::setCmbbTrigger( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagStartConditions::Reader::getVisionOnlyTrigger() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagStartConditions::Builder::getVisionOnlyTrigger() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS);
}
inline void DiagStartConditions::Builder::setVisionOnlyTrigger( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<9>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagStartConditions::Reader::getStartConditionsMet() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagStartConditions::Builder::getStartConditionsMet() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS);
}
inline void DiagStartConditions::Builder::setStartConditionsMet( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<10>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagStartConditions::Reader::getWarningType() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagStartConditions::Builder::getWarningType() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS);
}
inline void DiagStartConditions::Builder::setWarningType( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<11>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagStartConditions::Reader::getBrakeGainConditionsMet() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagStartConditions::Builder::getBrakeGainConditionsMet() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS);
}
inline void DiagStartConditions::Builder::setBrakeGainConditionsMet( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<12>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagStartConditions::Reader::getComfortDistanceTrigger() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagStartConditions::Builder::getComfortDistanceTrigger() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS);
}
inline void DiagStartConditions::Builder::setComfortDistanceTrigger( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<13>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagStartConditions::Reader::getBrakeGainConditionsBit() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagStartConditions::Builder::getBrakeGainConditionsBit() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS);
}
inline void DiagStartConditions::Builder::setBrakeGainConditionsBit( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<14>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagStartConditions::Reader::getWarningState() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagStartConditions::Builder::getWarningState() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS);
}
inline void DiagStartConditions::Builder::setWarningState( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<15>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagStartConditions::Reader::getResv1() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagStartConditions::Builder::getResv1() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS);
}
inline void DiagStartConditions::Builder::setResv1( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagInhibitCdnSts::Reader::getInhibitFcw() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagInhibitCdnSts::Builder::getInhibitFcw() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void DiagInhibitCdnSts::Builder::setInhibitFcw( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagInhibitCdnSts::Reader::getBelowLowSpeedLimit() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagInhibitCdnSts::Builder::getBelowLowSpeedLimit() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void DiagInhibitCdnSts::Builder::setBelowLowSpeedLimit( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagInhibitCdnSts::Reader::getVehicleNotRollingForward() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagInhibitCdnSts::Builder::getVehicleNotRollingForward() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void DiagInhibitCdnSts::Builder::setVehicleNotRollingForward( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagInhibitCdnSts::Reader::getFcwDisabledByFaultManager() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagInhibitCdnSts::Builder::getFcwDisabledByFaultManager() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void DiagInhibitCdnSts::Builder::setFcwDisabledByFaultManager( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagInhibitCdnSts::Reader::getSceniaroCheckNotOk() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagInhibitCdnSts::Builder::getSceniaroCheckNotOk() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void DiagInhibitCdnSts::Builder::setSceniaroCheckNotOk( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagInhibitCdnSts::Reader::getResv1() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagInhibitCdnSts::Builder::getResv1() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void DiagInhibitCdnSts::Builder::setResv1( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagInhibitCdnSts::Reader::getResv2() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagInhibitCdnSts::Builder::getResv2() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void DiagInhibitCdnSts::Builder::setResv2( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t DiagInhibitCdnSts::Reader::getResv3() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t DiagInhibitCdnSts::Builder::getResv3() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void DiagInhibitCdnSts::Builder::setResv3( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline float CllsnFwdWarnCtrlDebug::Reader::getDecelReq() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline float CllsnFwdWarnCtrlDebug::Builder::getDecelReq() {
  return _builder.getDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void CllsnFwdWarnCtrlDebug::Builder::setDecelReq(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t CllsnFwdWarnCtrlDebug::Reader::getDecelEna() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t CllsnFwdWarnCtrlDebug::Builder::getDecelEna() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void CllsnFwdWarnCtrlDebug::Builder::setDecelEna( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline float CllsnFwdWarnCtrlDebug::Reader::getBrkGainReq() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline float CllsnFwdWarnCtrlDebug::Builder::getBrkGainReq() {
  return _builder.getDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void CllsnFwdWarnCtrlDebug::Builder::setBrkGainReq(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline float CllsnFwdWarnCtrlDebug::Reader::getBrkGainMaxDecel() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline float CllsnFwdWarnCtrlDebug::Builder::getBrkGainMaxDecel() {
  return _builder.getDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void CllsnFwdWarnCtrlDebug::Builder::setBrkGainMaxDecel(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t CllsnFwdWarnCtrlDebug::Reader::getBrkGainEna() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t CllsnFwdWarnCtrlDebug::Builder::getBrkGainEna() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void CllsnFwdWarnCtrlDebug::Builder::setBrkGainEna( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t CllsnFwdWarnCtrlDebug::Reader::getCllsnThreat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t CllsnFwdWarnCtrlDebug::Builder::getCllsnThreat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void CllsnFwdWarnCtrlDebug::Builder::setCllsnThreat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t CllsnFwdWarnCtrlDebug::Reader::getBltLvl() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t CllsnFwdWarnCtrlDebug::Builder::getBltLvl() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void CllsnFwdWarnCtrlDebug::Builder::setBltLvl( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t CllsnFwdWarnCtrlDebug::Reader::getDwActive() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t CllsnFwdWarnCtrlDebug::Builder::getDwActive() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS);
}
inline void CllsnFwdWarnCtrlDebug::Builder::setDwActive( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<16>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t CllsnFwdWarnCtrlDebug::Reader::getWarnReq() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t CllsnFwdWarnCtrlDebug::Builder::getWarnReq() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS);
}
inline void CllsnFwdWarnCtrlDebug::Builder::setWarnReq( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<17>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t CllsnFwdWarnCtrlDebug::Reader::getWarnObjType() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t CllsnFwdWarnCtrlDebug::Builder::getWarnObjType() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS);
}
inline void CllsnFwdWarnCtrlDebug::Builder::setWarnObjType( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<18>() * ::capnp::ELEMENTS, value);
}

inline bool FcwDiag::Reader::hasStartConditions() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool FcwDiag::Builder::hasStartConditions() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::DiagStartConditions::Reader FcwDiag::Reader::getStartConditions() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagStartConditions>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::DiagStartConditions::Builder FcwDiag::Builder::getStartConditions() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagStartConditions>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::DiagStartConditions::Pipeline FcwDiag::Pipeline::getStartConditions() {
  return  ::senseAD::msg::tap::DiagStartConditions::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void FcwDiag::Builder::setStartConditions( ::senseAD::msg::tap::DiagStartConditions::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagStartConditions>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::DiagStartConditions::Builder FcwDiag::Builder::initStartConditions() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagStartConditions>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void FcwDiag::Builder::adoptStartConditions(
    ::capnp::Orphan< ::senseAD::msg::tap::DiagStartConditions>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagStartConditions>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::DiagStartConditions> FcwDiag::Builder::disownStartConditions() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagStartConditions>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool FcwDiag::Reader::hasInhibitCdnSts() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool FcwDiag::Builder::hasInhibitCdnSts() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::DiagInhibitCdnSts::Reader FcwDiag::Reader::getInhibitCdnSts() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagInhibitCdnSts>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::DiagInhibitCdnSts::Builder FcwDiag::Builder::getInhibitCdnSts() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagInhibitCdnSts>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::DiagInhibitCdnSts::Pipeline FcwDiag::Pipeline::getInhibitCdnSts() {
  return  ::senseAD::msg::tap::DiagInhibitCdnSts::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void FcwDiag::Builder::setInhibitCdnSts( ::senseAD::msg::tap::DiagInhibitCdnSts::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagInhibitCdnSts>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::DiagInhibitCdnSts::Builder FcwDiag::Builder::initInhibitCdnSts() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagInhibitCdnSts>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void FcwDiag::Builder::adoptInhibitCdnSts(
    ::capnp::Orphan< ::senseAD::msg::tap::DiagInhibitCdnSts>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagInhibitCdnSts>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::DiagInhibitCdnSts> FcwDiag::Builder::disownInhibitCdnSts() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagInhibitCdnSts>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool FcwDiag::Reader::hasActtnDataFromCllsnFwdWarnCtrl() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool FcwDiag::Builder::hasActtnDataFromCllsnFwdWarnCtrl() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::CllsnFwdWarnCtrlDebug::Reader FcwDiag::Reader::getActtnDataFromCllsnFwdWarnCtrl() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::CllsnFwdWarnCtrlDebug>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::CllsnFwdWarnCtrlDebug::Builder FcwDiag::Builder::getActtnDataFromCllsnFwdWarnCtrl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::CllsnFwdWarnCtrlDebug>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::CllsnFwdWarnCtrlDebug::Pipeline FcwDiag::Pipeline::getActtnDataFromCllsnFwdWarnCtrl() {
  return  ::senseAD::msg::tap::CllsnFwdWarnCtrlDebug::Pipeline(_typeless.getPointerField(2));
}
#endif  // !CAPNP_LITE
inline void FcwDiag::Builder::setActtnDataFromCllsnFwdWarnCtrl( ::senseAD::msg::tap::CllsnFwdWarnCtrlDebug::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::CllsnFwdWarnCtrlDebug>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::CllsnFwdWarnCtrlDebug::Builder FcwDiag::Builder::initActtnDataFromCllsnFwdWarnCtrl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::CllsnFwdWarnCtrlDebug>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void FcwDiag::Builder::adoptActtnDataFromCllsnFwdWarnCtrl(
    ::capnp::Orphan< ::senseAD::msg::tap::CllsnFwdWarnCtrlDebug>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::CllsnFwdWarnCtrlDebug>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::CllsnFwdWarnCtrlDebug> FcwDiag::Builder::disownActtnDataFromCllsnFwdWarnCtrl() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::CllsnFwdWarnCtrlDebug>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline  ::uint8_t FcwDiag::Reader::getResv1() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FcwDiag::Builder::getResv1() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void FcwDiag::Builder::setResv1( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t FcwDiag::Reader::getResv2() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t FcwDiag::Builder::getResv2() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void FcwDiag::Builder::setResv2( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t BrkarbDiag::Reader::getCllsnthreat() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t BrkarbDiag::Builder::getCllsnthreat() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void BrkarbDiag::Builder::setCllsnthreat( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t BrkarbDiag::Reader::getBrkarbresult() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t BrkarbDiag::Builder::getBrkarbresult() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void BrkarbDiag::Builder::setBrkarbresult( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t BrkarbDiag::Reader::getAsysftydecelreqdendbyspdredn() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t BrkarbDiag::Builder::getAsysftydecelreqdendbyspdredn() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void BrkarbDiag::Builder::setAsysftydecelreqdendbyspdredn( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t BrkarbDiag::Reader::getReserved() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t BrkarbDiag::Builder::getReserved() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void BrkarbDiag::Builder::setReserved( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline float BrkarbDiag::Reader::getDecelrequestbrkarb() const {
  return _reader.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline float BrkarbDiag::Builder::getDecelrequestbrkarb() {
  return _builder.getDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void BrkarbDiag::Builder::setDecelrequestbrkarb(float value) {
  _builder.setDataField<float>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t SceniaroDiag::Reader::getEgoMotionType() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t SceniaroDiag::Builder::getEgoMotionType() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void SceniaroDiag::Builder::setEgoMotionType( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t SceniaroDiag::Reader::getSceniaroClass() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t SceniaroDiag::Builder::getSceniaroClass() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void SceniaroDiag::Builder::setSceniaroClass( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t SceniaroDiag::Reader::getAebSceniaroResult() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t SceniaroDiag::Builder::getAebSceniaroResult() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void SceniaroDiag::Builder::setAebSceniaroResult( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t SceniaroDiag::Reader::getFcwSceniaroResult() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t SceniaroDiag::Builder::getFcwSceniaroResult() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void SceniaroDiag::Builder::setFcwSceniaroResult( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t SceniaroDiag::Reader::getConfDelay() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t SceniaroDiag::Builder::getConfDelay() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS);
}
inline void SceniaroDiag::Builder::setConfDelay( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<4>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t SceniaroDiag::Reader::getSceniaroFailReason() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t SceniaroDiag::Builder::getSceniaroFailReason() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS);
}
inline void SceniaroDiag::Builder::setSceniaroFailReason( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<5>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t SceniaroDiag::Reader::getReserved1() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t SceniaroDiag::Builder::getReserved1() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void SceniaroDiag::Builder::setReserved1( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t SceniaroDiag::Reader::getReserved2() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t SceniaroDiag::Builder::getReserved2() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void SceniaroDiag::Builder::setReserved2( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline bool DiagAebfunc::Reader::hasMtnrqrd() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool DiagAebfunc::Builder::hasMtnrqrd() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::MtnrqrdDiag::Reader DiagAebfunc::Reader::getMtnrqrd() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::MtnrqrdDiag>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::MtnrqrdDiag::Builder DiagAebfunc::Builder::getMtnrqrd() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::MtnrqrdDiag>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::MtnrqrdDiag::Pipeline DiagAebfunc::Pipeline::getMtnrqrd() {
  return  ::senseAD::msg::tap::MtnrqrdDiag::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void DiagAebfunc::Builder::setMtnrqrd( ::senseAD::msg::tap::MtnrqrdDiag::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::MtnrqrdDiag>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::MtnrqrdDiag::Builder DiagAebfunc::Builder::initMtnrqrd() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::MtnrqrdDiag>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void DiagAebfunc::Builder::adoptMtnrqrd(
    ::capnp::Orphan< ::senseAD::msg::tap::MtnrqrdDiag>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::MtnrqrdDiag>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::MtnrqrdDiag> DiagAebfunc::Builder::disownMtnrqrd() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::MtnrqrdDiag>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool DiagAebfunc::Reader::hasCmbb() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool DiagAebfunc::Builder::hasCmbb() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::CmbbDiag::Reader DiagAebfunc::Reader::getCmbb() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::CmbbDiag>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::CmbbDiag::Builder DiagAebfunc::Builder::getCmbb() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::CmbbDiag>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::CmbbDiag::Pipeline DiagAebfunc::Pipeline::getCmbb() {
  return  ::senseAD::msg::tap::CmbbDiag::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void DiagAebfunc::Builder::setCmbb( ::senseAD::msg::tap::CmbbDiag::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::CmbbDiag>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::CmbbDiag::Builder DiagAebfunc::Builder::initCmbb() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::CmbbDiag>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void DiagAebfunc::Builder::adoptCmbb(
    ::capnp::Orphan< ::senseAD::msg::tap::CmbbDiag>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::CmbbDiag>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::CmbbDiag> DiagAebfunc::Builder::disownCmbb() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::CmbbDiag>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool DiagAebfunc::Reader::hasFcw() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool DiagAebfunc::Builder::hasFcw() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::FcwDiag::Reader DiagAebfunc::Reader::getFcw() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::FcwDiag>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::FcwDiag::Builder DiagAebfunc::Builder::getFcw() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::FcwDiag>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::FcwDiag::Pipeline DiagAebfunc::Pipeline::getFcw() {
  return  ::senseAD::msg::tap::FcwDiag::Pipeline(_typeless.getPointerField(2));
}
#endif  // !CAPNP_LITE
inline void DiagAebfunc::Builder::setFcw( ::senseAD::msg::tap::FcwDiag::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::FcwDiag>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::FcwDiag::Builder DiagAebfunc::Builder::initFcw() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::FcwDiag>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void DiagAebfunc::Builder::adoptFcw(
    ::capnp::Orphan< ::senseAD::msg::tap::FcwDiag>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::FcwDiag>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::FcwDiag> DiagAebfunc::Builder::disownFcw() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::FcwDiag>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool DiagAebfunc::Reader::hasBrkarb() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool DiagAebfunc::Builder::hasBrkarb() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::BrkarbDiag::Reader DiagAebfunc::Reader::getBrkarb() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::BrkarbDiag>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::BrkarbDiag::Builder DiagAebfunc::Builder::getBrkarb() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::BrkarbDiag>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::BrkarbDiag::Pipeline DiagAebfunc::Pipeline::getBrkarb() {
  return  ::senseAD::msg::tap::BrkarbDiag::Pipeline(_typeless.getPointerField(3));
}
#endif  // !CAPNP_LITE
inline void DiagAebfunc::Builder::setBrkarb( ::senseAD::msg::tap::BrkarbDiag::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::BrkarbDiag>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::BrkarbDiag::Builder DiagAebfunc::Builder::initBrkarb() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::BrkarbDiag>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void DiagAebfunc::Builder::adoptBrkarb(
    ::capnp::Orphan< ::senseAD::msg::tap::BrkarbDiag>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::BrkarbDiag>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::BrkarbDiag> DiagAebfunc::Builder::disownBrkarb() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::BrkarbDiag>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline bool DiagAebfunc::Reader::hasSceniaro() const {
  return !_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline bool DiagAebfunc::Builder::hasSceniaro() {
  return !_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::SceniaroDiag::Reader DiagAebfunc::Reader::getSceniaro() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::SceniaroDiag>::get(_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::SceniaroDiag::Builder DiagAebfunc::Builder::getSceniaro() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::SceniaroDiag>::get(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::SceniaroDiag::Pipeline DiagAebfunc::Pipeline::getSceniaro() {
  return  ::senseAD::msg::tap::SceniaroDiag::Pipeline(_typeless.getPointerField(4));
}
#endif  // !CAPNP_LITE
inline void DiagAebfunc::Builder::setSceniaro( ::senseAD::msg::tap::SceniaroDiag::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::SceniaroDiag>::set(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::SceniaroDiag::Builder DiagAebfunc::Builder::initSceniaro() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::SceniaroDiag>::init(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline void DiagAebfunc::Builder::adoptSceniaro(
    ::capnp::Orphan< ::senseAD::msg::tap::SceniaroDiag>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::SceniaroDiag>::adopt(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::SceniaroDiag> DiagAebfunc::Builder::disownSceniaro() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::SceniaroDiag>::disown(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}

inline bool LgSfLtap::Reader::hasStatemachine() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool LgSfLtap::Builder::hasStatemachine() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::Machinests::Reader LgSfLtap::Reader::getStatemachine() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Machinests>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::Machinests::Builder LgSfLtap::Builder::getStatemachine() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Machinests>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::Machinests::Pipeline LgSfLtap::Pipeline::getStatemachine() {
  return  ::senseAD::msg::tap::Machinests::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void LgSfLtap::Builder::setStatemachine( ::senseAD::msg::tap::Machinests::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Machinests>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::Machinests::Builder LgSfLtap::Builder::initStatemachine() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Machinests>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void LgSfLtap::Builder::adoptStatemachine(
    ::capnp::Orphan< ::senseAD::msg::tap::Machinests>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Machinests>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::Machinests> LgSfLtap::Builder::disownStatemachine() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::Machinests>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool LgSfLtap::Reader::hasAebfunc() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool LgSfLtap::Builder::hasAebfunc() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::DiagAebfunc::Reader LgSfLtap::Reader::getAebfunc() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagAebfunc>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::DiagAebfunc::Builder LgSfLtap::Builder::getAebfunc() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagAebfunc>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::DiagAebfunc::Pipeline LgSfLtap::Pipeline::getAebfunc() {
  return  ::senseAD::msg::tap::DiagAebfunc::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void LgSfLtap::Builder::setAebfunc( ::senseAD::msg::tap::DiagAebfunc::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagAebfunc>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::DiagAebfunc::Builder LgSfLtap::Builder::initAebfunc() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagAebfunc>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void LgSfLtap::Builder::adoptAebfunc(
    ::capnp::Orphan< ::senseAD::msg::tap::DiagAebfunc>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagAebfunc>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::DiagAebfunc> LgSfLtap::Builder::disownAebfunc() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::DiagAebfunc>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline  ::uint32_t LgSfDiagInfo::Reader::getLgsfInhibitmask() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t LgSfDiagInfo::Builder::getLgsfInhibitmask() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void LgSfDiagInfo::Builder::setLgsfInhibitmask( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t LgSfDiagInfo::Reader::getLgsfDiagflag() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t LgSfDiagInfo::Builder::getLgsfDiagflag() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void LgSfDiagInfo::Builder::setLgsfDiagflag( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline bool LgSafeOut::Reader::hasLgsfLongscene() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool LgSafeOut::Builder::hasLgsfLongscene() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::LgSfLongScene::Reader LgSafeOut::Reader::getLgsfLongscene() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfLongScene>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::LgSfLongScene::Builder LgSafeOut::Builder::getLgsfLongscene() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfLongScene>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::LgSfLongScene::Pipeline LgSafeOut::Pipeline::getLgsfLongscene() {
  return  ::senseAD::msg::tap::LgSfLongScene::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void LgSafeOut::Builder::setLgsfLongscene( ::senseAD::msg::tap::LgSfLongScene::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfLongScene>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::LgSfLongScene::Builder LgSafeOut::Builder::initLgsfLongscene() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfLongScene>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void LgSafeOut::Builder::adoptLgsfLongscene(
    ::capnp::Orphan< ::senseAD::msg::tap::LgSfLongScene>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfLongScene>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::LgSfLongScene> LgSafeOut::Builder::disownLgsfLongscene() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfLongScene>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool LgSafeOut::Reader::hasLgsfLtap() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool LgSafeOut::Builder::hasLgsfLtap() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::LgSfLtap::Reader LgSafeOut::Reader::getLgsfLtap() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfLtap>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::LgSfLtap::Builder LgSafeOut::Builder::getLgsfLtap() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfLtap>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::LgSfLtap::Pipeline LgSafeOut::Pipeline::getLgsfLtap() {
  return  ::senseAD::msg::tap::LgSfLtap::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void LgSafeOut::Builder::setLgsfLtap( ::senseAD::msg::tap::LgSfLtap::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfLtap>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::LgSfLtap::Builder LgSafeOut::Builder::initLgsfLtap() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfLtap>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void LgSafeOut::Builder::adoptLgsfLtap(
    ::capnp::Orphan< ::senseAD::msg::tap::LgSfLtap>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfLtap>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::LgSfLtap> LgSafeOut::Builder::disownLgsfLtap() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfLtap>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool LgSafeOut::Reader::hasLgsfDiag() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool LgSafeOut::Builder::hasLgsfDiag() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::LgSfDiagInfo::Reader LgSafeOut::Reader::getLgsfDiag() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfDiagInfo>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::LgSfDiagInfo::Builder LgSafeOut::Builder::getLgsfDiag() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfDiagInfo>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::LgSfDiagInfo::Pipeline LgSafeOut::Pipeline::getLgsfDiag() {
  return  ::senseAD::msg::tap::LgSfDiagInfo::Pipeline(_typeless.getPointerField(2));
}
#endif  // !CAPNP_LITE
inline void LgSafeOut::Builder::setLgsfDiag( ::senseAD::msg::tap::LgSfDiagInfo::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfDiagInfo>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::LgSfDiagInfo::Builder LgSafeOut::Builder::initLgsfDiag() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfDiagInfo>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void LgSafeOut::Builder::adoptLgsfDiag(
    ::capnp::Orphan< ::senseAD::msg::tap::LgSfDiagInfo>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfDiagInfo>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::LgSfDiagInfo> LgSafeOut::Builder::disownLgsfDiag() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSfDiagInfo>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline  ::uint8_t LgSafeOut::Reader::getLgsfUseLtap() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSafeOut::Builder::getLgsfUseLtap() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void LgSafeOut::Builder::setLgsfUseLtap( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSafeOut::Reader::getLgsfMajorversion() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSafeOut::Builder::getLgsfMajorversion() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void LgSafeOut::Builder::setLgsfMajorversion( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSafeOut::Reader::getLgsfMinorversion() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSafeOut::Builder::getLgsfMinorversion() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void LgSafeOut::Builder::setLgsfMinorversion( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::uint8_t LgSafeOut::Reader::getLgsfRlc() const {
  return _reader.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::uint8_t LgSafeOut::Builder::getLgsfRlc() {
  return _builder.getDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void LgSafeOut::Builder::setLgsfRlc( ::uint8_t value) {
  _builder.setDataField< ::uint8_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline bool AsControl::Reader::hasLgsf() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool AsControl::Builder::hasLgsf() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::senseAD::msg::tap::LgSafeOut::Reader AsControl::Reader::getLgsf() const {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSafeOut>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::senseAD::msg::tap::LgSafeOut::Builder AsControl::Builder::getLgsf() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSafeOut>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::senseAD::msg::tap::LgSafeOut::Pipeline AsControl::Pipeline::getLgsf() {
  return  ::senseAD::msg::tap::LgSafeOut::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void AsControl::Builder::setLgsf( ::senseAD::msg::tap::LgSafeOut::Reader value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSafeOut>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::senseAD::msg::tap::LgSafeOut::Builder AsControl::Builder::initLgsf() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSafeOut>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void AsControl::Builder::adoptLgsf(
    ::capnp::Orphan< ::senseAD::msg::tap::LgSafeOut>&& value) {
  ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSafeOut>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::senseAD::msg::tap::LgSafeOut> AsControl::Builder::disownLgsf() {
  return ::capnp::_::PointerHelpers< ::senseAD::msg::tap::LgSafeOut>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

}  // namespace
}  // namespace
}  // namespace

CAPNP_END_HEADER

