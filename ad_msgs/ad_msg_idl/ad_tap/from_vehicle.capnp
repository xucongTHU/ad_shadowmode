@0xc70e5d5ab79bf83f;

using Cxx = import "/capnp/c++.capnp";
$Cxx.namespace("senseAD::msg::tap");

using StdHeader = import "/ad_msg_idl/std_msgs/header.capnp";

# topic is: "/tap/from_vehicle"

struct Rsds {
    objId @0:UInt8;
    objLongPosCurvi @1: Float32;
    objLatPosCurvi @2: Float32;
    objLongVelCurvi @3: Float32;
    objLatVelCurvi @4: Float32;
    objTtc @5: Float32;
    objLength @6: UInt8;
    objWidth @7: Float32;
    objStationary @8: UInt8;
    zoneInd @9: UInt8;
    objStatus @10: UInt8;
}

struct RsdsR1 {
    bliStatus @0: UInt8;
    lcaCtaRcwErrorSts @1: UInt8;
    riTarSts @2: UInt8;
    leTarSts @3: UInt8;
}

struct  VcanSRRSignal {
    rsdsL2 @0: Rsds;
    rsdsR2 @1: Rsds;
    rsdsR1 @2: RsdsR1;
}

struct  NavSignal {
    navTSRTrafSgn @0:UInt8;
    navSpdLimSgnStat @1:UInt8;
    navCtryTyp @2: UInt16;
    navSpdLimtUnit @3: UInt8;
    navSpdLimtValue @4: UInt8;
    navSpdLimyTyp @5: UInt8;
    navRoadTyp @6: UInt8;
    navStat @7: UInt8;
    navTSRTrafSgnDist @8:Float32;
    navISDRestOfdis @9: Float32;
    navSLCAheadDis @10: Float32;
    navOffRampStat @11: UInt8;
    navOffRampDist @12: Float32;
}

struct FromVehicle {
    vcanSRRSignal @0: VcanSRRSignal;
    navSignal @1: NavSignal;
    accelPedPos @2: Float32;
    audioTgtSpeed @3: Float32;
    vehicleSpeedDisplay @4: Float32;
    longAccel @5: Float32;
    brkPedalPos @6: Float32;
    engSpd @7: Float32;
    engTrqActual @8: Float32;
    engTrqMax @9: Float32;
    engTrqMin @10: Float32;
    engTrqDrvrRqd @11: Float32;
    ipVehTotDist @12: Float32;
    ldWheelSpd @13: Float32;
    lndWheelSpd @14: Float32;
    mstrIMULatAcc @15: Float32;
    mstrIMULongAcc @16: Float32;
    mstrIMUYawRate @17: Float32;
    rdLdNomAxlTrq @18: Float32;
    vcuRecpTorq @19: Float32;
    rdWheelSpd @20: Float32;
    rndWheelSpd @21: Float32;
    strWhlAng @22: Float32;
    strWhlAngleComp @23: Float32;
    subStrWhlAng @24: Float32;
    subIMUYawRate @25: Float32;
    subIMULatAcc @26: Float32;
    subIMULongAcc @27: Float32;
    torsionBarTrq @28: Float32;
    tsrDispDist @29: Float32;
    vehSpdDrvnAvg @30: Float32;
    vehSpdNDrvnAvg @31: Float32;
    bcsFLWheelSpdEdgesSum @32: Float32;
    bcsFRWheelSpdEdgesSum @33: Float32;
    bcsRLWheelSpdEdgesSum @34: Float32;
    bcsRRWheelSpdEdgesSum @35: Float32;
    flWheelSpdMps @36: Float32;
    frWheelSpdMps @37: Float32;
    rlWheelSpdMps @38: Float32;
    rrWheelSpdMps @39: Float32;
    masterCylinderPrs @40: Float32;
    unusedSingle1 @41: Float32;
    unusedSingle2 @42: Float32;
    drvrReqAxlTrq @43: Int32;
    drvrReqAxlTrqMax @44: Int32;
    drvrReqAxlTrqMin @45: Int32;
    functionDIDConfig @46: UInt32;
    yawRateTimestampMs @47: UInt32;
    brkPdlDrvrApldPrs @48: UInt16;
    strWhlAngSpd @49: Int16;
    vehMassKg @50: UInt16;
    whlDistPerRevDrvn @51: UInt16;
    ldWhlDistPlsCntr @52: UInt16;
    lndWhlDistPCntr @53: UInt16;
    rdWhlDistPlsCntr @54: UInt16;
    rndWhlDistPCntr @55: UInt16;
    subRDWhlDistPlsCntr @56: UInt16;
    subLDWhlDistPlsCntr @57: UInt16;
    subRNDWhlDistPCntr @58: UInt16;
    subLNDWhlDistPCntr @59: UInt16;
    engSpdStat @60: UInt8;
    lgCtrlTrqLmtStat @61: UInt8;
    accelPedPosV @62: UInt8;
    absActive @63: UInt8;
    lgCtrlPTAccReqSprcd @64: UInt8;
    lgCtrlTrqRqStat @65: UInt8;
    lgCtrlBrakeAct @66: UInt8;
    accPdlOvrdAct @67: UInt8;
    longAccelV @68: UInt8;
    lgCtrlTimeGapSw @69: UInt8;
    airbagVirtDevAvl @70: UInt8;
    autoBrakeAct @71: UInt8;
    autoTransCmdGear @72: UInt8;
    brksOvheat @73: UInt8;
    brkSnsrCalbrd @74: UInt8;
    brkPedDrvrApldPrsDetcd @75: UInt8;
    brkPedDrvrApldPrsDetcdV @76: UInt8;
    brkPedalPrsd @77: UInt8;
    brkPedalPrsdV @78: UInt8;
    autoBrkSysFail @79: UInt8;
    chimeVirtDevAvl @80: UInt8;
    lgSafeVehCusSet @81: UInt8;
    lgCtrlEnbld @82: UInt8;
    lgCtrlCancelSw @83: UInt8;
    lgCtrlMainSw @84: UInt8;
    lgCtrlResSw @85: UInt8;
    lgCtrlSetSw @86: UInt8;
    lgCtrlSpdDec @87: UInt8;
    lgCtrlSpdInc @88: UInt8;
    lgCtrlSwStat @89: UInt8;
    crshWarnDrvrSlectTyp @90: UInt8;
    crshWarnSeatAvl @91: UInt8;
    lgCtrlLmtrSwStat @92: UInt8;
    trqIntvnTyp @93: UInt8;
    drvrDoorOpenM @94: UInt8;
    drvrDoorOpen @95: UInt8;
    iPVehSpdUnit @96: UInt8;
    drvrSBFasten @97: UInt8;
    drvrSBFastenV @98: UInt8;
    ePBStat @99: UInt8;
    engRun @100: UInt8;
    ePBCancelLgCtrlRq @101: UInt8;
    lgCtrlSwActDet @102: UInt8;
    fCAClnWarnCustSet @103: UInt8;
    haptcSeatVirtDevAvl @104: UInt8;
    headlampStat @105: UInt8;
    hudVirtDevAvl @106: UInt8;
    hdcStat @107: UInt8;
    handsOffMode @108: UInt8;
    handsOffStat @109: UInt8;
    handsOffStatV @110: UInt8;
    hudAct @111: UInt8;
    ipcVirtDevAvl @112: UInt8;
    lkaTrqOvlDlvdStat @113: UInt8;
    pltFrmEngSpdCmdMdAct @114: UInt8;
    apaAct @115: UInt8;
    apaSwAct @116: UInt8;
    ptBrkPedApld @117: UInt8;
    ptBrkPedApldV @118: UInt8;
    secAxlOperMode @119: UInt8;
    secAxlStat @120: UInt8;
    vehCrashTrig @121: UInt8;
    strWhAngVirtDevAvl @122: UInt8;
    strWhlAngSpdV @123: UInt8;
    sasCalStat @124: UInt8;
    sysPwrModBkup @125: UInt8;
    sysPwrModBkupEn @126: UInt8;
    sysPwrMod @127: UInt8;
    tcsAct @128: UInt8;
    tcsMod @129: UInt8;
    tcsStat @130: UInt8;
    transEstdGear @131: UInt8;
    transTUDMdStat @132: UInt8;
    transEngagedStat @133: UInt8;
    turnLmpSwPos @134: UInt8;
    ipVehTotDistV @135: UInt8;
    vehSpdDrvnAvgV @136: UInt8;
    vehSpdNDrvnAvgV @137: UInt8;
    vseMod @138: UInt8;
    vseStat @139: UInt8;
    vehDynCntlStat @140: UInt8;
    vseAct @141: UInt8;
    ldWheelSpdV @142: UInt8;
    lndWheelSpdV @143: UInt8;
    rdWheelSpdV @144: UInt8;
    rndWheelSpdV @145: UInt8;
    ldWheelRotDir @146: UInt8;
    lndWheelRotDir @147: UInt8;
    rdWheelRotDir @148: UInt8;
    rndWheelRotDir @149: UInt8;
    ldWhlDistVal @150: UInt8;
    lndWhlDistVal @151: UInt8;
    rdWhlDistVal @152: UInt8;
    rndWhlDistVal @153: UInt8;
    washerWprAct @154: UInt8;
    washerWprSwAct @155: UInt8;
    autoBrkSysStat @156: UInt8;
    brkSysExtHoldFail @157: UInt8;
    autoBrkSysInhLgCntl @158: UInt8;
    mstrIMULatAccV @159: UInt8;
    mstrIMULongAccV @160: UInt8;
    mstrIMULongAccAvl @161: UInt8;
    mstrIMUYawRateV @162: UInt8;
    vehMovementStat @163: UInt8;
    lgSafeVRUCusSet @164: UInt8;
    gearLeverPosn @165: UInt8;
    ldpMode @166: UInt8;
    tjaSelect @167: UInt8;
    windShieldWprAct @168: UInt8;
    collPrepSysInhbt @169: UInt8;
    tsrAlertSw @170: UInt8;
    tsrSw @171: UInt8;
    frntFogLmpStat @172: UInt8;
    hlBeamSwStat @173: UInt8;
    ahbcSwStat @174: UInt8;
    psngrDoorAjarSt @175: UInt8;
    rlDoorAjarSt @176: UInt8;
    rrDoorAjarSt @177: UInt8;
    dowSwitchReq @178: UInt8;
    lcaBSDSwitchReq @179: UInt8;
    rctaSwitchReq @180: UInt8;
    recwSwitchReq @181: UInt8;
    fctaSwitchReq @182: UInt8;
    driverDoorLockSt @183: UInt8;
    psngrDoorLockSt @184: UInt8;
    truckAjarSt @185: UInt8;
    insideGeofence @186: UInt8;
    brkPdlType @187: UInt8;
    turnlgtSwSt @188: UInt8;
    daytime @189: UInt8;
    latSafeSnvtySet @190: UInt8;
    isaSw @191: UInt8;
    steerMod @192: UInt8;
    tsrSnvtySet @193: Int8;
    hazLightStat @194: UInt8;
    fcwSnvtySet @195: UInt8;
    lgSafeJACusSet @196: UInt8;
    vehAutoLightCtrlStat @197: UInt8;
    ccoAct @198: UInt8;
    lgCtrlDrvMod @199: UInt8;
    ecoPlusMod @200: UInt8;
    vehMaxSpdLimtKph @201: UInt8;
    dfwSw @202: UInt8;
    lTurnLmpFaultStat @203: UInt8;
    rTurnLmpFaultStat @204: UInt8;
    hodError @205: UInt8;
    hodStat @206: UInt8;
    tirePresrFault @207: UInt8;
    wheelDirForwrdFlg @208: UInt8;
    absESPActvInhbtLat @209: UInt8;
    rearFogLmpStat @210: UInt8;
    lgSafeJAPedCusSet @211: UInt8;
    fcaVRUWarnCustSet @212: UInt8;
    alcSw @213: UInt8;
    lgCtrlTimeGapSetLst @214: UInt8;
    tlrSw @215: UInt8;
    drvrID @216: UInt8;
    tsrSpdLimtValue @217: UInt8;
    lkaLstCtrlVal @218: UInt8;
    tjaSetSw @219: UInt8;
    goNotifCustSet @220: UInt8;
    ussFollowSt @221: UInt8;
    turnLightSt @222: UInt8;
    emsAccButtInfo @223: UInt8;
    autoBrkSysAvailMask @224: UInt8;
    autoBrkSysAtvMask @225: UInt8;
    bcsPrimBrkActiveSt @226: UInt8;
    bcsVehicleStandStillSt @227: UInt8;
    bcsFLWheelRotatedDirection @228: UInt8;
    bcsFRWheelRotatedDirection @229: UInt8;
    bcsRLWheelRotatedDirection @230: UInt8;
    bcsRRWheelRotatedDirection @231: UInt8;
    unusedUint81 @232: UInt8;
    unusedUint82 @233: UInt8;
    unusedUint83 @234: UInt8;
    unusedUint84 @235: UInt8;
    header @236 : StdHeader.Header;
}
